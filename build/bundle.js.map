{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/sveltestrap/src/utils.js","../../node_modules/svelte/store/index.mjs","../../node_modules/sveltestrap/src/transitions.js","../../node_modules/sveltestrap/src/toggle.js","../../node_modules/sveltestrap/src/Collapse.svelte","../../node_modules/svelte/transition/index.mjs","../../node_modules/sveltestrap/src/Alert.svelte","../../node_modules/sveltestrap/src/Badge.svelte","../../node_modules/sveltestrap/src/Button.svelte","../../node_modules/sveltestrap/src/Card.svelte","../../node_modules/sveltestrap/src/CardBody.svelte","../../node_modules/sveltestrap/src/CardText.svelte","../../node_modules/sveltestrap/src/Col.svelte","../../node_modules/sveltestrap/src/Container.svelte","../../node_modules/sveltestrap/src/FormCheck.svelte","../../node_modules/sveltestrap/src/FormFeedback.svelte","../../node_modules/sveltestrap/src/FormGroup.svelte","../../node_modules/sveltestrap/src/Image.svelte","../../node_modules/sveltestrap/src/InlineContainer.svelte","../../node_modules/sveltestrap/src/Input.svelte","../../node_modules/sveltestrap/src/InputGroup.svelte","../../node_modules/sveltestrap/src/InputGroupText.svelte","../../node_modules/sveltestrap/src/Label.svelte","../../node_modules/sveltestrap/src/ListGroup.svelte","../../node_modules/sveltestrap/src/ListGroupItem.svelte","../../node_modules/sveltestrap/src/ModalBackdrop.svelte","../../node_modules/sveltestrap/src/ModalBody.svelte","../../node_modules/sveltestrap/src/ModalHeader.svelte","../../node_modules/sveltestrap/src/Portal.svelte","../../node_modules/sveltestrap/src/Modal.svelte","../../node_modules/sveltestrap/src/ModalFooter.svelte","../../node_modules/sveltestrap/src/Nav.svelte","../../node_modules/sveltestrap/src/Navbar.svelte","../../node_modules/sveltestrap/src/NavItem.svelte","../../node_modules/sveltestrap/src/NavLink.svelte","../../node_modules/sveltestrap/src/NavbarBrand.svelte","../../node_modules/sveltestrap/src/NavbarToggler.svelte","../../node_modules/sveltestrap/src/Pagination.svelte","../../node_modules/sveltestrap/src/PaginationItem.svelte","../../node_modules/sveltestrap/src/PaginationLink.svelte","../../node_modules/sveltestrap/src/Row.svelte","../../node_modules/sveltestrap/src/Spinner.svelte","../../node_modules/svelte-navigator/src/utils.js","../../node_modules/svelte-navigator/src/contexts.js","../../node_modules/svelte-navigator/src/paths.js","../../node_modules/svelte-navigator/src/warning.js","../../node_modules/svelte-navigator/src/routes.js","../../node_modules/svelte-navigator/src/history.js","../../node_modules/svelte-navigator/src/a11y.js","../../node_modules/svelte-navigator/src/Router.svelte","../../node_modules/svelte-navigator/src/hooks.js","../../node_modules/svelte-navigator/src/Route.svelte","../../src/stores.js","../../src/indexdb.js","../../src/components/logic/indexCompiler.js","../../src/components/modalLoadResources.svelte","../../src/components/header.svelte","../../src/components/footer.svelte","../../src/sections/landing.svelte","../../src/components/studio/indexListRight.svelte","../../src/components/studio/modalExportIndex.svelte","../../src/components/studio/indexListLeft.svelte","../../src/components/studio/indexPreviewAnimated.svelte","../../src/components/studio/indexPreviewResource.svelte","../../src/components/studio/indexEdit.svelte","../../src/components/studio/indexHeadListRight.svelte","../../src/components/studio/indexPreviewGrh.svelte","../../src/components/studio/indexHeadEdit.svelte","../../src/components/studio/indexHelmetListRight.svelte","../../src/components/studio/indexHelmetEdit.svelte","../../src/components/studio/indexBodiesListRight.svelte","../../src/components/studio/indexBodiesEdit.svelte","../../src/components/studio/indexFxListRight.svelte","../../src/components/studio/indexFxEdit.svelte","../../src/sections/studio.svelte","../../src/app.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export function getOriginalBodyPadding() {\n  const style = window ? window.getComputedStyle(document.body, null) : {};\n\n  return parseInt((style && style.getPropertyValue('padding-right')) || 0, 10);\n}\n\nexport function getScrollbarWidth() {\n  let scrollDiv = document.createElement('div');\n  // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n}\n\nexport function setScrollbarWidth(padding) {\n  document.body.style.paddingRight = padding > 0 ? `${padding}px` : null;\n}\n\nexport function isBodyOverflowing() {\n  return window ? document.body.clientWidth < window.innerWidth : false;\n}\n\nexport function isObject(value) {\n  const type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport function conditionallyUpdateScrollbar() {\n  const scrollbarWidth = getScrollbarWidth();\n  // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433\n  const fixedContent = document.querySelectorAll(\n    '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\n  )[0];\n  const bodyPadding = fixedContent\n    ? parseInt(fixedContent.style.paddingRight || 0, 10)\n    : 0;\n\n  if (isBodyOverflowing()) {\n    setScrollbarWidth(bodyPadding + scrollbarWidth);\n  }\n}\n\nexport function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : `col-${colWidth}`;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : `col-${colWidth}-auto`;\n  }\n\n  return isXs ? `col-${colSize}` : `col-${colWidth}-${colSize}`;\n}\n\nexport function browserEvent(target, ...args) {\n  target.addEventListener(...args);\n\n  return () => target.removeEventListener(...args);\n}\n\nexport function getNewCarouselActiveIndex(direction, items, activeIndex) {\n  if (direction === 'prev') {\n    return activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n  } else if (direction === 'next') {\n    return activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n  }\n}\n\nfunction toClassName(value) {\n  let result = '';\n\n  if (typeof value === 'string' || typeof value === 'number') {\n    result += value;\n  } else if (typeof value === 'object') {\n    if (Array.isArray(value)) {\n      result = value.map(toClassName).filter(Boolean).join(' ');\n    } else {\n      for (let key in value) {\n        if (value[key]) {\n          result && (result += ' ');\n          result += key;\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nexport default function classnames(...args) {\n  return args.map(toClassName).filter(Boolean).join(' ');\n}\n\nexport function getTransitionDuration(element) {\n  if (!element) return 0;\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } =\n    window.getComputedStyle(element);\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration);\n  const floatTransitionDelay = Number.parseFloat(transitionDelay);\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0;\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0];\n  transitionDelay = transitionDelay.split(',')[0];\n\n  return (\n    (Number.parseFloat(transitionDuration) +\n      Number.parseFloat(transitionDelay)) *\n    1000\n  );\n}\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { getTransitionDuration } from './utils';\n\nexport function backdropIn(node) {\n  node.style.display = 'block';\n\n  const duration = getTransitionDuration(node);\n\n  return {\n    duration,\n    tick: (t) => {\n      if (t === 0) {\n        node.classList.add('show');\n      }\n    }\n  };\n}\n\nexport function backdropOut(node) {\n  node.classList.remove('show');\n  const duration = getTransitionDuration(node);\n\n  return {\n    duration,\n    tick: (t) => {\n      if (t === 0) {\n        node.style.display = 'none';\n      }\n    }\n  };\n}\n\nexport function collapseOut(node) {\n  node.style.height = `${node.getBoundingClientRect().height}px`;\n  node.classList.add('collapsing');\n  node.classList.remove('collapse', 'show');\n  const duration = getTransitionDuration(node);\n\n  return {\n    duration,\n    tick: (t) => {\n      if (t > 0) {\n        node.style.height = '';\n      } else if (t === 0) {\n        node.classList.remove('collapsing');\n        node.classList.add('collapse');\n      }\n    }\n  };\n}\n\nexport function collapseIn(node) {\n  node.classList.add('collapsing');\n  node.classList.remove('collapse', 'show');\n  node.style.height = 0;\n  const duration = getTransitionDuration(node);\n\n  return {\n    duration,\n    tick: (t) => {\n      if (t < 1) {\n        node.style.height = `${node.scrollHeight}px`;\n      } else {\n        node.classList.remove('collapsing');\n        node.classList.add('collapse', 'show');\n        node.style.height = '';\n      }\n    }\n  };\n}\n\nexport function modalIn(node) {\n  node.style.display = 'block';\n  const duration = getTransitionDuration(node);\n\n  return {\n    duration,\n    tick: (t) => {\n      if (t > 0) {\n        node.classList.add('show');\n      }\n    }\n  };\n}\n\nexport function modalOut(node) {\n  node.classList.remove('show');\n  const duration = getTransitionDuration(node);\n\n  return {\n    duration,\n    tick: (t) => {\n      if (t === 1) {\n        node.style.display = 'none';\n      }\n    }\n  };\n}\n","const defaultToggleEvents = ['touchstart', 'click'];\n\nexport default (toggler, togglerFn) => {\n  let unbindEvents;\n\n  if (\n    typeof toggler === 'string' &&\n    typeof window !== 'undefined' &&\n    document &&\n    document.createElement\n  ) {\n    let selection = document.querySelectorAll(toggler);\n    if (!selection.length) {\n      selection = document.querySelectorAll(`#${toggler}`);\n    }\n    if (!selection.length) {\n      throw new Error(\n        `The target '${toggler}' could not be identified in the dom, tip: check spelling`\n      );\n    }\n\n    defaultToggleEvents.forEach((event) => {\n      selection.forEach((element) => {\n        element.addEventListener(event, togglerFn);\n      });\n    });\n\n    unbindEvents = () => {\n      defaultToggleEvents.forEach((event) => {\n        selection.forEach((element) => {\n          element.removeEventListener(event, togglerFn);\n        });\n      });\n    };\n  }\n\n  return () => {\n    if (typeof unbindEvents === 'function') {\n      unbindEvents();\n      unbindEvents = undefined;\n    }\n  };\n};\n","<script>\n  import { createEventDispatcher, onMount } from 'svelte';\n  import { collapseIn, collapseOut } from './transitions';\n  import classnames from './utils';\n  import toggle from './toggle';\n\n  const dispatch = createEventDispatcher();\n\n  export let isOpen = false;\n  let className = '';\n  export { className as class };\n  export let navbar = false;\n  export let onEntering = () => dispatch('opening');\n  export let onEntered = () => dispatch('open');\n  export let onExiting = () => dispatch('closing');\n  export let onExited = () => dispatch('close');\n  export let expand = false;\n  export let toggler = null;\n\n  onMount(() => toggle(toggler, (e) => {\n    isOpen = !isOpen;\n    e.preventDefault();\n  }));\n\n  $: classes = classnames(className, navbar && 'navbar-collapse');\n\n  let windowWidth = 0;\n  let _wasMaximized = false;\n\n  // TODO wrong to hardcode these here - come from Bootstrap CSS only\n  const minWidth = {};\n  minWidth['xs'] = 0;\n  minWidth['sm'] = 576;\n  minWidth['md'] = 768;\n  minWidth['lg'] = 992;\n  minWidth['xl'] = 1200;\n\n  function notify() {\n    dispatch('update', isOpen);\n  }\n\n  $: if (navbar && expand) {\n    if (windowWidth >= minWidth[expand] && !isOpen) {\n      isOpen = true;\n      _wasMaximized = true;\n      notify();\n    } else if (windowWidth < minWidth[expand] && _wasMaximized) {\n      isOpen = false;\n      _wasMaximized = false;\n      notify();\n    }\n  }\n</script>\n\n<svelte:window bind:innerWidth={windowWidth} />\n\n{#if isOpen}\n  <div\n    style={navbar ? undefined : 'overflow: hidden;'}\n    {...$$restProps}\n    class={classes}\n    in:collapseIn\n    out:collapseOut|local\n    on:introstart\n    on:introend\n    on:outrostart\n    on:outroend\n    on:introstart={onEntering}\n    on:introend={onEntered}\n    on:outrostart={onExiting}\n    on:outroend={onExited}\n  >\n    <slot />\n  </div>\n{/if}\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\n  import { fade as fadeTransition } from 'svelte/transition';\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let children = undefined;\n  export let color = 'success';\n  export let closeClassName = '';\n  export let closeAriaLabel = 'Close';\n  export let dismissible = false;\n  export let heading = undefined;\n  export let isOpen = true;\n  export let toggle = undefined;\n  export let fade = true;\n  export let transition = { duration: fade ? 400 : 0 };\n\n  $: showClose = dismissible || toggle;\n  $: handleToggle = toggle || (() => (isOpen = false));\n  $: classes = classnames(className, 'alert', `alert-${color}`, {\n    'alert-dismissible': showClose\n  });\n  $: closeClassNames = classnames('btn-close', closeClassName);\n</script>\n\n{#if isOpen}\n  <div\n    {...$$restProps}\n    transition:fadeTransition={transition}\n    class={classes}\n    role=\"alert\"\n  >\n    {#if heading || $$slots.heading}\n      <h4 class=\"alert-heading\">\n        {heading}<slot name=\"heading\" />\n      </h4>\n    {/if}\n    {#if showClose}\n      <button\n        type=\"button\"\n        class={closeClassNames}\n        aria-label={closeAriaLabel}\n        on:click={handleToggle}\n      />\n    {/if}\n    {#if children}\n      {children}\n    {:else}\n      <slot />\n    {/if}\n  </div>\n{/if}\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let children = undefined;\n  export let color = 'secondary';\n  export let href = undefined;\n  export let pill = false;\n\n  $: classes = classnames(\n    className,\n    'badge',\n    `bg-${color}`,\n    pill ? 'rounded-pill' : false\n  );\n</script>\n\n{#if href}\n  <a {...$$restProps} {href} class={classes}>\n    {#if children}\n      {children}\n    {:else}\n      <slot />\n    {/if}\n  </a>\n{:else}\n  <span {...$$restProps} class={classes}>\n    {#if children}\n      {children}\n    {:else}\n      <slot />\n    {/if}\n  </span>\n{/if}\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let active = false;\n  export let block = false;\n  export let children = undefined;\n  export let close = false;\n  export let color = 'secondary';\n  export let disabled = false;\n  export let href = '';\n  export let inner = undefined;\n  export let outline = false;\n  export let size = null;\n  export let style = '';\n  export let value = '';\n  export let white = false;\n\n  $: ariaLabel = $$props['aria-label'];\n\n  $: classes = classnames(\n    className,\n    close ? 'btn-close' : 'btn',\n    close || `btn${outline ? '-outline' : ''}-${color}`,\n    size ? `btn-${size}` : false,\n    block ? 'd-block w-100' : false,\n    {\n      active,\n      'btn-close-white': close && white,\n    }\n  );\n\n  $: defaultAriaLabel = close ? 'Close' : null;\n</script>\n\n{#if href}\n  <a\n    {...$$restProps}\n    class={classes}\n    {disabled}\n    bind:this={inner}\n    on:click\n    {href}\n    aria-label={ariaLabel || defaultAriaLabel}\n    {style}\n  >\n    {#if children}\n      {children}\n    {:else}\n      <slot />\n    {/if}\n  </a>\n{:else}\n  <button\n    {...$$restProps}\n    class={classes}\n    {disabled}\n    bind:this={inner}\n    on:click\n    {value}\n    aria-label={ariaLabel || defaultAriaLabel}\n    {style}\n  >\n    <slot>\n      {#if children}\n        {children}\n      {:else}\n        <slot />\n      {/if}\n    </slot>\n  </button>\n{/if}\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let body = false;\n  export let color = '';\n  export let inverse = false;\n  export let outline = false;\n  export let style = '';\n\n  $: classes = classnames(\n    className,\n    'card',\n    inverse ? 'text-white' : false,\n    body ? 'card-body' : false,\n    color ? `${outline ? 'border' : 'bg'}-${color}` : false\n  );\n</script>\n\n<div {...$$restProps} class={classes} on:click {style}>\n  <slot />\n</div>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n\n  $: classes = classnames(className, 'card-body');\n</script>\n\n<div {...$$restProps} class={classes}>\n  <slot />\n</div>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n\n  $: classes = classnames(className, 'card-text');\n</script>\n\n<p {...$$restProps} class={classes}>\n  <slot />\n</p>\n","<script>\n  import { getColumnSizeClass, isObject } from './utils';\n\n  let className = '';\n  export { className as class };\n  export let xs = undefined;\n  export let sm = undefined;\n  export let md = undefined;\n  export let lg = undefined;\n  export let xl = undefined;\n  export let xxl = undefined;\n\n  const colClasses = [];\n  const lookup = {\n    xs,\n    sm,\n    md,\n    lg,\n    xl,\n    xxl\n  };\n\n  Object.keys(lookup).forEach((colWidth) => {\n    const columnProp = lookup[colWidth];\n    if (!columnProp && columnProp !== '') {\n      return; //no value for this width\n    }\n\n    const isXs = colWidth === 'xs';\n\n    if (isObject(columnProp)) {\n      const colSizeInterfix = isXs ? '-' : `-${colWidth}-`;\n      const colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n\n      if (columnProp.size || columnProp.size === '') {\n        colClasses.push(colClass);\n      }\n      if (columnProp.push) {\n        colClasses.push(`push${colSizeInterfix}${columnProp.push}`);\n      }\n      if (columnProp.pull) {\n        colClasses.push(`pull${colSizeInterfix}${columnProp.pull}`);\n      }\n      if (columnProp.offset) {\n        colClasses.push(`offset${colSizeInterfix}${columnProp.offset}`);\n      }\n      if (columnProp.order) {\n        colClasses.push(`order${colSizeInterfix}${columnProp.order}`);\n      }\n    } else {\n      colClasses.push(getColumnSizeClass(isXs, colWidth, columnProp));\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  if (className) {\n    colClasses.push(className);\n  }\n</script>\n\n<div {...$$restProps} class={colClasses.join(' ')}>\n  <slot />\n</div>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let sm = undefined;\n  export let md = undefined;\n  export let lg = undefined;\n  export let xl = undefined;\n  export let xxl = undefined;\n  export let fluid = false;\n\n  $: classes = classnames(className, {\n    'container-sm': sm,\n    'container-md': md,\n    'container-lg': lg,\n    'container-xl': xl,\n    'container-xxl': xxl,\n    'container-fluid': fluid,\n    container: !sm && !md && !lg && !xl && !xxl && !fluid\n  });\n</script>\n\n<div {...$$restProps} class={classes}>\n  <slot />\n</div>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let checked = false;\n  export let disabled = false;\n  export let group = undefined;\n  export let id = undefined;\n  export let inline = false;\n  export let inner = undefined;\n  export let invalid = false;\n  export let label = '';\n  export let name = '';\n  export let size = '';\n  export let type = 'checkbox';\n  export let valid = false;\n  export let value = undefined;\n\n  $: classes = classnames(className, 'form-check', {\n    'form-switch': type === 'switch',\n    'form-check-inline': inline,\n    [`form-control-${size}`]: size\n  });\n\n  $: inputClasses = classnames('form-check-input', {\n    'is-invalid': invalid,\n    'is-valid': valid\n  });\n  $: idFor = id || label;\n</script>\n\n<div class={classes}>\n  {#if type === 'radio'}\n    <input\n      {...$$restProps}\n      class={inputClasses}\n      id={idFor}\n      type=\"radio\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      bind:group\n      bind:this={inner}\n      {disabled}\n      {name}\n      {value}\n    />\n  {:else if type === 'switch'}\n    <input\n      {...$$restProps}\n      class={inputClasses}\n      id={idFor}\n      type=\"checkbox\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      bind:checked\n      bind:this={inner}\n      {disabled}\n      {name}\n      {value}\n    />\n  {:else}\n    <input\n      {...$$restProps}\n      class={inputClasses}\n      id={idFor}\n      type=\"checkbox\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      bind:checked\n      bind:this={inner}\n      {disabled}\n      {name}\n      {value}\n    />\n  {/if}\n  {#if label}\n    <label class=\"form-check-label\" for={idFor}>\n      <slot name=\"label\">{label}</slot>\n    </label>\n  {/if}\n</div>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let valid = undefined;\n  export let tooltip = false;\n  let classes;\n\n  $: {\n    const validMode = tooltip ? 'tooltip' : 'feedback';\n\n    classes = classnames(\n      className,\n      valid ? `valid-${validMode}` : `invalid-${validMode}`\n    );\n  }\n</script>\n\n<div {...$$restProps} class={classes}>\n  <slot />\n</div>\n","<script>\n  import classnames from './utils';\n\n  export let className = '';\n  export { className as class };\n  export let check = false;\n  export let disabled = false;\n  export let floating = false;\n  export let inline = false;\n  export let label = '';\n  export let row = false;\n  export let tag = null;\n\n  $: classes = classnames(className, 'mb-3', {\n    row,\n    'form-check': check,\n    'form-check-inline': check && inline,\n    'form-floating': floating,\n    disabled: check && disabled\n  });\n</script>\n\n{#if tag === 'fieldset'}\n  <fieldset {...$$restProps} class={classes}>\n    <slot />\n    {#if label || $$slots.label}\n      <!-- svelte-ignore a11y-label-has-associated-control -->\n      <label>\n        {label}\n        <slot name=\"label\" />\n      </label>\n    {/if}\n  </fieldset>\n{:else}\n  <div {...$$restProps} class={classes}>\n    <slot />\n    {#if label || $$slots.label}\n      <!-- svelte-ignore a11y-label-has-associated-control -->\n      <label>\n        {label}\n        <slot name=\"label\" />\n      </label>\n    {/if}\n  </div>\n{/if}\n","<script>\n  import { getContext } from 'svelte';\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let alt = undefined;\n  export let figure = getContext('figure');\n  export let fluid = false;\n  export let thumbnail = false;\n\n  $: classes = classnames(className, {\n    'figure-img': figure,\n    'img-fluid': fluid,\n    'img-thumbnail': thumbnail\n  });\n</script>\n\n<img {alt} {...$$restProps} class={classes} />\n","<script>\n  let x = 'wtf svelte?'; // eslint-disable-line\n</script>\n<div><slot /></div>\n","<script>\n  import FormCheck from './FormCheck.svelte';\n  import FormFeedback from './FormFeedback.svelte';\n\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n\n  export let bsSize = undefined;\n  export let checked = false;\n  export let color = undefined;\n  export let disabled = undefined;\n  export let feedback = undefined;\n  export let files = undefined;\n  export let group = undefined;\n  export let inner = undefined;\n  export let invalid = false;\n  export let label = undefined;\n  export let multiple = undefined;\n  export let name = '';\n  export let placeholder = '';\n  export let plaintext = false;\n  export let readonly = undefined;\n  export let size = undefined;\n  export let type = 'text';\n  export let valid = false;\n  export let value = '';\n\n  let classes;\n  let tag;\n  $: {\n    const isNotaNumber = new RegExp('\\\\D', 'g');\n\n    let isBtn = false;\n    let formControlClass = 'form-control';\n    tag = 'input';\n\n    switch (type) {\n      case 'color':\n        formControlClass = `form-control form-control-color`;\n        break;\n      case 'range':\n        formControlClass = 'form-range';\n        break;\n      case 'select':\n        formControlClass = `form-select`;\n        tag = 'select';\n        break;\n      case 'textarea':\n        tag = 'textarea';\n        break;\n      case 'button':\n      case 'reset':\n      case 'submit':\n        formControlClass = `btn btn-${color || 'secondary'}`;\n        isBtn = true;\n        break;\n      case 'hidden':\n      case 'image':\n        formControlClass = undefined;\n        break;\n      default:\n        formControlClass = 'form-control';\n        tag = 'input';\n    }\n    if (plaintext) {\n      formControlClass = `${formControlClass}-plaintext`;\n      tag = 'input';\n    }\n\n    if (size && isNotaNumber.test(size)) {\n      console.warn(\n        'Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.'\n      );\n      bsSize = size;\n      size = undefined;\n    }\n\n    classes = classnames(className, formControlClass, {\n      'is-invalid': invalid,\n      'is-valid': valid,\n      [`form-control-${bsSize}`]: bsSize && !isBtn,\n      [`btn-${bsSize}`]: bsSize && isBtn\n    });\n  }\n\n  const handleInput = (event) => {\n    value = event.target.value;\n  };\n</script>\n\n{#if tag === 'input'}\n  {#if type === 'text'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"text\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {disabled}\n      {name}\n      {placeholder}\n      {readonly}\n      {size}\n    />\n  {:else if type === 'password'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"password\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {disabled}\n      {name}\n      {placeholder}\n      {readonly}\n      {size}\n    />\n  {:else if type === 'color'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"color\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {disabled}\n      {name}\n      {placeholder}\n      {readonly}\n    />\n  {:else if type === 'email'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"email\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {disabled}\n      {multiple}\n      {name}\n      {placeholder}\n      {readonly}\n      {size}\n    />\n  {:else if type === 'file'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"file\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:files\n      bind:value\n      bind:this={inner}\n      {disabled}\n      {invalid}\n      {multiple}\n      {name}\n      {placeholder}\n      {readonly}\n      {valid}\n    />\n  {:else if type === 'checkbox' || type === 'radio' || type === 'switch'}\n    <FormCheck\n      {...$$restProps}\n      class={className}\n      size={bsSize}\n      {type}\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:checked\n      bind:inner\n      bind:group\n      bind:value\n      {disabled}\n      {invalid}\n      {label}\n      {name}\n      {placeholder}\n      {readonly}\n      {valid}\n    />\n  {:else if type === 'url'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"url\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {disabled}\n      {name}\n      {placeholder}\n      {readonly}\n      {size}\n    />\n  {:else if type === 'number'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"number\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {readonly}\n      {name}\n      {disabled}\n      {placeholder}\n    />\n  {:else if type === 'date'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"date\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {disabled}\n      {name}\n      {placeholder}\n      {readonly}\n    />\n  {:else if type === 'time'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"time\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {disabled}\n      {name}\n      {placeholder}\n      {readonly}\n    />\n  {:else if type === 'datetime'}\n    <input\n      {...$$restProps}\n      type=\"datetime\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder}\n    />\n  {:else if type === 'datetime-local'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"datetime-local\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {disabled}\n      {name}\n      {placeholder}\n      {readonly}\n    />\n  {:else if type === 'month'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"month\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {disabled}\n      {name}\n      {placeholder}\n      {readonly}\n    />\n  {:else if type === 'color'}\n    <input\n      {...$$restProps}\n      type=\"color\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder}\n    />\n  {:else if type === 'range'}\n    <input\n      {...$$restProps}\n      type=\"range\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder}\n    />\n  {:else if type === 'search'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"search\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {disabled}\n      {name}\n      {placeholder}\n      {readonly}\n      {size}\n    />\n  {:else if type === 'tel'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"tel\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {disabled}\n      {name}\n      {placeholder}\n      {readonly}\n      {size}\n    />\n  {:else if type === 'week'}\n    <input\n      {...$$restProps}\n      class={classes}\n      type=\"week\"\n      on:blur\n      on:change\n      on:focus\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      bind:value\n      bind:this={inner}\n      {disabled}\n      {name}\n      {placeholder}\n      {readonly}\n    />\n  {:else}\n    <input\n      {...$$restProps}\n      {type}\n      on:blur\n      on:change={handleInput}\n      on:focus\n      on:input={handleInput}\n      on:keydown\n      on:keypress\n      on:keyup\n      {readonly}\n      class={classes}\n      {name}\n      {disabled}\n      {placeholder}\n      {value}\n    />\n  {/if}\n{:else if tag === 'textarea'}\n  <textarea\n    {...$$restProps}\n    class={classes}\n    on:blur\n    on:change\n    on:focus\n    on:input\n    on:keydown\n    on:keypress\n    on:keyup\n    bind:value\n    bind:this={inner}\n    {disabled}\n    {name}\n    {placeholder}\n    {readonly}\n  />\n{:else if tag === 'select' && !multiple}\n  <select\n    {...$$restProps}\n    class={classes}\n    on:blur\n    on:change\n    on:focus\n    on:input\n    bind:value\n    bind:this={inner}\n    {name}\n    {disabled}\n    {readonly}\n  >\n    <slot />\n  </select>\n\n  <!-- {:else if tag === 'select' && multiple}\n  <select\n    {...$$restProps}\n    multiple\n    class={classes}\n    on:blur\n    on:focus\n    on:change\n    on:input\n    bind:value\n    bind:this={inner}\n    {name}\n    {disabled}>\n    <slot />\n  </select> -->\n{/if}\n{#if feedback}\n  {#if Array.isArray(feedback)}\n    {#each feedback as msg}\n      <FormFeedback {valid}>{msg}</FormFeedback>\n    {/each}\n  {:else}\n    <FormFeedback {valid}>{feedback}</FormFeedback>\n  {/if}\n{/if}\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let size = '';\n\n  $: classes = classnames(\n    className,\n    'input-group',\n    size ? `input-group-${size}` : null\n  );\n</script>\n\n<div {...$$restProps} class={classes}>\n  <slot />\n</div>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n\n  $: classes = classnames(className, 'input-group-text');\n</script>\n\n<span {...$$restProps} class={classes}>\n  <slot />\n</span>\n","<script>\n  import classnames from './utils';\n\n  import { getColumnSizeClass, isObject } from './utils';\n\n  let className = '';\n\n  export { className as class };\n  export let hidden = false;\n  export let check = false;\n  export let size = '';\n  export let fore = null;\n  export { fore as for };\n  export let xs = '';\n  export let sm = '';\n  export let md = '';\n  export let lg = '';\n  export let xl = '';\n  export let xxl = '';\n\n  const colWidths = {\n    xs,\n    sm,\n    md,\n    lg,\n    xl,\n    xxl\n  };\n  export let widths = Object.keys(colWidths);\n\n  const colClasses = [];\n\n  widths.forEach((colWidth) => {\n    let columnProp = $$props[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    const isXs = colWidth === 'xs';\n    let colClass;\n\n    if (isObject(columnProp)) {\n      const colSizeInterfix = isXs ? '-' : `-${colWidth}-`;\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n\n      colClasses.push(\n        classnames({\n          [colClass]: columnProp.size || columnProp.size === '',\n          [`order${colSizeInterfix}${columnProp.order}`]:\n            columnProp.order || columnProp.order === 0,\n          [`offset${colSizeInterfix}${columnProp.offset}`]:\n            columnProp.offset || columnProp.offset === 0\n        })\n      );\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n\n  $: classes = classnames(\n    className,\n    hidden ? 'visually-hidden' : false,\n    check ? 'form-check-label' : false,\n    size ? `col-form-label-${size}` : false,\n    colClasses,\n    colClasses.length ? 'col-form-label' : 'form-label'\n  );\n</script>\n\n<label {...$$restProps} class={classes} for={fore}>\n  <slot />\n</label>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let flush = false;\n  export let numbered = false;\n\n  $: classes = classnames(className, 'list-group', {\n    'list-group-flush': flush,\n    'list-group-numbered': numbered\n  });\n</script>\n\n{#if numbered}\n  <ol {...$$restProps} class={classes}>\n    <slot />\n  </ol>\n{:else}\n  <ul {...$$restProps} class={classes}>\n    <slot />\n  </ul>\n{/if}\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let active = false;\n  export let disabled = false;\n  export let color = '';\n  export let action = false;\n  export let href = null;\n  export let tag = null;\n\n  $: classes = classnames(className, 'list-group-item', {\n    active,\n    disabled,\n    'list-group-item-action': action || tag === 'button',\n    [`list-group-item-${color}`]: color\n  });\n</script>\n\n{#if href}\n  <a {...$$restProps} class={classes} on:click {href} {disabled} {active}>\n    <slot />\n  </a>\n{:else if tag === 'button'}\n  <button\n    {...$$restProps}\n    class={classes}\n    type=\"button\"\n    on:click\n    {disabled}\n    {active}\n  >\n    <slot />\n  </button>\n{:else}\n  <li {...$$restProps} class={classes} on:click {disabled} {active}>\n    <slot />\n  </li>\n{/if}\n","<script>\n  // TODO only allow single backdrop open at once.\n  import { onMount } from 'svelte';\n  import classnames from './utils';\n  import { backdropIn, backdropOut } from './transitions.js';\n\n  let className = '';\n  export { className as class };\n  export let isOpen = false;\n  export let fade = true;\n\n  let loaded = false;\n  onMount(() => {\n    loaded = true;\n  });\n\n  $: classes = classnames(className, 'modal-backdrop');\n</script>\n\n{#if isOpen && loaded}\n  <div\n    {...$$restProps}\n    on:click\n    class={classes}\n    class:fade\n    in:backdropIn\n    out:backdropOut\n  />\n{/if}\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n\n  $: classes = classnames(className, 'modal-body');\n</script>\n\n<div {...$$restProps} class={classes}>\n  <slot />\n</div>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let toggle = undefined;\n  export let closeAriaLabel = 'Close';\n  export let children = undefined;\n  export let id = undefined;\n\n  $: classes = classnames(className, 'modal-header');\n</script>\n\n<div {...$$restProps} class={classes}>\n  <h5 class=\"modal-title\" id={id}>\n    {#if children}\n      {children}\n    {:else}\n      <slot />\n    {/if}\n  </h5>\n  <slot name=\"close\">\n    {#if typeof toggle === 'function'}\n      <button\n        type=\"button\"\n        on:click={toggle}\n        class=\"btn-close\"\n        aria-label={closeAriaLabel}\n      />\n    {/if}\n  </slot>\n</div>\n","<script>\n  import { onMount, onDestroy } from 'svelte';\n  let ref;\n  let portal;\n\n  onMount(() => {\n    portal = document.createElement('div');\n    document.body.appendChild(portal);\n    portal.appendChild(ref);\n  });\n\n  onDestroy(() => {\n    if (typeof document !== 'undefined') {\n      document.body.removeChild(portal);\n    }\n  });\n</script>\n\n<div bind:this={ref} {...$$restProps}>\n  <slot />\n</div>\n","<script context=\"module\">\n  // TODO fade option\n  let openCount = 0;\n</script>\n\n<script>\n  import classnames from './utils';\n  import { browserEvent } from './utils';\n  import {\n    createEventDispatcher,\n    onDestroy,\n    onMount,\n    afterUpdate\n  } from 'svelte';\n  import { modalIn, modalOut } from './transitions';\n  import InlineContainer from './InlineContainer.svelte';\n  import ModalBackdrop from './ModalBackdrop.svelte';\n  import ModalBody from './ModalBody.svelte';\n  import ModalHeader from './ModalHeader.svelte';\n  import Portal from './Portal.svelte';\n  import {\n    conditionallyUpdateScrollbar,\n    getOriginalBodyPadding,\n    setScrollbarWidth,\n    uuid\n  } from './utils';\n\n  const dispatch = createEventDispatcher();\n\n  let className = '';\n  let staticModal = false;\n  export { className as class };\n  export { staticModal as static };\n  export let isOpen = false;\n  export let autoFocus = true;\n  export let body = false;\n  export let centered = false;\n  export let container = undefined;\n  export let fullscreen = false;\n  export let header = undefined;\n  export let scrollable = false;\n  export let size = '';\n  export let toggle = undefined;\n  export let labelledBy = header ? `modal-${uuid()}` : undefined;\n  export let backdrop = true;\n  export let wrapClassName = '';\n  export let modalClassName = '';\n  export let contentClassName = '';\n  export let fade = true;\n  export let unmountOnClose = true;\n  export let returnFocusAfterClose = true;\n\n  let hasOpened = false;\n  let _isMounted = false;\n  let _triggeringElement;\n  let _originalBodyPadding;\n  let _lastIsOpen = isOpen;\n  let _lastHasOpened = hasOpened;\n  let _dialog;\n  let _mouseDownElement;\n  let _removeEscListener;\n\n  onMount(() => {\n    if (isOpen) {\n      init();\n      hasOpened = true;\n    }\n\n    if (hasOpened && autoFocus) {\n      setFocus();\n    }\n  });\n\n  onDestroy(() => {\n    destroy();\n    if (hasOpened) {\n      close();\n    }\n  });\n\n  afterUpdate(() => {\n    if (isOpen && !_lastIsOpen) {\n      init();\n      hasOpened = true;\n    }\n\n    if (autoFocus && hasOpened && !_lastHasOpened) {\n      setFocus();\n    }\n\n    _lastIsOpen = isOpen;\n    _lastHasOpened = hasOpened;\n  });\n\n  function setFocus() {\n    if (\n      _dialog &&\n      _dialog.parentNode &&\n      typeof _dialog.parentNode.focus === 'function'\n    ) {\n      _dialog.parentNode.focus();\n    }\n  }\n\n  function init() {\n    try {\n      _triggeringElement = document.activeElement;\n    } catch (err) {\n      _triggeringElement = null;\n    }\n\n    if (!staticModal) {\n      _originalBodyPadding = getOriginalBodyPadding();\n      conditionallyUpdateScrollbar();\n      if (openCount === 0) {\n        document.body.className = classnames(\n          document.body.className,\n          'modal-open'\n        );\n      }\n\n      ++openCount;\n    }\n    _isMounted = true;\n  }\n\n  function manageFocusAfterClose() {\n    if (_triggeringElement) {\n      if (\n        typeof _triggeringElement.focus === 'function' &&\n        returnFocusAfterClose\n      ) {\n        _triggeringElement.focus();\n      }\n\n      _triggeringElement = null;\n    }\n  }\n\n  function destroy() {\n    manageFocusAfterClose();\n  }\n\n  function close() {\n    if (openCount <= 1) {\n      document.body.classList.remove('modal-open');\n    }\n\n    manageFocusAfterClose();\n    openCount = Math.max(0, openCount - 1);\n\n    setScrollbarWidth(_originalBodyPadding);\n  }\n\n  function handleBackdropClick(e) {\n    if (e.target === _mouseDownElement) {\n      e.stopPropagation();\n      if (!isOpen || !backdrop) {\n        return;\n      }\n\n      const backdropElem = _dialog ? _dialog.parentNode : null;\n      if (\n        backdrop === true &&\n        backdropElem &&\n        e.target === backdropElem &&\n        toggle\n      ) {\n        toggle(e);\n      }\n    }\n  }\n\n  function onModalOpened() {\n    dispatch('open');\n    _removeEscListener = browserEvent(document, 'keydown', (event) => {\n      if (event.key && event.key === 'Escape') {\n        if (toggle && backdrop === true) {\n          if (_removeEscListener) _removeEscListener();\n          toggle(event);\n        }\n      }\n    });\n  }\n\n  function onModalClosing() {\n    dispatch('closing');\n    if (_removeEscListener) {\n      _removeEscListener();\n    }\n  }\n\n  function onModalClosed() {\n    dispatch('close');\n    if (unmountOnClose) {\n      destroy();\n    }\n    close();\n    if (_isMounted) {\n      hasOpened = false;\n    }\n    _isMounted = false;\n  }\n\n  function handleBackdropMouseDown(e) {\n    _mouseDownElement = e.target;\n  }\n\n  const dialogBaseClass = 'modal-dialog';\n\n  $: classes = classnames(dialogBaseClass, className, {\n    [`modal-${size}`]: size,\n    'modal-fullscreen': fullscreen === true,\n    [`modal-fullscreen-${fullscreen}-down`]:\n      fullscreen && typeof fullscreen === 'string',\n    [`${dialogBaseClass}-centered`]: centered,\n    [`${dialogBaseClass}-scrollable`]: scrollable\n  });\n\n  $: outer = container === 'inline' || staticModal ? InlineContainer : Portal;\n</script>\n\n{#if _isMounted}\n  <svelte:component this={outer}>\n    <div class={wrapClassName} tabindex=\"-1\" {...$$restProps}>\n      {#if isOpen}\n        <div\n          in:modalIn\n          out:modalOut\n          aria-labelledby={labelledBy}\n          class={classnames('modal', modalClassName, {\n            fade,\n            'position-static': staticModal\n          })}\n          role=\"dialog\"\n          on:introstart={() => dispatch('opening')}\n          on:introend={onModalOpened}\n          on:outrostart={onModalClosing}\n          on:outroend={onModalClosed}\n          on:click={handleBackdropClick}\n          on:mousedown={handleBackdropMouseDown}\n        >\n          <slot name=\"external\" />\n          <div class={classes} role=\"document\" bind:this={_dialog}>\n            <div class={classnames('modal-content', contentClassName)}>\n              {#if header}\n                <ModalHeader {toggle} id={labelledBy}>\n                  {header}\n                </ModalHeader>\n              {/if}\n              {#if body}\n                <ModalBody>\n                  <slot />\n                </ModalBody>\n              {:else}\n                <slot />\n              {/if}\n            </div>\n          </div>\n        </div>\n      {/if}\n    </div>\n  </svelte:component>\n{/if}\n{#if backdrop && !staticModal}\n  <svelte:component this={outer}>\n    <ModalBackdrop {fade} {isOpen} />\n  </svelte:component>\n{/if}\n\n<style>\n  :global(.modal-open) {\n    overflow: hidden;\n    padding-right: 0;\n  }\n</style>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n\n  $: classes = classnames(className, 'modal-footer');\n</script>\n\n<div {...$$restProps} class={classes}>\n  <slot />\n</div>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let tabs = false;\n  export let pills = false;\n  export let vertical = false;\n  export let horizontal = '';\n  export let justified = false;\n  export let fill = false;\n  export let navbar = false;\n  export let card = false;\n\n  function getVerticalClass(vertical) {\n    if (vertical === false) {\n      return false;\n    } else if (vertical === true || vertical === 'xs') {\n      return 'flex-column';\n    }\n    return `flex-${vertical}-column`;\n  }\n\n  $: classes = classnames(\n    className,\n    navbar ? 'navbar-nav' : 'nav',\n    horizontal ? `justify-content-${horizontal}` : false,\n    getVerticalClass(vertical),\n    {\n      'nav-tabs': tabs,\n      'card-header-tabs': card && tabs,\n      'nav-pills': pills,\n      'card-header-pills': card && pills,\n      'nav-justified': justified,\n      'nav-fill': fill\n    }\n  );\n</script>\n\n<ul {...$$restProps} class={classes}>\n  <slot />\n</ul>\n","<script>\n  import classnames from './utils';\n  import Container from './Container.svelte';\n  import { setContext } from 'svelte';\n\n  setContext('navbar', {\n    inNavbar: true\n  });\n\n  let className = '';\n  export { className as class };\n  export let container = 'fluid';\n  export let color = '';\n  export let dark = false;\n  export let expand = false || '';\n  export let fixed = '';\n  export let light = false;\n  export let sticky = '';\n\n  function getExpandClass(expand) {\n    if (expand === false) {\n      return false;\n    } else if (expand === true || expand === 'xs') {\n      return 'navbar-expand';\n    }\n\n    return `navbar-expand-${expand}`;\n  }\n\n  $: classes = classnames(className, 'navbar', getExpandClass(expand), {\n    'navbar-light': light,\n    'navbar-dark': dark,\n    [`bg-${color}`]: color,\n    [`fixed-${fixed}`]: fixed,\n    [`sticky-${sticky}`]: sticky\n  });\n</script>\n\n<nav {...$$restProps} class={classes}>\n  {#if container}\n    <Container fluid={container === 'fluid'}>\n      <slot />\n    </Container>\n  {:else}\n    <slot />\n  {/if}\n</nav>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let active = false;\n\n  $: classes = classnames(className, 'nav-item', active ? 'active' : false);\n</script>\n\n<li {...$$restProps} class={classes}>\n  <slot />\n</li>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let disabled = false;\n  export let active = false;\n  export let href = '#';\n\n  $: classes = classnames(className, 'nav-link', {\n    disabled,\n    active\n  });\n\n  function handleClick(e) {\n    if (disabled) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n      return;\n    }\n\n    if (href === '#') {\n      e.preventDefault();\n    }\n  }\n</script>\n\n<a {...$$restProps} {href} on:click on:click={handleClick} class={classes}>\n  <slot />\n</a>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let href = '/';\n\n  $: classes = classnames(className, 'navbar-brand');\n</script>\n\n<a {...$$restProps} class={classes} {href} on:click>\n  <slot />\n</a>\n","<script>\n  import classnames from './utils';\n\n  import Button from './Button.svelte';\n\n  let className = '';\n  export { className as class };\n\n  $: classes = classnames(className, 'navbar-toggler');\n</script>\n\n<Button {...$$restProps} on:click class={classes}>\n  <slot>\n    <span class=\"navbar-toggler-icon\" />\n  </slot>\n</Button>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let listClassName = '';\n  export let size = '';\n  export let ariaLabel = 'pagination';\n\n  $: classes = classnames(className);\n\n  $: listClasses = classnames(listClassName, 'pagination', {\n    [`pagination-${size}`]: !!size\n  });\n</script>\n\n<nav {...$$restProps} class={classes} aria-label={ariaLabel}>\n  <ul class={listClasses}>\n    <slot />\n  </ul>\n</nav>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let active = false;\n  export let disabled = false;\n\n  $: classes = classnames(className, 'page-item', {\n    active,\n    disabled\n  });\n</script>\n\n<li {...$$restProps} class={classes}>\n  <slot />\n</li>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let next = false;\n  export let previous = false;\n  export let first = false;\n  export let last = false;\n  export let ariaLabel = '';\n  export let href = '';\n\n  $: classes = classnames(className, 'page-link');\n\n  let defaultAriaLabel;\n\n  $: if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n\n  $: realLabel = ariaLabel || defaultAriaLabel;\n\n  let defaultCaret;\n  $: if (previous) {\n    defaultCaret = '\\u2039';\n  } else if (next) {\n    defaultCaret = '\\u203A';\n  } else if (first) {\n    defaultCaret = '\\u00ab';\n  } else if (last) {\n    defaultCaret = '\\u00bb';\n  }\n</script>\n\n<a {...$$restProps} class={classes} on:click {href}>\n  {#if previous || next || first || last}\n    <span aria-hidden=\"true\">\n      <slot>{defaultCaret}</slot>\n    </span>\n    <span class=\"visually-hidden\">{realLabel}</span>\n  {:else}\n    <slot />\n  {/if}\n</a>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let noGutters = false;\n  export let form = false;\n  export let cols = 0;\n  export let inner = undefined;\n\n  function getCols(cols) {\n    const colsValue = parseInt(cols);\n    if (!isNaN(colsValue)) {\n      if (colsValue > 0) {\n        return [`row-cols-${colsValue}`];\n      }\n    } else if (typeof cols === 'object') {\n      return ['xs', 'sm', 'md', 'lg', 'xl']\n        .map((colWidth) => {\n          const isXs = colWidth === 'xs';\n          const colSizeInterfix = isXs ? '-' : `-${colWidth}-`;\n          const value = cols[colWidth];\n          if (typeof value === 'number' && value > 0) {\n            return `row-cols${colSizeInterfix}${value}`;\n          }\n          return null;\n        })\n        .filter((value) => !!value);\n    }\n    return [];\n  }\n\n  $: classes = classnames(\n    className,\n    noGutters ? 'gx-0' : null,\n    form ? 'form-row' : 'row',\n    ...getCols(cols)\n  );\n</script>\n\n<div {...$$restProps} class={classes} bind:this={inner}>\n  <slot />\n</div>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let type = 'border';\n  export let size = '';\n  export let color = '';\n\n  $: classes = classnames(\n    className,\n    size ? `spinner-${type}-${size}` : false,\n    `spinner-${type}`,\n    color ? `text-${color}` : false\n  );\n</script>\n\n<div {...$$restProps} role=\"status\" class={classes}>\n  <span class=\"visually-hidden\">\n    <slot>Loading...</slot>\n  </span>\n</div>\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nexport const isUndefined = value => typeof value === \"undefined\";\n\nexport const isFunction = value => typeof value === \"function\";\n\nexport const isNumber = value => typeof value === \"number\";\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nexport function shouldNavigate(event) {\n\treturn (\n\t\t!event.defaultPrevented &&\n\t\tevent.button === 0 &&\n\t\t!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n\t);\n}\n\nexport function createCounter() {\n\tlet i = 0;\n\t/**\n\t * Returns an id and increments the internal state\n\t * @returns {number}\n\t */\n\treturn () => i++;\n}\n\n/**\n * Create a globally unique id\n *\n * @returns {string} An id\n */\nexport function createGlobalId() {\n\treturn Math.random().toString(36).substring(2);\n}\n\nexport function findClosest(tagName, element) {\n\twhile (element && element.tagName !== tagName) {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\telement = element.parentNode;\n\t}\n\treturn element;\n}\n\nexport const isSSR = typeof window === \"undefined\";\n\nexport function addListener(target, type, handler) {\n\ttarget.addEventListener(type, handler);\n\treturn () => target.removeEventListener(type, handler);\n}\n","/*\n * Adapted from https://github.com/EmilTholin/svelte-routing\n *\n * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n */\n\nconst createKey = ctxName => `@@svnav-ctx__${ctxName}`;\n\n// Use strings instead of objects, so different versions of\n// svelte-navigator can potentially still work together\nexport const LOCATION = createKey(\"LOCATION\");\nexport const ROUTER = createKey(\"ROUTER\");\nexport const ROUTE = createKey(\"ROUTE\");\nexport const ROUTE_PARAMS = createKey(\"ROUTE_PARAMS\");\nexport const FOCUS_ELEM = createKey(\"FOCUS_ELEM\");\n","export const paramRegex = /^:(.+)/;\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport const startsWith = (string, search) =>\n\tstring.substr(0, search.length) === search;\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isRootSegment = segment => segment === \"\";\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isDynamic = segment => paramRegex.test(segment);\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nexport const isSplat = segment => segment[0] === \"*\";\n\n/**\n * Strip potention splat and splatname of the end of a path\n * @param {string} str\n * @return {string}\n */\nexport const stripSplat = str => str.replace(/\\*.*$/, \"\");\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nexport const stripSlashes = str => str.replace(/(^\\/+|\\/+$)/g, \"\");\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nexport function segmentize(uri, filterFalsy = false) {\n\tconst segments = stripSlashes(uri).split(\"/\");\n\treturn filterFalsy ? segments.filter(Boolean) : segments;\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nexport const addQuery = (pathname, query) =>\n\tpathname + (query ? `?${query}` : \"\");\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nexport function combinePaths(basepath, path) {\n\tconst barePath =\n\t\tpath === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`;\n\treturn `${stripSlashes(barePath)}/`;\n}\n\n/**\n * Normalizes a basepath\n *\n * @param {string} path\n * @returns {string}\n *\n * @example\n * normalizePath(\"base/path/\") // -> \"/base/path\"\n */\nexport const normalizePath = path => `/${stripSlashes(path)}`;\n\n/**\n * Joins and normalizes multiple path fragments\n *\n * @param {...string} pathFragments\n * @returns {string}\n */\nexport function join(...pathFragments) {\n\tconst joinFragment = fragment => segmentize(fragment, true).join(\"/\");\n\tconst joinedSegments = pathFragments.map(joinFragment).join(\"/\");\n\treturn normalizePath(joinedSegments);\n}\n","import { isFunction } from \"./utils\";\n\n// We start from 1 here, so we can check if an origin id has been passed\n// by using `originId || <fallback>`\nexport const LINK_ID = 1;\nexport const ROUTE_ID = 2;\nexport const ROUTER_ID = 3;\nexport const USE_FOCUS_ID = 4;\nexport const USE_LOCATION_ID = 5;\nexport const USE_MATCH_ID = 6;\nexport const USE_NAVIGATE_ID = 7;\nexport const USE_PARAMS_ID = 8;\nexport const USE_RESOLVABLE_ID = 9;\nexport const USE_RESOLVE_ID = 10;\nexport const NAVIGATE_ID = 11;\n\nconst labels = {\n\t[LINK_ID]: \"Link\",\n\t[ROUTE_ID]: \"Route\",\n\t[ROUTER_ID]: \"Router\",\n\t[USE_FOCUS_ID]: \"useFocus\",\n\t[USE_LOCATION_ID]: \"useLocation\",\n\t[USE_MATCH_ID]: \"useMatch\",\n\t[USE_NAVIGATE_ID]: \"useNavigate\",\n\t[USE_PARAMS_ID]: \"useParams\",\n\t[USE_RESOLVABLE_ID]: \"useResolvable\",\n\t[USE_RESOLVE_ID]: \"useResolve\",\n\t[NAVIGATE_ID]: \"navigate\",\n};\n\nexport const createLabel = labelId => labels[labelId];\n\nexport function createIdentifier(labelId, props) {\n\tlet attr;\n\tif (labelId === ROUTE_ID) {\n\t\tattr = props.path ? `path=\"${props.path}\"` : \"default\";\n\t} else if (labelId === LINK_ID) {\n\t\tattr = `to=\"${props.to}\"`;\n\t} else if (labelId === ROUTER_ID) {\n\t\tattr = `basepath=\"${props.basepath || \"\"}\"`;\n\t}\n\treturn `<${createLabel(labelId)} ${attr || \"\"} />`;\n}\n\nexport function createMessage(labelId, message, props, originId) {\n\tconst origin = props && createIdentifier(originId || labelId, props);\n\tconst originMsg = origin ? `\\n\\nOccurred in: ${origin}` : \"\";\n\tconst label = createLabel(labelId);\n\tconst msg = isFunction(message) ? message(label) : message;\n\treturn `<${label}> ${msg}${originMsg}`;\n}\n\nexport const createMessageHandler = handler => (...args) =>\n\thandler(createMessage(...args));\n\nexport const fail = createMessageHandler(message => {\n\tthrow new Error(message);\n});\n\n// eslint-disable-next-line no-console\nexport const warn = createMessageHandler(console.warn);\n","import {\n\tsegmentize,\n\tjoin,\n\taddQuery,\n\tstartsWith,\n\tparamRegex,\n\tisSplat,\n\tisRootSegment,\n\tisDynamic,\n\tstripSplat,\n\tnormalizePath,\n} from \"./paths\";\nimport { ROUTER_ID, fail } from \"./warning\";\nimport { isUndefined } from \"./utils\";\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nexport function rankRoute(route, index) {\n\tconst score = route.default\n\t\t? 0\n\t\t: segmentize(route.fullPath).reduce((acc, segment) => {\n\t\t\t\tlet nextScore = acc;\n\t\t\t\tnextScore += SEGMENT_POINTS;\n\n\t\t\t\tif (isRootSegment(segment)) {\n\t\t\t\t\tnextScore += ROOT_POINTS;\n\t\t\t\t} else if (isDynamic(segment)) {\n\t\t\t\t\tnextScore += DYNAMIC_POINTS;\n\t\t\t\t} else if (isSplat(segment)) {\n\t\t\t\t\tnextScore -= SEGMENT_POINTS + SPLAT_PENALTY;\n\t\t\t\t} else {\n\t\t\t\t\tnextScore += STATIC_POINTS;\n\t\t\t\t}\n\n\t\t\t\treturn nextScore;\n\t\t  }, 0);\n\n\treturn { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nexport function rankRoutes(routes) {\n\treturn (\n\t\troutes\n\t\t\t.map(rankRoute)\n\t\t\t// If two routes have the exact same score, we go by index instead\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.score < b.score) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a.score > b.score) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn a.index - b.index;\n\t\t\t})\n\t);\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { fullPath, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nexport function pick(routes, uri) {\n\tlet bestMatch;\n\tlet defaultMatch;\n\n\tconst [uriPathname] = uri.split(\"?\");\n\tconst uriSegments = segmentize(uriPathname);\n\tconst isRootUri = uriSegments[0] === \"\";\n\tconst ranked = rankRoutes(routes);\n\n\tfor (let i = 0, l = ranked.length; i < l; i++) {\n\t\tconst { route } = ranked[i];\n\t\tlet missed = false;\n\t\tconst params = {};\n\n\t\t// eslint-disable-next-line no-shadow\n\t\tconst createMatch = uri => ({ ...route, params, uri });\n\n\t\tif (route.default) {\n\t\t\tdefaultMatch = createMatch(uri);\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst routeSegments = segmentize(route.fullPath);\n\t\tconst max = Math.max(uriSegments.length, routeSegments.length);\n\t\tlet index = 0;\n\n\t\tfor (; index < max; index++) {\n\t\t\tconst routeSegment = routeSegments[index];\n\t\t\tconst uriSegment = uriSegments[index];\n\n\t\t\tif (!isUndefined(routeSegment) && isSplat(routeSegment)) {\n\t\t\t\t// Hit a splat, just grab the rest, and return a match\n\t\t\t\t// uri:   /files/documents/work\n\t\t\t\t// route: /files/* or /files/*splatname\n\t\t\t\tconst splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n\t\t\t\tparams[splatName] = uriSegments\n\t\t\t\t\t.slice(index)\n\t\t\t\t\t.map(decodeURIComponent)\n\t\t\t\t\t.join(\"/\");\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (isUndefined(uriSegment)) {\n\t\t\t\t// URI is shorter than the route, no match\n\t\t\t\t// uri:   /users\n\t\t\t\t// route: /users/:userId\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst dynamicMatch = paramRegex.exec(routeSegment);\n\n\t\t\tif (dynamicMatch && !isRootUri) {\n\t\t\t\tconst value = decodeURIComponent(uriSegment);\n\t\t\t\tparams[dynamicMatch[1]] = value;\n\t\t\t} else if (routeSegment !== uriSegment) {\n\t\t\t\t// Current segments don't match, not dynamic, not splat, so no match\n\t\t\t\t// uri:   /users/123/settings\n\t\t\t\t// route: /users/:id/profile\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!missed) {\n\t\t\tbestMatch = createMatch(join(...uriSegments.slice(0, index)));\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn bestMatch || defaultMatch || null;\n}\n\n/**\n * Check if the `route.fullPath` matches the `uri`.\n * @param {Object} route\n * @param {string} uri\n * @return {?object}\n */\nexport function match(route, uri) {\n\treturn pick([route], uri);\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nexport function resolve(to, base) {\n\t// /foo/bar, /baz/qux => /foo/bar\n\tif (startsWith(to, \"/\")) {\n\t\treturn to;\n\t}\n\n\tconst [toPathname, toQuery] = to.split(\"?\");\n\tconst [basePathname] = base.split(\"?\");\n\tconst toSegments = segmentize(toPathname);\n\tconst baseSegments = segmentize(basePathname);\n\n\t// ?a=b, /users?b=c => /users?a=b\n\tif (toSegments[0] === \"\") {\n\t\treturn addQuery(basePathname, toQuery);\n\t}\n\n\t// profile, /users/789 => /users/789/profile\n\tif (!startsWith(toSegments[0], \".\")) {\n\t\tconst pathname = baseSegments.concat(toSegments).join(\"/\");\n\t\treturn addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n\t}\n\n\t// ./       , /users/123 => /users/123\n\t// ../      , /users/123 => /users\n\t// ../..    , /users/123 => /\n\t// ../../one, /a/b/c/d   => /a/b/one\n\t// .././one , /a/b/c/d   => /a/b/c/one\n\tconst allSegments = baseSegments.concat(toSegments);\n\tconst segments = [];\n\n\tallSegments.forEach(segment => {\n\t\tif (segment === \"..\") {\n\t\t\tsegments.pop();\n\t\t} else if (segment !== \".\") {\n\t\t\tsegments.push(segment);\n\t\t}\n\t});\n\n\treturn addQuery(`/${segments.join(\"/\")}`, toQuery);\n}\n\n/**\n * Normalizes a location for consumption by `Route` children and the `Router`.\n * It removes the apps basepath from the pathname\n * and sets default values for `search` and `hash` properties.\n *\n * @param {Object} location The current global location supplied by the history component\n * @param {string} basepath The applications basepath (i.e. when serving from a subdirectory)\n *\n * @returns The normalized location\n */\nexport function normalizeLocation(location, basepath) {\n\tconst { pathname, hash = \"\", search = \"\", state } = location;\n\tconst baseSegments = segmentize(basepath, true);\n\tconst pathSegments = segmentize(pathname, true);\n\twhile (baseSegments.length) {\n\t\tif (baseSegments[0] !== pathSegments[0]) {\n\t\t\tfail(\n\t\t\t\tROUTER_ID,\n\t\t\t\t`Invalid state: All locations must begin with the basepath \"${basepath}\", found \"${pathname}\"`,\n\t\t\t);\n\t\t}\n\t\tbaseSegments.shift();\n\t\tpathSegments.shift();\n\t}\n\treturn {\n\t\tpathname: join(...pathSegments),\n\t\thash,\n\t\tsearch,\n\t\tstate,\n\t};\n}\n\nconst normalizeUrlFragment = frag => (frag.length === 1 ? \"\" : frag);\n\n/**\n * Creates a location object from an url.\n * It is used to create a location from the url prop used in SSR\n *\n * @param {string} url The url string (e.g. \"/path/to/somewhere\")\n *\n * @returns {{ pathname: string; search: string; hash: string }} The location\n */\nexport function createLocation(url) {\n\tconst searchIndex = url.indexOf(\"?\");\n\tconst hashIndex = url.indexOf(\"#\");\n\tconst hasSearchIndex = searchIndex !== -1;\n\tconst hasHashIndex = hashIndex !== -1;\n\tconst hash = hasHashIndex ? normalizeUrlFragment(url.substr(hashIndex)) : \"\";\n\tconst pathnameAndSearch = hasHashIndex ? url.substr(0, hashIndex) : url;\n\tconst search = hasSearchIndex\n\t\t? normalizeUrlFragment(pathnameAndSearch.substr(searchIndex))\n\t\t: \"\";\n\tconst pathname = hasSearchIndex\n\t\t? pathnameAndSearch.substr(0, searchIndex)\n\t\t: pathnameAndSearch;\n\treturn { pathname, search, hash };\n}\n\n/**\n * Resolves a link relative to the parent Route and the Routers basepath.\n *\n * @param {string} path The given path, that will be resolved\n * @param {string} routeBase The current Routes base path\n * @param {string} appBase The basepath of the app. Used, when serving from a subdirectory\n * @returns {string} The resolved path\n *\n * @example\n * resolveLink(\"relative\", \"/routeBase\", \"/\") // -> \"/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/\") // -> \"/absolute\"\n * resolveLink(\"relative\", \"/routeBase\", \"/base\") // -> \"/base/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/base\") // -> \"/base/absolute\"\n */\nexport function resolveLink(path, routeBase, appBase) {\n\treturn join(appBase, resolve(path, routeBase));\n}\n\n/**\n * Get the uri for a Route, by matching it against the current location.\n *\n * @param {string} routePath The Routes resolved path\n * @param {string} pathname The current locations pathname\n */\nexport function extractBaseUri(routePath, pathname) {\n\tconst fullPath = normalizePath(stripSplat(routePath));\n\tconst baseSegments = segmentize(fullPath, true);\n\tconst pathSegments = segmentize(pathname, true).slice(0, baseSegments.length);\n\tconst routeMatch = match({ fullPath }, join(...pathSegments));\n\treturn routeMatch && routeMatch.uri;\n}\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nimport { createLocation } from \"./routes\";\nimport { createGlobalId, isSSR, isNumber, addListener } from \"./utils\";\nimport { warn, NAVIGATE_ID } from \"./warning\";\n\nconst POP = \"POP\";\nconst PUSH = \"PUSH\";\nconst REPLACE = \"REPLACE\";\n\nfunction getLocation(source) {\n\treturn {\n\t\t...source.location,\n\t\tpathname: encodeURI(decodeURI(source.location.pathname)),\n\t\tstate: source.history.state,\n\t\t_key: (source.history.state && source.history.state._key) || \"initial\",\n\t};\n}\n\nfunction createHistory(source) {\n\tlet listeners = [];\n\tlet location = getLocation(source);\n\tlet action = POP;\n\n\tconst notifyListeners = (listenerFns = listeners) =>\n\t\tlistenerFns.forEach(listener => listener({ location, action }));\n\n\treturn {\n\t\tget location() {\n\t\t\treturn location;\n\t\t},\n\t\tlisten(listener) {\n\t\t\tlisteners.push(listener);\n\n\t\t\tconst popstateListener = () => {\n\t\t\t\tlocation = getLocation(source);\n\t\t\t\taction = POP;\n\t\t\t\tnotifyListeners([listener]);\n\t\t\t};\n\n\t\t\t// Call listener when it is registered\n\t\t\tnotifyListeners([listener]);\n\n\t\t\tconst unlisten = addListener(source, \"popstate\", popstateListener);\n\t\t\treturn () => {\n\t\t\t\tunlisten();\n\t\t\t\tlisteners = listeners.filter(fn => fn !== listener);\n\t\t\t};\n\t\t},\n\t\t/**\n\t\t * Navigate to a new absolute route.\n\t\t *\n\t\t * @param {string|number} to The path to navigate to.\n\t\t *\n\t\t * If `to` is a number we will navigate to the stack entry index + `to`\n\t\t * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n\t\t * @param {Object} options\n\t\t * @param {*} [options.state] The state will be accessible through `location.state`\n\t\t * @param {boolean} [options.replace=false] Replace the current entry in the history\n\t\t * stack, instead of pushing on a new one\n\t\t */\n\t\tnavigate(to, options) {\n\t\t\tconst { state = {}, replace = false } = options || {};\n\t\t\taction = replace ? REPLACE : PUSH;\n\t\t\tif (isNumber(to)) {\n\t\t\t\tif (options) {\n\t\t\t\t\twarn(\n\t\t\t\t\t\tNAVIGATE_ID,\n\t\t\t\t\t\t\"Navigation options (state or replace) are not supported, \" +\n\t\t\t\t\t\t\t\"when passing a number as the first argument to navigate. \" +\n\t\t\t\t\t\t\t\"They are ignored.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\taction = POP;\n\t\t\t\tsource.history.go(to);\n\t\t\t} else {\n\t\t\t\tconst keyedState = { ...state, _key: createGlobalId() };\n\t\t\t\t// try...catch iOS Safari limits to 100 pushState calls\n\t\t\t\ttry {\n\t\t\t\t\tsource.history[replace ? \"replaceState\" : \"pushState\"](\n\t\t\t\t\t\tkeyedState,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tto,\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tsource.location[replace ? \"replace\" : \"assign\"](to);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlocation = getLocation(source);\n\t\t\tnotifyListeners();\n\t\t},\n\t};\n}\n\nfunction createStackFrame(state, uri) {\n\treturn { ...createLocation(uri), state };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n\tlet index = 0;\n\tlet stack = [createStackFrame(null, initialPathname)];\n\n\treturn {\n\t\t// This is just for testing...\n\t\tget entries() {\n\t\t\treturn stack;\n\t\t},\n\t\tget location() {\n\t\t\treturn stack[index];\n\t\t},\n\t\taddEventListener() {},\n\t\tremoveEventListener() {},\n\t\thistory: {\n\t\t\tget state() {\n\t\t\t\treturn stack[index].state;\n\t\t\t},\n\t\t\tpushState(state, title, uri) {\n\t\t\t\tindex++;\n\t\t\t\t// Throw away anything in the stack with an index greater than the current index.\n\t\t\t\t// This happens, when we go back using `go(-n)`. The index is now less than `stack.length`.\n\t\t\t\t// If we call `go(+n)` the stack entries with an index greater than the current index can\n\t\t\t\t// be reused.\n\t\t\t\t// However, if we navigate to a path, instead of a number, we want to create a new branch\n\t\t\t\t// of navigation.\n\t\t\t\tstack = stack.slice(0, index);\n\t\t\t\tstack.push(createStackFrame(state, uri));\n\t\t\t},\n\t\t\treplaceState(state, title, uri) {\n\t\t\t\tstack[index] = createStackFrame(state, uri);\n\t\t\t},\n\t\t\tgo(to) {\n\t\t\t\tconst newIndex = index + to;\n\t\t\t\tif (newIndex < 0 || newIndex > stack.length - 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tindex = newIndex;\n\t\t\t},\n\t\t},\n\t};\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = !!(\n\t!isSSR &&\n\twindow.document &&\n\twindow.document.createElement\n);\n// Use memory history in iframes (for example in Svelte REPL)\nconst isEmbeddedPage = !isSSR && window.location.origin === \"null\";\nconst globalHistory = createHistory(\n\tcanUseDOM && !isEmbeddedPage ? window : createMemorySource(),\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","import { get } from \"svelte/store\";\nimport { tick } from \"svelte\";\nimport { warn, ROUTER_ID, ROUTE_ID } from \"./warning\";\nimport { addListener } from \"./utils\";\n\n// We need to keep the focus candidate in a separate file, so svelte does\n// not update, when we mutate it.\n// Also, we need a single global reference, because taking focus needs to\n// work globally, even if we have multiple top level routers\n// eslint-disable-next-line import/no-mutable-exports\nexport let focusCandidate = null;\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let initialNavigation = true;\n\n/**\n * Check if RouterA is above RouterB in the document\n * @param {number} routerIdA The first Routers id\n * @param {number} routerIdB The second Routers id\n */\nfunction isAbove(routerIdA, routerIdB) {\n\tconst routerMarkers = document.querySelectorAll(\"[data-svnav-router]\");\n\tfor (let i = 0; i < routerMarkers.length; i++) {\n\t\tconst node = routerMarkers[i];\n\t\tconst currentId = Number(node.dataset.svnavRouter);\n\t\tif (currentId === routerIdA) return true;\n\t\tif (currentId === routerIdB) return false;\n\t}\n\treturn false;\n}\n\n/**\n * Check if a Route candidate is the best choice to move focus to,\n * and store the best match.\n * @param {{\n     level: number;\n     routerId: number;\n     route: {\n       id: number;\n       focusElement: import(\"svelte/store\").Readable<Promise<Element>|null>;\n     }\n   }} item A Route candidate, that updated and is visible after a navigation\n */\nexport function pushFocusCandidate(item) {\n\tif (\n\t\t// Best candidate if it's the only candidate...\n\t\t!focusCandidate ||\n\t\t// Route is nested deeper, than previous candidate\n\t\t// -> Route change was triggered in the deepest affected\n\t\t// Route, so that's were focus should move to\n\t\titem.level > focusCandidate.level ||\n\t\t// If the level is identical, we want to focus the first Route in the document,\n\t\t// so we pick the first Router lookin from page top to page bottom.\n\t\t(item.level === focusCandidate.level &&\n\t\t\tisAbove(item.routerId, focusCandidate.routerId))\n\t) {\n\t\tfocusCandidate = item;\n\t}\n}\n\n/**\n * Reset the focus candidate.\n */\nexport function clearFocusCandidate() {\n\tfocusCandidate = null;\n}\n\nexport function initialNavigationOccurred() {\n\tinitialNavigation = false;\n}\n\n/*\n * `focus` Adapted from https://github.com/oaf-project/oaf-side-effects/blob/master/src/index.ts\n *\n * https://github.com/oaf-project/oaf-side-effects/blob/master/LICENSE\n */\nexport function focus(elem) {\n\tif (!elem) return false;\n\tconst TABINDEX = \"tabindex\";\n\ttry {\n\t\tif (!elem.hasAttribute(TABINDEX)) {\n\t\t\telem.setAttribute(TABINDEX, \"-1\");\n\t\t\tlet unlisten;\n\t\t\t// We remove tabindex after blur to avoid weird browser behavior\n\t\t\t// where a mouse click can activate elements with tabindex=\"-1\".\n\t\t\tconst blurListener = () => {\n\t\t\t\telem.removeAttribute(TABINDEX);\n\t\t\t\tunlisten();\n\t\t\t};\n\t\t\tunlisten = addListener(elem, \"blur\", blurListener);\n\t\t}\n\t\telem.focus();\n\t\treturn document.activeElement === elem;\n\t} catch (e) {\n\t\t// Apparently trying to focus a disabled element in IE can throw.\n\t\t// See https://stackoverflow.com/a/1600194/2476884\n\t\treturn false;\n\t}\n}\n\nexport function isEndMarker(elem, id) {\n\treturn Number(elem.dataset.svnavRouteEnd) === id;\n}\n\nexport function isHeading(elem) {\n\treturn /^H[1-6]$/i.test(elem.tagName);\n}\n\nfunction query(selector, parent = document) {\n\treturn parent.querySelector(selector);\n}\n\nexport function queryHeading(id) {\n\tconst marker = query(`[data-svnav-route-start=\"${id}\"]`);\n\tlet current = marker.nextElementSibling;\n\twhile (!isEndMarker(current, id)) {\n\t\tif (isHeading(current)) {\n\t\t\treturn current;\n\t\t}\n\t\tconst heading = query(\"h1,h2,h3,h4,h5,h6\", current);\n\t\tif (heading) {\n\t\t\treturn heading;\n\t\t}\n\t\tcurrent = current.nextElementSibling;\n\t}\n\treturn null;\n}\n\nexport function handleFocus(route) {\n\tPromise.resolve(get(route.focusElement)).then(elem => {\n\t\tconst focusElement = elem || queryHeading(route.id);\n\t\tif (!focusElement) {\n\t\t\twarn(\n\t\t\t\tROUTER_ID,\n\t\t\t\t\"Could not find an element to focus. \" +\n\t\t\t\t\t\"You should always render a header for accessibility reasons, \" +\n\t\t\t\t\t'or set a custom focus element via the \"useFocus\" hook. ' +\n\t\t\t\t\t\"If you don't want this Route or Router to manage focus, \" +\n\t\t\t\t\t'pass \"primary={false}\" to it.',\n\t\t\t\troute,\n\t\t\t\tROUTE_ID,\n\t\t\t);\n\t\t}\n\t\tconst headingFocused = focus(focusElement);\n\t\tif (headingFocused) return;\n\t\tfocus(document.documentElement);\n\t});\n}\n\nexport const createTriggerFocus = (a11yConfig, announcementText, location) => (\n\tmanageFocus,\n\tannounceNavigation,\n) =>\n\t// Wait until the dom is updated, so we can look for headings\n\ttick().then(() => {\n\t\tif (!focusCandidate || initialNavigation) {\n\t\t\tinitialNavigationOccurred();\n\t\t\treturn;\n\t\t}\n\t\tif (manageFocus) {\n\t\t\thandleFocus(focusCandidate.route);\n\t\t}\n\t\tif (a11yConfig.announcements && announceNavigation) {\n\t\t\tconst { path, fullPath, meta, params, uri } = focusCandidate.route;\n\t\t\tconst announcementMessage = a11yConfig.createAnnouncement(\n\t\t\t\t{ path, fullPath, meta, params, uri },\n\t\t\t\tget(location),\n\t\t\t);\n\t\t\tPromise.resolve(announcementMessage).then(message => {\n\t\t\t\tannouncementText.set(message);\n\t\t\t});\n\t\t}\n\t\tclearFocusCandidate();\n\t});\n\nexport const visuallyHiddenStyle =\n\t\"position:fixed;\" +\n\t\"top:-1px;\" +\n\t\"left:0;\" +\n\t\"width:1px;\" +\n\t\"height:1px;\" +\n\t\"padding:0;\" +\n\t\"overflow:hidden;\" +\n\t\"clip:rect(0,0,0,0);\" +\n\t\"white-space:nowrap;\" +\n\t\"border:0;\";\n","<script context=\"module\">\n\t// eslint-disable-next-line import/order\n\timport { createCounter } from \"./utils\";\n\n\tconst createId = createCounter();\n</script>\n\n<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { getContext, setContext, onMount } from \"svelte\";\n\timport { writable } from \"svelte/store\";\n\timport { LOCATION, ROUTER } from \"./contexts\";\n\timport { globalHistory } from \"./history\";\n\timport { normalizePath } from \"./paths\";\n\timport { pick, match, normalizeLocation, createLocation } from \"./routes\";\n\timport { isSSR } from \"./utils\";\n\timport { warn, ROUTER_ID } from \"./warning\";\n\timport {\n\t\tpushFocusCandidate,\n\t\tvisuallyHiddenStyle,\n\t\tcreateTriggerFocus,\n\t} from \"./a11y\";\n\n\tconst defaultBasepath = \"/\";\n\n\texport let basepath = defaultBasepath;\n\texport let url = null;\n\texport let history = globalHistory;\n\texport let primary = true;\n\texport let a11y = {};\n\n\tconst a11yConfig = {\n\t\tcreateAnnouncement: route => `Navigated to ${route.uri}`,\n\t\tannouncements: true,\n\t\t...a11y,\n\t};\n\n\t// Remember the initial `basepath`, so we can fire a warning\n\t// when the user changes it later\n\tconst initialBasepath = basepath;\n\tconst normalizedBasepath = normalizePath(basepath);\n\n\tconst locationContext = getContext(LOCATION);\n\tconst routerContext = getContext(ROUTER);\n\n\tconst isTopLevelRouter = !locationContext;\n\tconst routerId = createId();\n\n\tconst manageFocus = primary && !(routerContext && !routerContext.manageFocus);\n\tconst announcementText = writable(\"\");\n\n\tconst routes = writable([]);\n\tconst activeRoute = writable(null);\n\t// Used in SSR to synchronously set that a Route is active.\n\tlet hasActiveRoute = false;\n\n\t// Nesting level of router.\n\t// We will need this to identify sibling routers, when moving\n\t// focus on navigation, so we can focus the first possible router\n\tconst level = isTopLevelRouter ? 0 : routerContext.level + 1;\n\n\t// If we're running an SSR we force the location to the `url` prop\n\tconst getInitialLocation = () =>\n\t\tnormalizeLocation(\n\t\t\tisSSR ? createLocation(url) : history.location,\n\t\t\tnormalizedBasepath,\n\t\t);\n\tconst location = isTopLevelRouter\n\t\t? writable(getInitialLocation())\n\t\t: locationContext;\n\tconst prevLocation = writable($location);\n\n\tconst triggerFocus = createTriggerFocus(\n\t\ta11yConfig,\n\t\tannouncementText,\n\t\tlocation,\n\t);\n\n\tconst createRouteFilter = routeId => routeList =>\n\t\trouteList.filter(routeItem => routeItem.id !== routeId);\n\n\tfunction registerRoute(route) {\n\t\tif (isSSR) {\n\t\t\t// In SSR we should set the activeRoute immediately if it is a match.\n\t\t\t// If there are more Routes being registered after a match is found,\n\t\t\t// we just skip them.\n\t\t\tif (hasActiveRoute) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst matchingRoute = match(route, $location.pathname);\n\t\t\tif (matchingRoute) {\n\t\t\t\thasActiveRoute = true;\n\t\t\t\t// Return the match in SSR mode, so the matched Route can use it immediatly.\n\t\t\t\t// Waiting for activeRoute to update does not work, because it updates\n\t\t\t\t// after the Route is initialized\n\t\t\t\treturn matchingRoute; // eslint-disable-line consistent-return\n\t\t\t}\n\t\t} else {\n\t\t\troutes.update(prevRoutes => {\n\t\t\t\t// Remove an old version of the updated route,\n\t\t\t\t// before pushing the new version\n\t\t\t\tconst nextRoutes = createRouteFilter(route.id)(prevRoutes);\n\t\t\t\tnextRoutes.push(route);\n\t\t\t\treturn nextRoutes;\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction unregisterRoute(routeId) {\n\t\troutes.update(createRouteFilter(routeId));\n\t}\n\n\tif (!isTopLevelRouter && basepath !== defaultBasepath) {\n\t\twarn(\n\t\t\tROUTER_ID,\n\t\t\t'Only top-level Routers can have a \"basepath\" prop. It is ignored.',\n\t\t\t{ basepath },\n\t\t);\n\t}\n\t$: if (basepath !== initialBasepath) {\n\t\twarn(ROUTER_ID, 'You cannot change the \"basepath\" prop. It is ignored.');\n\t}\n\n\t// This reactive statement will be run when the Router is created\n\t// when there are no Routes and then again the following tick, so it\n\t// will not find an active Route in SSR and in the browser it will only\n\t// pick an active Route after all Routes have been registered.\n\t$: {\n\t\tconst bestMatch = pick($routes, $location.pathname);\n\t\tactiveRoute.set(bestMatch);\n\t}\n\n\t// Manage focus and announce navigation to screen reader users\n\t$: {\n\t\tif (isTopLevelRouter) {\n\t\t\tconst hasHash = !!$location.hash;\n\t\t\t// When a hash is present in the url, we skip focus management, because\n\t\t\t// focusing a different element will prevent in-page jumps (See #3)\n\t\t\tconst shouldManageFocus = !hasHash && manageFocus;\n\t\t\t// We don't want to make an announcement, when the hash changes,\n\t\t\t// but the active route stays the same\n\t\t\tconst announceNavigation =\n\t\t\t\t!hasHash || $location.pathname !== $prevLocation.pathname;\n\t\t\ttriggerFocus(shouldManageFocus, announceNavigation);\n\t\t}\n\t}\n\n\t// Queue matched Route, so top level Router can decide which Route to focus.\n\t// Non primary Routers should just be ignored\n\t$: if (manageFocus && $activeRoute && $activeRoute.primary) {\n\t\tpushFocusCandidate({ level, routerId, route: $activeRoute });\n\t}\n\n\tif (isTopLevelRouter) {\n\t\t// The topmost Router in the tree is responsible for updating\n\t\t// the location store and supplying it through context.\n\t\tonMount(() => {\n\t\t\tconst unlisten = history.listen(changedHistory => {\n\t\t\t\tconst normalizedLocation = normalizeLocation(\n\t\t\t\t\tchangedHistory.location,\n\t\t\t\t\tnormalizedBasepath,\n\t\t\t\t);\n\t\t\t\tprevLocation.set($location);\n\t\t\t\tlocation.set(normalizedLocation);\n\t\t\t});\n\n\t\t\treturn unlisten;\n\t\t});\n\n\t\tsetContext(LOCATION, location);\n\t}\n\n\tsetContext(ROUTER, {\n\t\tactiveRoute,\n\t\tregisterRoute,\n\t\tunregisterRoute,\n\t\tmanageFocus,\n\t\tlevel,\n\t\tid: routerId,\n\t\thistory: isTopLevelRouter ? history : routerContext.history,\n\t\tbasepath: isTopLevelRouter ? normalizedBasepath : routerContext.basepath,\n\t});\n</script>\n\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-router={routerId} />\n\n<slot />\n\n{#if isTopLevelRouter && manageFocus && a11yConfig.announcements}\n\t<div\n\t\trole=\"status\"\n\t\taria-atomic=\"true\"\n\t\taria-live=\"polite\"\n\t\tstyle={visuallyHiddenStyle}\n\t>\n\t\t{$announcementText}\n\t</div>\n{/if}\n","import { getContext, onDestroy, tick } from \"svelte\";\nimport { derived, get, writable } from \"svelte/store\";\nimport { LOCATION, ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\nimport { resolveLink, match, normalizeLocation } from \"./routes\";\nimport { isNumber } from \"./utils\";\nimport {\n\tfail,\n\tcreateLabel,\n\tUSE_FOCUS_ID,\n\tROUTER_ID,\n\tUSE_LOCATION_ID,\n\tROUTE_ID,\n\tUSE_RESOLVE_ID,\n\tUSE_RESOLVABLE_ID,\n\tUSE_NAVIGATE_ID,\n\tUSE_MATCH_ID,\n\tUSE_PARAMS_ID,\n} from \"./warning\";\n\n/**\n * Check if a component or hook have been created outside of a\n * context providing component\n * @param {number} componentId\n * @param {*} props\n * @param {string?} ctxKey\n * @param {number?} ctxProviderId\n */\nexport function usePreflightCheck(\n\tcomponentId,\n\tprops,\n\tctxKey = ROUTER,\n\tctxProviderId = ROUTER_ID,\n) {\n\tconst ctx = getContext(ctxKey);\n\tif (!ctx) {\n\t\tfail(\n\t\t\tcomponentId,\n\t\t\tlabel =>\n\t\t\t\t`You cannot use ${label} outside of a ${createLabel(ctxProviderId)}.`,\n\t\t\tprops,\n\t\t);\n\t}\n}\n\nconst toReadonly = ctx => {\n\tconst { subscribe } = getContext(ctx);\n\treturn { subscribe };\n};\n\n/**\n * Access the current location via a readable store.\n * @returns {import(\"svelte/store\").Readable<{\n    pathname: string;\n    search: string;\n    hash: string;\n    state: {};\n  }>}\n *\n * @example\n  ```html\n  <script>\n    import { useLocation } from \"svelte-navigator\";\n\n    const location = useLocation();\n\n    $: console.log($location);\n    // {\n    //   pathname: \"/blog\",\n    //   search: \"?id=123\",\n    //   hash: \"#comments\",\n    //   state: {}\n    // }\n  </script>\n  ```\n */\nexport function useLocation() {\n\tusePreflightCheck(USE_LOCATION_ID);\n\treturn toReadonly(LOCATION);\n}\n\n/**\n * @typedef {{\n    path: string;\n    fullPath: string;\n    uri: string;\n    params: {};\n  }} RouteMatch\n */\n\n/**\n * @typedef {import(\"svelte/store\").Readable<RouteMatch|null>} RouteMatchStore\n */\n\n/**\n * Access the history of top level Router.\n */\nexport function useHistory() {\n\tconst { history } = getContext(ROUTER);\n\treturn history;\n}\n\n/**\n * Access the base of the parent Route.\n */\nexport function useRouteBase() {\n\tconst route = getContext(ROUTE);\n\treturn route ? derived(route, _route => _route.base) : writable(\"/\");\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {(path: string) => string}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolve } from \"svelte-navigator\";\n\n    const resolve = useResolve();\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`\n    const resolvedLink = resolve(\"relativePath\");\n  </script>\n\n  <a href={resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolve() {\n\tusePreflightCheck(USE_RESOLVE_ID);\n\tconst routeBase = useRouteBase();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\t/**\n\t * Resolves the path relative to the current route and basepath.\n\t *\n\t * @param {string} path The path to resolve\n\t * @returns {string} The resolved path\n\t */\n\tconst resolve = path => resolveLink(path, get(routeBase), appBase);\n\treturn resolve;\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {import(\"svelte/store\").Readable<string>}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolvable } from \"svelte-navigator\";\n\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`.\n    const resolvedLink = useResolvable(\"relativePath\");\n  </script>\n\n  <a href={$resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolvable(path) {\n\tusePreflightCheck(USE_RESOLVABLE_ID);\n\tconst routeBase = useRouteBase();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\treturn derived(routeBase, _routeBase =>\n\t\tresolveLink(path, _routeBase, appBase),\n\t);\n}\n\n/**\n * A hook, that returns a context-aware version of `navigate`.\n * It will automatically resolve the given link relative to the current Route.\n * It will also resolve a link against the `basepath` of the Router.\n *\n * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router>\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /absolutePath\n  </button>\n  ```\n  *\n  * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router basepath=\"/base\">\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /base/route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /base/absolutePath\n  </button>\n  ```\n */\nexport function useNavigate() {\n\tusePreflightCheck(USE_NAVIGATE_ID);\n\tconst resolve = useResolve();\n\tconst { navigate } = useHistory();\n\t/**\n\t * Navigate to a new route.\n\t * Resolves the link relative to the current route and basepath.\n\t *\n\t * @param {string|number} to The path to navigate to.\n\t *\n\t * If `to` is a number we will navigate to the stack entry index + `to`\n\t * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n\t * @param {Object} options\n\t * @param {*} [options.state]\n\t * @param {boolean} [options.replace=false]\n\t */\n\tconst navigateRelative = (to, options) => {\n\t\t// If to is a number, we navigate to the target stack entry via `history.go`.\n\t\t// Otherwise resolve the link\n\t\tconst target = isNumber(to) ? to : resolve(to);\n\t\treturn navigate(target, options);\n\t};\n\treturn navigateRelative;\n}\n\n/**\n * Use Svelte Navigators matching without needing to use a Route.\n * Returns a readable store with the potential match,\n * that changes, when the location changes.\n *\n * The provided path will be resolved relatively,\n * as you're used to with all paths in Svelte Navigator\n *\n * @param {string} path The path, to match against.\n * It works just like a Route path\n * @returns {RouteMatchStore} The matched route.\n * Returns `null`, when nothing could be matched\n *\n * @example\n  ```html\n  <script>\n    import { useMatch } from \"svelte-navigator\";\n\n    const relativeMatch = useMatch(\"relative/path/:to/*somewhere\");\n    const absoluteMatch = useMatch(\"/absolute/path/:to/*somewhere\");\n\n    $: console.log($relativeMatch.params.to);\n    $: console.log($absoluteMatch.params.somewhere);\n  </script>\n  ```\n */\nexport function useMatch(path) {\n\tusePreflightCheck(USE_MATCH_ID);\n\tconst location = useLocation();\n\tconst resolve = useResolve();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\tconst resolvedPath = resolve(path);\n\tconst { pathname: fullPath } = normalizeLocation(\n\t\t{ pathname: resolvedPath },\n\t\tappBase,\n\t);\n\treturn derived(location, loc => match({ fullPath, path }, loc.pathname));\n}\n\n/**\n * Access the parent Routes matched params and wildcards\n * @returns {import(\"svelte/store\").Readable<{\n     [param: string]: any;\n   }>} A readable store containing the matched parameters and wildcards\n *\n * @example\n  ```html\n  <!--\n    Somewhere inside <Route path=\"user/:id/*splat\" />\n    with a current url of \"/myApp/user/123/pauls-profile\"\n  -->\n  <script>\n    import { useParams } from \"svelte-navigator\";\n\n    const params = useParams();\n\n    $: console.log($params); // -> { id: \"123\", splat: \"pauls-profile\" }\n  </script>\n\n  <h3>Welcome user {$params.id}! bleep bloop...</h3>\n  ```\n */\nexport function useParams() {\n\tusePreflightCheck(USE_PARAMS_ID, null, ROUTE, ROUTE_ID);\n\treturn toReadonly(ROUTE_PARAMS);\n}\n\n/**\n * Provide a custom element to focus, when the parent route is visited.\n * It returns the `registerFocus` function you can call manually with an\n * Element or use as a Svelte action via the `use` directive.\n *\n * @example\n  ```html\n  <!-- Using `registerFocus` as a Svelte action: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p use:registerFocus>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Calling `registerFocus` manually: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    let focusElement;\n\n    onMount(() => registerFocus(focusElement))\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p bind:this={focusElement}>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Using `registerFocus` asyncronously: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    const lazyImport = import(\"./MyComponent.svelte\").then(module => module.default);\n  </script>\n\n  {#await lazyImport then MyComponent}\n    <MyComponent {registerFocus} />\n  {/await}\n\n  <!-- MyComponent.svelte -->\n  <script>\n    export let registerFocus;\n  </script>\n\n  <h1 use:registerFocus>Hi there!</h1>\n  ```\n */\nexport function useFocus() {\n\tusePreflightCheck(USE_FOCUS_ID, null, ROUTE, ROUTE_ID);\n\tconst location = useLocation();\n\tconst focusElement = getContext(FOCUS_ELEM);\n\n\tlet resolve;\n\tconst unsubscribe = location.subscribe(() => {\n\t\tconst lazyElement = new Promise(_resolve => {\n\t\t\tresolve = _resolve;\n\t\t});\n\t\tfocusElement.set(lazyElement);\n\t});\n\n\tonDestroy(unsubscribe);\n\n\treturn node => {\n\t\tlet unmounted = false;\n\t\tconst innerUnsubscribe = location.subscribe(() => {\n\t\t\ttick().then(() => {\n\t\t\t\tif (!unmounted) {\n\t\t\t\t\tresolve(node);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tunmounted = true;\n\t\t\t\tinnerUnsubscribe();\n\t\t\t},\n\t\t};\n\t};\n}\n","<script context=\"module\">\n\t// eslint-disable-next-line import/order\n\timport { createCounter } from \"./utils\";\n\n\tconst createId = createCounter();\n</script>\n\n<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { getContext, onDestroy, setContext } from \"svelte\";\n\timport { writable, get } from \"svelte/store\";\n\timport Router from \"./Router.svelte\";\n\timport { ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\n\timport {\n\t\tuseLocation,\n\t\tuseNavigate,\n\t\tuseRouteBase,\n\t\tusePreflightCheck,\n\t} from \"./hooks\";\n\timport { isSSR } from \"./utils\";\n\timport { extractBaseUri } from \"./routes\";\n\timport { join } from \"./paths\";\n\timport { ROUTE_ID } from \"./warning\";\n\n\texport let path = \"\";\n\texport let component = null;\n\texport let meta = {};\n\texport let primary = true;\n\n\tusePreflightCheck(ROUTE_ID, $$props);\n\n\tconst id = createId();\n\n\tconst { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n\tconst parentBase = useRouteBase();\n\tconst location = useLocation();\n\tconst focusElement = writable(null);\n\n\t// In SSR we cannot wait for $activeRoute to update,\n\t// so we use the match returned from `registerRoute` instead\n\tlet ssrMatch;\n\n\tconst route = writable();\n\t$: {\n\t\t// The route store will be re-computed whenever props, location or parentBase change\n\t\tconst isDefault = path === \"\";\n\t\tconst rawBase = join($parentBase, path);\n\t\tconst updatedRoute = {\n\t\t\tid,\n\t\t\tpath,\n\t\t\tmeta,\n\t\t\t// If no path prop is given, this Route will act as the default Route\n\t\t\t// that is rendered if no other Route in the Router is a match\n\t\t\tdefault: isDefault,\n\t\t\tfullPath: isDefault ? \"\" : rawBase,\n\t\t\tbase: isDefault\n\t\t\t\t? $parentBase\n\t\t\t\t: extractBaseUri(rawBase, $location.pathname),\n\t\t\tprimary,\n\t\t\tfocusElement,\n\t\t};\n\t\troute.set(updatedRoute);\n\t\t// If we're in SSR mode and the Route matches,\n\t\t// `registerRoute` will return the match\n\t\tssrMatch = registerRoute(updatedRoute);\n\t}\n\n\t$: isActive = !!(ssrMatch || ($activeRoute && $activeRoute.id === id));\n\n\tconst params = writable({});\n\t$: if (isActive) {\n\t\tconst { params: activeParams } = ssrMatch || $activeRoute;\n\t\tparams.set(activeParams);\n\t}\n\n\tsetContext(ROUTE, route);\n\tsetContext(ROUTE_PARAMS, params);\n\tsetContext(FOCUS_ELEM, focusElement);\n\n\t// We need to call useNavigate after the route is set,\n\t// so we can use the routes path for link resolution\n\tconst navigate = useNavigate();\n\n\t// There is no need to unregister Routes in SSR since it will all be\n\t// thrown away anyway\n\tif (!isSSR) {\n\t\tonDestroy(() => unregisterRoute(id));\n\t}\n</script>\n\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-route-start={id} />\n{#if isActive}\n\t<Router {primary}>\n\t\t<!--\n      `$params` always returns `{}` in SSR in Route, because it will\n      update after component initialisation has already happend.\n      `get(params)` always works, but is not reactive, so we can't\n      use it in client rendered mode\n    -->\n\t\t{#if component !== null}\n\t\t\t<svelte:component\n\t\t\t\tthis={component}\n\t\t\t\tlocation={$location}\n\t\t\t\t{navigate}\n\t\t\t\t{...isSSR ? get(params) : $params}\n\t\t\t\t{...$$restProps}\n\t\t\t/>\n\t\t{:else}\n\t\t\t<slot\n\t\t\t\tparams={isSSR ? get(params) : $params}\n\t\t\t\tlocation={$location}\n\t\t\t\t{navigate}\n\t\t\t/>\n\t\t{/if}\n\t</Router>\n{/if}\n<div style=\"display:none;\" aria-hidden=\"true\" data-svnav-route-end={id} />\n","import { writable } from 'svelte/store';\r\n\r\nStorage.prototype.setObject = function(key, value) {\r\n    this.setItem(key, JSON.stringify(value));\r\n}\r\n\r\nStorage.prototype.getObject = function(key) {\r\n    var value = this.getItem(key);\r\n    if (value == \"null\" || value == \"undefined\" || value == \"\") {\r\n        return 0 && JSON.parse(0);\r\n    }\r\n    return value && JSON.parse(value);\r\n}\r\n\r\nexport const indexsGraphics = writable(0);\r\nexport const resourcesGraphics = writable(0);\r\n\r\nexport const sectionActive = writable(window.localStorage.getObject(\"sectionActive\")) || \"\";\r\nexport const indexSelected = writable(0);\r\nexport const fxSelected = writable(0);\r\nexport const headSelected = writable(0);\r\nexport const helmetSelected = writable(0);\r\nexport const bodiesSelected = writable(0);\r\n\r\nexport const flagIndexLoaded = writable(window.localStorage.getObject(\"flagIndexLoaded\"));\r\nexport const flagResourcesLoaded = writable(window.localStorage.getObject(\"flagResourcesLoaded\"));\r\n\r\nexport const events = writable(0)\r\n\r\nflagIndexLoaded.subscribe(value => {\r\n    if (value == null) {\r\n        value = false\r\n    }\r\n    window.localStorage.setObject(\"flagIndexLoaded\", value);\r\n});\r\n\r\nflagResourcesLoaded.subscribe(value => {\r\n    if (value == null) {\r\n        value = false\r\n    }\r\n    window.localStorage.setObject(\"flagResourcesLoaded\", value);\r\n});\r\n","import { resourcesGraphics, flagResourcesLoaded, flagIndexLoaded } from \"./stores.js\";\r\n\r\nvar indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB || window.shimIndexedDB;\r\n\r\nconst DBResources = \"DBResources\";\r\n\r\nconst GraphicsStore = \"GraphicsStore\";\r\nconst GraphicsIndex = \"GraphicIndex\";\r\n\r\nconst IndexsStore = \"IndexsStore\";\r\nconst IndexsIndex = \"IndexsIndex\";\r\n\r\nconst IndexTags = [\"indexsGraphics\", \"indexsFx\", \"indexsHead\", \"indexsHelmet\", \"indexsBodies\"];\r\n\r\nconst version = 1;\r\nvar db = null;\r\n\r\nfunction initializeDB() {\r\n    return new Promise((resolve, reject) => {\r\n        const request = indexedDB.open(DBResources, version);\r\n\r\n        request.onupgradeneeded = function(e) {\r\n            db = e.target.result;\r\n            if (!db.objectStoreNames.contains(GraphicsStore)) {\r\n                var store = db.createObjectStore(GraphicsStore);\r\n                store.createIndex(GraphicsIndex, [\"id\"]);\r\n            }\r\n\r\n            if (!db.objectStoreNames.contains(IndexsStore)) {\r\n                var store = db.createObjectStore(IndexsStore);\r\n                store.createIndex(IndexsIndex, [\"id\"]);\r\n            }\r\n        };\r\n\r\n        request.onsuccess = function(e) {\r\n            db = e.target.result;\r\n            console.log(\"IndexedDB initialized\");\r\n            resolve();\r\n        };\r\n\r\n        request.onerror = function(e) {\r\n            reject(\"Error initializing database\");\r\n        };\r\n    });\r\n}\r\n\r\nexport async function SaveIndexs(tag, data) {\r\n    if (!db) {\r\n        await initializeDB();\r\n    }\r\n\r\n    console.log(\"IndexedDB.SaveIndexs: \" + tag);\r\n\r\n    if (IndexTags.indexOf(tag) == -1) {\r\n        console.log(\"IndexedDB.SaveIndexs: Error: Invalid tag: \" + tag);\r\n        return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        var tx = db.transaction(IndexsStore, \"readwrite\");\r\n        var store = tx.objectStore(IndexsStore);\r\n        var putRequest = store.put({id: tag, data: data}, tag);\r\n\r\n        putRequest.onsuccess = function() {\r\n            resolve();\r\n        };\r\n\r\n        putRequest.onerror = function(e) {\r\n            console.error(\"IndexedDB.SaveIndexs: Error:\", e);\r\n            reject(\"Error saving indexs\");\r\n        };\r\n    });\r\n}\r\n\r\nexport async function LoadIndexs(tag) {\r\n    if (!db) {\r\n        await initializeDB();\r\n    }\r\n\r\n    console.log(\"IndexedDB.LoadIndexs: \" + tag);\r\n\r\n    if (IndexTags.indexOf(tag) == -1) {\r\n        console.log(\"IndexedDB.LoadIndexs: Error: Invalid tag: \" + tag);\r\n        return;\r\n    }\r\n\r\n    let returned = undefined;\r\n    try {\r\n        returned = new Promise((resolve) => {\r\n            var tx = db.transaction(IndexsStore, \"readwrite\");\r\n            var store = tx.objectStore(IndexsStore);\r\n            var getAll = store.get(tag);\r\n\r\n            getAll.onsuccess = function() {\r\n                if (getAll.result == undefined) {\r\n                    console.log(\"IndexedDB.LoadIndexs: No indexs found [\" + tag + \"]\");\r\n                    resolve([]);\r\n                    return;\r\n                }\r\n                if (flagIndexLoaded) {\r\n                    flagIndexLoaded.set(true);\r\n                }\r\n                resolve(getAll.result.data);\r\n            }\r\n\r\n            getAll.onerror = function(e) {\r\n                console.error(\"IndexedDB.LoadIndexs: Error:\", e);\r\n                resolve([]);\r\n            };\r\n        });\r\n    } catch (e) {\r\n        console.log(\"IndexedDB.LoadIndexs: Error: \" + e);\r\n    }\r\n\r\n    return await returned;\r\n}\r\n\r\nexport async function CleanIndexs() {\r\n    if (!db) {\r\n        await initializeDB();\r\n    }\r\n\r\n    console.log(\"IndexedDB.CleanIndexs Init\");\r\n\r\n    let returned = undefined;\r\n    try {\r\n        returned = new Promise((resolve) => {\r\n            var tx = db.transaction(IndexsStore, \"readwrite\");\r\n            var store = tx.objectStore(IndexsStore);\r\n            store.clear();\r\n\r\n            resolve(true);\r\n        });\r\n    } catch (e) {\r\n        console.log(\"IndexedDB.CleanIndexs: Error: \" + e);\r\n    }\r\n\r\n    return await returned;\r\n}\r\n\r\nexport async function AddGraphic(grhnum, body) {\r\n    if (!db) {\r\n        await initializeDB();\r\n    }\r\n\r\n    // console.log(\"IndexedDB.AddGraphic: \" + grhnum);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        var tx = db.transaction(GraphicsStore, \"readwrite\");\r\n        var store = tx.objectStore(GraphicsStore);\r\n        var putRequest = store.put({id: parseInt(grhnum), body: body}, parseInt(grhnum));\r\n\r\n        putRequest.onsuccess = function() {\r\n            resolve();\r\n        };\r\n\r\n        putRequest.onerror = function(e) {\r\n            console.error(\"IndexedDB.AddGraphic: Error:\", e);\r\n            reject(\"Error adding graphic\");\r\n        };\r\n    });\r\n}\r\n\r\nexport async function CleanGraphics() {\r\n    if (!db) {\r\n        await initializeDB();\r\n    }\r\n\r\n    console.log(\"IndexedDB.CleanGraphics Init\");\r\n\r\n    let returned = undefined;\r\n    try {\r\n        returned = new Promise((resolve) => {\r\n            var tx = db.transaction(GraphicsStore, \"readwrite\");\r\n            var store = tx.objectStore(GraphicsStore);\r\n            store.clear();\r\n\r\n            resourcesGraphics.set([]);\r\n            flagResourcesLoaded.set(false);\r\n\r\n            tx.oncomplete = function() {\r\n                // db.close();\r\n                resolve(true);\r\n            };\r\n        });\r\n    } catch (e) {\r\n        console.log(\"IndexedDB.CleanGraphics: Error: \" + e);\r\n    }\r\n\r\n    return await returned;\r\n}\r\n\r\nexport async function LoadGraphics() {\r\n    if (!db) {\r\n        await initializeDB();\r\n    }\r\n\r\n    console.log(\"IndexedDB.LoadGraphics Init\");\r\n\r\n    let returned = undefined;\r\n    try {\r\n        returned = new Promise((resolve) => {\r\n            var tx = db.transaction(GraphicsStore, \"readwrite\");\r\n            var store = tx.objectStore(GraphicsStore);\r\n            var getAll = store.getAll();\r\n\r\n            getAll.onsuccess = function() {\r\n                if (getAll.result.length == 0) {\r\n                    console.log(\"IndexedDB.LoadGraphics: No resources found\");\r\n                    resourcesGraphics.set([]);\r\n                    flagResourcesLoaded.set(false);\r\n                    resolve([]);\r\n                    return;\r\n                } else {\r\n                    console.log(\"IndexedDB.LoadGraphics: Resources found: \" + getAll.result.length);\r\n                }\r\n\r\n                let list = [];\r\n                for (var i = 0; i < getAll.result.length; i++) {\r\n                    if (getAll.result[i].id>0) {\r\n                        list.push(getAll.result[i].id);\r\n                    }\r\n                }\r\n\r\n                resourcesGraphics.set(list);\r\n                flagResourcesLoaded.set(true);\r\n\r\n                console.log(\"IndexedDB.LoadGraphics: Resources loaded: \" + list.length);\r\n\r\n                resolve(list);\r\n            }\r\n        });\r\n    } catch (e) {\r\n        console.log(\"IndexedDB.LoadGraphics: Error: \" + e);\r\n    }\r\n\r\n    return await returned;\r\n}\r\n\r\nexport async function GetResourceBinary(grhnum) {\r\n    if (!db) {\r\n        await initializeDB();\r\n    }\r\n\r\n    console.log(\"IndexedDB.GetResourceBinary Init: \" + grhnum);\r\n\r\n    let returned = undefined;\r\n    try {\r\n        returned = new Promise((resolve) => {\r\n            var tx = db.transaction(GraphicsStore, \"readwrite\");\r\n            var store = tx.objectStore(GraphicsStore);\r\n            var getAll = store.get(parseInt(grhnum));\r\n\r\n            getAll.onsuccess = function() {\r\n                if (getAll.result == undefined) {\r\n                    console.log(\"IndexedDB.GetResourceBinary: No resource found\");\r\n                    resolve(\"\");\r\n                    return;\r\n                }\r\n                resolve(\"data:image/png;base64,\" + (getAll.result.body.toString('base64'))); // btoa\r\n            }\r\n        });\r\n    } catch (e) {\r\n        console.log(\"IndexedDB.GetResourceBinary: Error: \" + e);\r\n    }\r\n\r\n    return await returned;\r\n\r\n}","/*\r\n\r\nGolang example\r\n\r\nfunc compileIndex(indexFile TIndexFile) ([]byte, error) {\r\n\r\n\tbin := []byte{}\r\n\r\n\tbin = append(bin, writeLong(indexFile.Version)...)\r\n\tbin = append(bin, writeLong(indexFile.MaxGrh)...)\r\n\r\n\tfor _, ind := range indexFile.Indexs {\r\n\t\tbin = append(bin, writeLong(ind.GrhIndex)...)\r\n\t\tbin = append(bin, writeInteger(int16(len(ind.Frames)))...)\r\n\t\tif len(ind.Frames) == 1 {\r\n\t\t\tbin = append(bin, writeLong(ind.Frames[0])...)\r\n\t\t\tbin = append(bin, writeInteger(ind.PosX)...)\r\n\t\t\tbin = append(bin, writeInteger(ind.PosY)...)\r\n\t\t\tbin = append(bin, writeInteger(ind.Width)...)\r\n\t\t\tbin = append(bin, writeInteger(ind.Height)...)\r\n\t\t} else if len(ind.Frames) > 1 {\r\n\t\t\tfor i := 0; i < len(ind.Frames); i++ {\r\n\t\t\t\tbin = append(bin, writeLong(ind.Frames[i])...)\r\n\t\t\t}\r\n\t\t\tbin = append(bin, writeDouble(ind.Speed)...)\r\n\t\t}\r\n\t}\r\n\r\n\treturn bin, nil\r\n\r\n}\r\n\r\nfunc readIndexWithHead(index []byte) (TIndexFile, error) {\r\n\r\n\tvar (\r\n\t\tframes    int16\r\n\t\toffset    int\r\n\t\ttempInt16 int16\r\n\t\ttempIndex TIndex\r\n\t\tindexFile TIndexFile\r\n\t\tmaxGrh    int32\r\n\t)\r\n\r\n\tif len(index) < 8 {\r\n\t\treturn indexFile, fmt.Errorf(\"Index file is empty\")\r\n\t}\r\n\r\n\toffset = 255 + 4 + 4 // Cabecera\r\n\r\n\ttempInt16, offset = readInteger(index[offset:], offset)\r\n\ttempInt16, offset = readInteger(index[offset:], offset)\r\n\ttempInt16, offset = readInteger(index[offset:], offset)\r\n\ttempInt16, offset = readInteger(index[offset:], offset)\r\n\ttempInt16, offset = readInteger(index[offset:], offset)\r\n\r\n\t// Grh\r\n\ttempInt16, offset = readInteger(index[offset:], offset)\r\n\tfor {\r\n\t\tif tempInt16 == 0 {\r\n\t\t\tbreak\r\n\t\t}\r\n\r\n\t\ttempIndex = TIndex{}\r\n\t\ttempIndex.GrhIndex = int32(tempInt16)\r\n\t\tif maxGrh < tempIndex.GrhIndex {\r\n\t\t\tmaxGrh = tempIndex.GrhIndex\r\n\t\t}\r\n\t\tframes, offset = readInteger(index[offset:], offset)\r\n\t\tif frames < 0 {\r\n\t\t\treturn indexFile, fmt.Errorf(\"Frames is less than 0\")\r\n\t\t} else if frames == 1 { // Estatico\r\n\t\t\ttempInt16, offset = readInteger(index[offset:], offset)\r\n\t\t\tif tempInt16 < 0 {\r\n\t\t\t\treturn indexFile, fmt.Errorf(\"Image on Grh %d is less than 0\", tempIndex.GrhIndex)\r\n\t\t\t}\r\n\t\t\ttempIndex.Frames = append(tempIndex.Frames, int32(tempInt16))\r\n\t\t\ttempIndex.PosX, offset = readInteger(index[offset:], offset)\r\n\t\t\ttempIndex.PosY, offset = readInteger(index[offset:], offset)\r\n\t\t\ttempIndex.Width, offset = readInteger(index[offset:], offset)\r\n\t\t\ttempIndex.Height, offset = readInteger(index[offset:], offset)\r\n\t\t} else if frames > 1 { // Animación\r\n\t\t\tfor i := int16(0); i < frames; i++ {\r\n\t\t\t\ttempInt16, offset = readInteger(index[offset:], offset)\r\n\t\t\t\tif tempInt16 < 0 {\r\n\t\t\t\t\treturn indexFile, fmt.Errorf(\"Frame on Grh %d is less than 0\", tempIndex.GrhIndex)\r\n\t\t\t\t}\r\n\t\t\t\ttempIndex.Frames = append(tempIndex.Frames, int32(tempInt16))\r\n\t\t\t}\r\n\t\t\ttempInt16, offset = readInteger(index[offset:], offset)\r\n\t\t\ttempIndex.Speed = float32(tempInt16)\r\n\t\t}\r\n\r\n\t\tindexFile.Indexs = append(indexFile.Indexs, tempIndex)\r\n\r\n\t\ttempInt16, offset = readInteger(index[offset:], offset)\r\n\t}\r\n\r\n\tindexFile.MaxGrh = maxGrh\r\n\tindexFile.Version = int32(0)\r\n\r\n\treturn indexFile, nil\r\n}\r\n\r\nfunc readIndex(index []byte) (TIndexFile, error) {\r\n\r\n\tvar (\r\n\t\tframes    int16\r\n\t\toffset    int\r\n\t\ttempIndex TIndex\r\n\t\tindexFile TIndexFile\r\n\t)\r\n\r\n\tif len(index) < 8 {\r\n\t\treturn indexFile, fmt.Errorf(\"Index file is empty\")\r\n\t}\r\n\r\n\tindexFile.Version, offset = readLong(index[offset:], offset)\r\n\tindexFile.MaxGrh, offset = readLong(index[offset:], offset)\r\n\r\n\t// fmt.Println(\"Index version:\", indexFile.Version)\r\n\t// fmt.Println(\"Max grh:\", indexFile.MaxGrh)\r\n\r\n\tindexFile.Indexs = make([]TIndex, 0)\r\n\r\n\tfor offset < len(index) {\r\n\r\n\t\ttempIndex = TIndex{}\r\n\t\ttempIndex.GrhIndex, offset = readLong(index[offset:], offset)\r\n\t\tframes, offset = readInteger(index[offset:], offset)\r\n\t\tif frames < 0 {\r\n\t\t\treturn indexFile, fmt.Errorf(\"Frames is less than 0\")\r\n\t\t}\r\n\t\ttempIndex.Frames = make([]int32, frames)\r\n\r\n\t\tif len(tempIndex.Frames) == 1 {\r\n\t\t\ttempIndex.Frames[0], offset = readLong(index[offset:], offset)\r\n\t\t\ttempIndex.PosX, offset = readInteger(index[offset:], offset)\r\n\t\t\ttempIndex.PosY, offset = readInteger(index[offset:], offset)\r\n\t\t\ttempIndex.Width, offset = readInteger(index[offset:], offset)\r\n\t\t\ttempIndex.Height, offset = readInteger(index[offset:], offset)\r\n\t\t} else if len(tempIndex.Frames) > 1 {\r\n\t\t\tfor j := 0; j < len(tempIndex.Frames); j++ {\r\n\t\t\t\ttempIndex.Frames[j], offset = readLong(index[offset:], offset)\r\n\t\t\t}\r\n\t\t\ttempIndex.Speed, offset = readDouble(index[offset:], offset)\r\n\t\t}\r\n\r\n\t\tif tempIndex.GrhIndex > indexFile.MaxGrh {\r\n\t\t\tlog.Println(\"Grh index \", tempIndex.GrhIndex, \" is greater than max grh\")\r\n\t\t\treturn indexFile, fmt.Errorf(fmt.Sprintf(\"Grh index %d is greater than max grh\", tempIndex.GrhIndex))\r\n\t\t}\r\n\r\n\t\tindexFile.Indexs = append(indexFile.Indexs, tempIndex)\r\n\t}\r\n\r\n\treturn indexFile, nil\r\n\r\n}\r\n*/\r\n\r\n// binary convertion functions\r\n\r\nfunction writeLong(value) { // int32\r\n\tvar buffer = new ArrayBuffer(4);\r\n\tvar view = new DataView(buffer);\r\n\tview.setInt32(0, value, true);\r\n\treturn new Uint8Array(buffer);\r\n}\r\n\r\nfunction writeInteger(value) { // int16\r\n\tvar buffer = new ArrayBuffer(2);\r\n\tvar view = new DataView(buffer);\r\n\tview.setInt16(0, value, true);\r\n\treturn new Uint8Array(buffer);\r\n}\r\n\r\nfunction writeDouble(value) { // float32\r\n\tvar buffer = new ArrayBuffer(4);\r\n\tvar view = new DataView(buffer);\r\n\tview.setFloat32(0, value, true);\r\n\treturn new Uint8Array(buffer);\r\n}\r\n\r\nfunction readLong(buffer, offset) { // int32\r\n\tlet array = new ArrayBuffer(4);\r\n\tlet view = new DataView(array);\r\n\tview.setUint8(0, buffer[offset]);\r\n\tview.setUint8(1, buffer[offset + 1]);\r\n\tview.setUint8(2, buffer[offset + 2]);\r\n\tview.setUint8(3, buffer[offset + 3]);\r\n\tlet value = view.getInt32(0, true);\r\n\r\n\treturn [value, offset + 4];\r\n}\r\n\r\nfunction readInteger(buffer, offset) { // int16\r\n\tlet array = new ArrayBuffer(2);\r\n\tlet view = new DataView(array);\r\n\tview.setUint8(0, buffer[offset]);\r\n\tview.setUint8(1, buffer[offset + 1]);\r\n\tlet value = view.getInt16(0, true);\r\n\r\n\treturn [value, offset + 2];\r\n}\r\n\r\nfunction readDouble(buffer, offset) { // float32\r\n\tlet array = new ArrayBuffer(4);\r\n\tlet view = new DataView(array);\r\n\tview.setUint8(0, buffer[offset]);\r\n\tview.setUint8(1, buffer[offset + 1]);\r\n\tview.setUint8(2, buffer[offset + 2]);\r\n\tview.setUint8(3, buffer[offset + 3]);\r\n\tlet value = view.getFloat32(0, true);\r\n\r\n\treturn [value, offset + 4];\r\n}\r\n\r\n// Javascript version\r\n\r\n// json struct\r\n/*\r\n{\r\n\t\"version\": 0,\r\n\t\"maxGrh\": 0,\r\n\t\"indexs\": [\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"frames\": [\r\n\t\t\t\t0\r\n\t\t\t],\r\n\t\t\t\"x\": 0,\r\n\t\t\t\"y\": 0,\r\n\t\t\t\"w\": 0,\r\n\t\t\t\"h\": 0,\r\n\t\t\t\"speed\": 0.0,\r\n\t\t}\r\n\t],\r\n}\r\n*/\r\n\r\n// json to binary file\r\n\r\n// console.log(\"Test logic\");\r\n// console.log(writeInteger(1));\r\n// console.log(writeInteger(32));\r\n// console.log(writeInteger(1024));\r\n// console.log(writeInteger(32768));\r\n// console.log(writeLong(1));\r\n// console.log(writeLong(1024));\r\n// console.log(writeLong(32768));\r\n// console.log(writeLong(2147483648));\r\n// console.log(writeDouble(1.0));\r\n// console.log(writeDouble(1.5));\r\n// console.log(writeDouble(1.25));\r\n// console.log(writeDouble(1.125));\r\n\r\nfunction stringToUTF8Bytes(string) {\r\n\tlet utf8 = new Uint8Array(string.length);\r\n\tfor (let i = 0; i < string.length; i++) {\r\n\t\tlet charcode = string.charCodeAt(i);\r\n\t\tutf8[i] = charcode;\r\n\t}\r\n\treturn utf8;\r\n}\r\n\r\nfunction UTF8BytesToString(bytes) {\r\n\tlet string = \"\";\r\n\tfor (let i = 0; i < bytes.length; i++) {\r\n\t\tstring += String.fromCharCode(bytes[i]);\r\n\t}\r\n\treturn string;\r\n}\r\n\r\nfunction readHeader(arrayBuffer) {\r\n\tlet header = arrayBuffer.slice(0, 255);\r\n\r\n\tfor (let i = 0; i < header.length; i++) {\r\n\t\tif (header[i] < 32 || header[i] > 126) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\tlet offset = 255;\r\n\tlet crc;\r\n\tlet magic;\r\n\r\n\r\n\t[crc, offset] = readLong(arrayBuffer, offset);\r\n\tif (crc > 100) {\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t[magic, offset] = readLong(arrayBuffer, offset);\r\n\tif (magic > 10) {\r\n\t\treturn offset;\r\n\t}\r\n\r\n\treturn offset\r\n}\r\n\r\nexport function ReadBinaryFx(binaryFile) {\r\n\tlet arrayBuffer = stringToUTF8Bytes(binaryFile);\r\n\r\n\t// console.log(\"completo \",arrayBuffer);\r\n\r\n\tlet offset = readHeader(arrayBuffer);\r\n\t// console.log(\"offset \",offset);\r\n\r\n\tlet Fxs = [];\r\n\tlet totalFx;\r\n\r\n\t[totalFx, offset] = readInteger(arrayBuffer, offset);\r\n\r\n\tfor (let i = 0; i < totalFx; i++) {\r\n\t\tlet tempFx = {\r\n\t\t\tindex: 0,\r\n\t\t\tanim: 0,\r\n\t\t\toffsetX: 0,\r\n\t\t\toffsetY: 0,\r\n\t\t\tisPNG: 0,\r\n\t\t};\r\n\r\n\t\ttempFx.index = i + 1;\r\n\t\t[tempFx.anim, offset] = readLong(arrayBuffer, offset);\r\n\t\t[tempFx.offsetX, offset] = readInteger(arrayBuffer, offset);\r\n\t\t[tempFx.offsetY, offset] = readInteger(arrayBuffer, offset);\r\n\r\n\t\tlet value;\r\n\t\tlet tempOffset;\r\n\t\t[value, tempOffset] = readInteger(arrayBuffer, offset);\r\n\t\tif (value == 0 || value == 1)  {\r\n\t\t\tif (value == 1) {\r\n\t\t\t\ttempFx.isPNG = 1;\r\n\t\t\t} else {\r\n\t\t\t\ttempFx.isPNG = 0;\r\n\t\t\t}\r\n\t\t\toffset = tempOffset;\r\n\t\t}\r\n\r\n\t\tif (tempFx.anim > 0) {\r\n\t\t\tFxs.push(tempFx);\r\n\t\t}\r\n\t}\r\n\r\n\treturn Fxs;\r\n}\r\n\r\nexport function ReadBinaryHead(binaryFile) {\r\n\tlet arrayBuffer = stringToUTF8Bytes(binaryFile);\r\n\r\n\t// console.log(\"completo \",arrayBuffer);\r\n\r\n\tlet offset = readHeader(arrayBuffer);\r\n\t// console.log(\"offset \",offset);\r\n\r\n\tlet Heads = [];\r\n\tlet totalHeads;\r\n\r\n\t[totalHeads, offset] = readInteger(arrayBuffer, offset);\r\n\r\n\tfor (let i = 0; i < totalHeads; i++) {\r\n\t\tlet tempHead = {\r\n\t\t\tindex: 0,\r\n\t\t\thead: [],\r\n\t\t};\r\n\r\n\t\ttempHead.index = i + 1;\r\n\t\t[tempHead.head[0], offset] = readLong(arrayBuffer, offset);\r\n\t\t[tempHead.head[1], offset] = readLong(arrayBuffer, offset);\r\n\t\t[tempHead.head[2], offset] = readLong(arrayBuffer, offset);\r\n\t\t[tempHead.head[3], offset] = readLong(arrayBuffer, offset);\r\n\r\n\t\tHeads.push(tempHead);\r\n\t}\r\n\r\n\treturn Heads;\r\n}\r\n\r\nexport function ReadBinaryHelmet(binaryFile) {\r\n\tlet arrayBuffer = stringToUTF8Bytes(binaryFile);\r\n\r\n\t// console.log(\"completo \",arrayBuffer);\r\n\r\n\tlet offset = readHeader(arrayBuffer);\r\n\t// console.log(\"offset \",offset);\r\n\r\n\tlet Helmets = [];\r\n\tlet totalHelmets;\r\n\r\n\t[totalHelmets, offset] = readInteger(arrayBuffer, offset);\r\n\t// console.log(\"totalHelmets \",totalHelmets);\r\n\r\n\tfor (let i = 0; i < totalHelmets; i++) {\r\n\t\tlet tempHelmet = {\r\n\t\t\tindex: 0,\r\n\t\t\thelmet: [],\r\n\t\t};\r\n\r\n\t\ttempHelmet.index = i + 1;\r\n\t\t[tempHelmet.helmet[0], offset] = readLong(arrayBuffer, offset);\r\n\t\t[tempHelmet.helmet[1], offset] = readLong(arrayBuffer, offset);\r\n\t\t[tempHelmet.helmet[2], offset] = readLong(arrayBuffer, offset);\r\n\t\t[tempHelmet.helmet[3], offset] = readLong(arrayBuffer, offset);\r\n\r\n\t\tHelmets.push(tempHelmet);\r\n\t}\r\n\r\n\treturn Helmets;\r\n}\r\n\r\n\r\nexport function ReadBinaryBodies(binaryFile) {\r\n\tlet arrayBuffer = stringToUTF8Bytes(binaryFile);\r\n\r\n\t// console.log(\"completo \",arrayBuffer);\r\n\r\n\tlet offset = readHeader(arrayBuffer);\r\n\t// console.log(\"offset \",offset);\r\n\r\n\tlet Bodies = [];\r\n\tlet totalBodies;\r\n\r\n\t[totalBodies, offset] = readInteger(arrayBuffer, offset);\r\n\t// console.log(\"totalBodies \",totalBodies);\r\n\r\n\tfor (let i = 0; i < totalBodies; i++) {\r\n\t\tlet tempBody = {\r\n\t\t\tindex: 0,\r\n\t\t\tbody: [],\r\n\t\t\theadOffsetX: 0,\r\n\t\t\theadOffsetY: 0,\r\n\t\t};\r\n\r\n\t\ttempBody.index = i + 1;\r\n\t\t[tempBody.body[0], offset] = readLong(arrayBuffer, offset);\r\n\t\t[tempBody.body[1], offset] = readLong(arrayBuffer, offset);\r\n\t\t[tempBody.body[2], offset] = readLong(arrayBuffer, offset);\r\n\t\t[tempBody.body[3], offset] = readLong(arrayBuffer, offset);\r\n\t\t[tempBody.headOffsetX, offset] = readInteger(arrayBuffer, offset);\r\n\t\t[tempBody.headOffsetY, offset] = readInteger(arrayBuffer, offset);\r\n\r\n\t\tBodies.push(tempBody);\r\n\t}\r\n\r\n\treturn Bodies;\r\n}\r\n\r\nexport function ReadStringIndex(indexFile) { // graficos.ini\r\n\tlet arrayBuffer = stringToUTF8Bytes(indexFile);\r\n\r\n\tconsole.log(\"completo \", arrayBuffer);\r\n\r\n\tlet index = {\r\n\t\tversion: 0,\r\n\t\tmaxGrh: 0,\r\n\t\tindexs: [],\r\n\t};\r\n\r\n\tlet offset = 0;\r\n\tlet temp = \"\";\r\n\r\n\tlet tempInit = false;\r\n\r\n\twhile (offset < arrayBuffer.length) {\r\n\t\ttemp = \"\";\r\n\t\twhile (arrayBuffer[offset] != 10 && offset < arrayBuffer.length) {\r\n\t\t\ttemp += String.fromCharCode(arrayBuffer[offset]);\r\n\t\t\toffset++;\r\n\t\t}\r\n\t\toffset++;\r\n\r\n\t\t// console.log(\"temp \", temp);\r\n\r\n\t\tif (\"\" == temp.trim()) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (\"[INIT]\" == temp.trim().toUpperCase()) {\r\n\t\t\ttempInit = true;\r\n\t\t\tcontinue;\t\t\r\n\t\t}\r\n\r\n\t\tif (\"[GRAPHICS]\" == temp.trim().toUpperCase()) {\r\n\t\t\ttempInit = false;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (tempInit) {\r\n\t\t\tlet data = temp.split(\"=\");\r\n\t\t\tif (data[0] == \"NumGrh\") {\r\n\t\t\t\tindex.maxGrh = parseInt(data[1]);\r\n\t\t\t} else if (data[0] == \"Version\") {\r\n\t\t\t\tindex.version = parseFloat(data[1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!tempInit) {\r\n\t\t\tlet data = temp.split(\"=\");\r\n\t\t\tlet tempIndex = {\r\n\t\t\t\tindex: parseInt(data[0].substring(3)),\r\n\t\t\t\tframes: [],\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\tw: 0,\r\n\t\t\t\th: 0,\r\n\t\t\t\tspeed: 0.0,\r\n\t\t\t};\r\n\r\n\t\t\tlet tempData = data[1].split(\"-\");\r\n\t\t\tif (tempData[0] == \"1\") {\r\n\t\t\t\ttempIndex.frames.push(parseInt(tempData[1]));\r\n\t\t\t\ttempIndex.x = parseInt(tempData[2]);\r\n\t\t\t\ttempIndex.y = parseInt(tempData[3]);\r\n\t\t\t\ttempIndex.w = parseInt(tempData[4]);\r\n\t\t\t\ttempIndex.h = parseInt(tempData[5]);\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 1; i < tempData.length - 1; i++) {\r\n\t\t\t\t\ttempIndex.frames.push(parseInt(tempData[i]));\r\n\t\t\t\t}\r\n\t\t\t\ttempIndex.speed = parseFloat(tempData[tempData.length - 1]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (tempIndex.index > index.maxGrh) {\r\n\t\t\t\tconsole.log(\"Grh index \", tempIndex.index, \" is greater than max grh\");\r\n\t\t\t\treturn index;\r\n\t\t\t}\r\n\r\n\t\t\tif (tempIndex.index > 0) {\r\n\t\t\t\tindex.indexs.push(tempIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconsole.log(\"Index version:\", index.version);\r\n\tconsole.log(\"Max grh:\", index.maxGrh);\r\n\tconsole.log(\"Index length:\", index.indexs.length);\r\n\r\n\treturn index;\r\n}\r\n\r\nexport function ReadBinaryIndex(binaryFile) { // graficos.ind\r\n\tlet arrayBuffer = stringToUTF8Bytes(binaryFile);\r\n\t\r\n\tlet index = {\r\n\t\tversion: 0,\r\n\t\tmaxGrh: 0,\r\n\t\tindexs: [],\r\n\t};\r\n\r\n\tlet offset = 0;\r\n\tlet temp = \"\";\r\n\r\n\t[index.version, offset] = readLong(arrayBuffer, offset);\r\n\t[index.maxGrh, offset] = readLong(arrayBuffer, offset);\r\n\r\n\tconsole.log(\"Index version:\", index.version);\r\n\tconsole.log(\"Max grh:\", index.maxGrh);\r\n\r\n\tfor (let i = 0; i < index.maxGrh; i++) {\r\n\t\tlet tempIndex = {\r\n\t\t\tindex: 0,\r\n\t\t\tframes: [],\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\tw: 0,\r\n\t\t\th: 0,\r\n\t\t\tspeed: 0.0,\r\n\t\t};\r\n\r\n\t\t[tempIndex.index, offset] = readLong(arrayBuffer, offset);\r\n\t\tlet frames = 0;\r\n\t\t[frames, offset] = readInteger(arrayBuffer, offset);\r\n\r\n\t\tif (frames == 1) {\r\n\t\t\ttempIndex.frames.push(readLong(arrayBuffer, offset)[0]);\r\n\t\t\toffset += 4;\r\n\t\t\t[tempIndex.x, offset] = readInteger(arrayBuffer, offset);\r\n\t\t\t[tempIndex.y, offset] = readInteger(arrayBuffer, offset);\r\n\t\t\t[tempIndex.w, offset] = readInteger(arrayBuffer, offset);\r\n\t\t\t[tempIndex.h, offset] = readInteger(arrayBuffer, offset);\r\n\t\t} else if (frames > 1) {\r\n\t\t\tfor (let j = 0; j < frames; j++) {\r\n\t\t\t\ttempIndex.frames.push(readLong(arrayBuffer, offset)[0]);\r\n\t\t\t\toffset += 4;\r\n\t\t\t}\r\n\t\t\t[tempIndex.speed, offset] = readDouble(arrayBuffer, offset);\r\n\t\t}\r\n\r\n\t\tif (tempIndex.index > index.maxGrh) {\r\n\t\t\tconsole.log(\"Grh index \", tempIndex.index, \" is greater than max grh\");\r\n\t\t\treturn index;\r\n\t\t}\r\n\r\n\t\tif (tempIndex.index >0) {\r\n\t\t\t// console.log(tempIndex);\r\n\t\t\tindex.indexs.push(tempIndex);\r\n\t\t}\r\n\t}\r\n\r\n\treturn index;\r\n}\r\n\r\n\r\nexport function CompileBinaryIndex(index) {\r\n    var binaryFile = [];\r\n\r\n\tbinaryFile.push(writeLong(index.version));\r\n\tbinaryFile.push(writeLong(index.maxGrh));\r\n\r\n\tfor (var i = 0; i < index.indexs.length; i++) {\r\n\t\tbinaryFile.push(writeLong(index.indexs[i].index));\r\n\t\tbinaryFile.push(writeInteger(index.indexs[i].frames.length));\r\n\r\n\t\tif (index.indexs[i].frames.length == 1) {\r\n\t\t\tbinaryFile.push(writeLong(index.indexs[i].frames[0]));\r\n\t\t\tbinaryFile.push(writeInteger(index.indexs[i].x));\r\n\t\t\tbinaryFile.push(writeInteger(index.indexs[i].y));\r\n\t\t\tbinaryFile.push(writeInteger(index.indexs[i].w));\r\n\t\t\tbinaryFile.push(writeInteger(index.indexs[i].h));\r\n\t\t} else if (index.indexs[i].frames.length > 1) {\r\n\t\t\tfor (var j = 0; j < index.indexs[i].frames.length; j++) {\r\n\t\t\t\tbinaryFile.push(writeLong(index.indexs[i].frames[j]));\r\n\t\t\t}\r\n\t\t\tbinaryFile.push(writeDouble(index.indexs[i].speed));\r\n\t\t}\r\n\t}\r\n\r\n\treturn binaryFile;\r\n}\r\n\r\nexport function CompileIniIndex(index) {\r\n\tvar iniFile = \"\";\r\n\r\n\tiniFile += \"[INIT]\\n\";\r\n\tiniFile += \"NumGrh=\" + index.maxGrh + \"\\n\";\r\n\tiniFile += \"Version=\" + index.version + \"\\n\\n\";\r\n\r\n\tiniFile += \"[Graphics]\\n\";\r\n\tfor (var i = 0; i < index.indexs.length; i++) {\r\n\t\tiniFile += \"Grh\" + index.indexs[i].index + \"=\";\r\n\t\tiniFile += index.indexs[i].frames.length + \"-\";\r\n\r\n\t\tif (index.indexs[i].frames.length == 1) {\r\n\t\t\tiniFile += index.indexs[i].frames[0] + \"-\";\r\n\t\t\tiniFile += index.indexs[i].x + \"-\";\r\n\t\t\tiniFile += index.indexs[i].y + \"-\";\r\n\t\t\tiniFile += index.indexs[i].w + \"-\";\r\n\t\t\tiniFile += index.indexs[i].h + \"\\n\";\r\n\t\t} else if (index.indexs[i].frames.length > 1) {\r\n\t\t\tfor (var j = 0; j < index.indexs[i].frames.length; j++) {\r\n\t\t\t\tiniFile += index.indexs[i].frames[j] + \"-\";\r\n\t\t\t}\r\n\t\t\tiniFile += index.indexs[i].speed + \"\\n\";\r\n\t\t}\r\n\t}\r\n\r\n\treturn iniFile;\r\n}","<script>\r\n  import { flagIndexLoaded } from '../stores.js';\r\n  import { AddGraphic, LoadGraphics, SaveIndexs, LoadIndexs } from '../indexdb.js';\r\n\r\n  import { ReadBinaryIndex, ReadStringIndex, ReadBinaryHead, ReadBinaryHelmet, ReadBinaryBodies, ReadBinaryFx } from './logic/indexCompiler.js';\r\n\r\n  import {\r\n    Button, Modal, ModalBody, ModalFooter,\r\n    ModalHeader, Row, Col, InputGroup,\r\n    InputGroupText, Input, Spinner, Alert, NavLink,\r\n  } from 'sveltestrap';\r\n\r\n  export let mode;\r\n\r\n  let open = false;\r\n  let uploading = false;\r\n  let msgError = \"\";\r\n  let msgResources = \"\";\r\n\r\n  const toggle = () => {\r\n    if (uploading) {\r\n      return;\r\n    }\r\n    msgResources = \"\";\r\n    msgError = \"\";\r\n    open = !open;\r\n  }\r\n\r\n  function upload() {\r\n    if (uploading) {\r\n      return;\r\n    }\r\n\r\n    if (document.getElementById('fileResources').files.length > 0) {\r\n\r\n      if (!'indexedDB' in window){\r\n        alert(\"Tu navegador no soporta IndexedDB\");\r\n        return;\r\n      }\r\n\r\n      if ('storage' in navigator && 'estimate' in navigator.storage) {\r\n        navigator.storage.estimate().then(function(estimate) {\r\n          console.log('El almacenamiento máximo disponible en indexedDB es de ' + estimate.quota + ' bytes.');\r\n        });\r\n      }\r\n      \r\n      let count = 0;\r\n      let loading = 0;\r\n      msgResources = \"Cargando recursos...\";\r\n      msgError = \"\";\r\n      \r\n      for (let i = 0; i < document.getElementById('fileResources').files.length; i++) {\r\n        let file = document.getElementById(\"fileResources\").files[i];\r\n\r\n        if (file) {\r\n          let grhNum = file.name.split('.')[0];\r\n\r\n          if (file.webkitRelativePath) {\r\n            let pathString = file.webkitRelativePath;\r\n            pathString = pathString.replace(/\\\\/g, \"/\")\r\n            pathString = pathString.substring(0,pathString.lastIndexOf(\"/\"+file.name));\r\n            let path = pathString.split('/');\r\n            if (path.length > 1) {\r\n              console.log(\"GRH ignored by subfolder: \" + file.name + \" (\" + path[0] + \")\" + \" (\" + path[1] + \")\");\r\n              continue;\r\n            }\r\n          }\r\n          if (isNaN(grhNum)) {\r\n            console.log(\"Invalid GRH number: \" + file.name);\r\n            continue;\r\n          }\r\n\r\n          let body = new Blob;\r\n\r\n          var reader = new FileReader();\r\n          reader.onload = function (evt) {\r\n            body = evt.target.result;\r\n            console.log(\"GRH added: \" + file.name);\r\n            // console.log(file);\r\n\r\n            const base64body = btoa(body); // base64 encode the file\r\n            AddGraphic(grhNum, base64body);\r\n            \r\n            count++;\r\n            msgResources = count + \"/\" + loading + \" Recursos cargados! 🦎\";\r\n            if (count == loading) {\r\n              msgResources = \"Inicializando recursos! 🦎\";\r\n              msgError = \"\";\r\n              LoadGraphics();\r\n            }\r\n          };\r\n\r\n          reader.onerror = function (evt) {\r\n            msgError = evt;\r\n            return;\r\n          }\r\n\r\n          loading++;\r\n          reader.readAsBinaryString(file);\r\n          \r\n        }\r\n\r\n      }\r\n      if (msgError != \"\") {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (document.getElementById('fileIndexs').files.length > 0) {\r\n      if (document.getElementById('fileIndexs').files[0].size > 50000000) {\r\n        msgError = \"El archivo seleccionado es muy grande\";\r\n        return;\r\n      }\r\n      msgError = \"\";\r\n      uploading = true;\r\n\r\n      function receivedBinary() {\r\n        uploading = false;\r\n        msgResources = \"Indice cargado! 🦎\";\r\n        toggle();\r\n        const name = document.getElementById('fileIndexs').files[0].name;\r\n        if (name.includes(\".ini\")) {\r\n          let data = ReadStringIndex(fr.result);\r\n          // $indexsComplete = data;\r\n          SaveIndexs(\"indexsGraphics\", data);\r\n\r\n        } else {\r\n          let data = ReadBinaryIndex(fr.result);\r\n          // $indexsComplete = data;\r\n          SaveIndexs(\"indexsGraphics\", data);\r\n        }\r\n        $flagIndexLoaded = true;\r\n        return;\r\n      }\r\n\r\n      let fr = new FileReader();\r\n      fr.onload = receivedBinary;\r\n      fr.readAsBinaryString(document.getElementById('fileIndexs').files[0]);\r\n    }\r\n\r\n    if (document.getElementById('fileHelmet').files.length > 0) {\r\n      if (document.getElementById('fileHelmet').files[0].size > 5000000) {\r\n        msgError = \"El archivo seleccionado es muy grande\";\r\n        return;\r\n      }\r\n      msgError = \"\";\r\n      uploading = true;\r\n\r\n      function receivedBinary() {\r\n        uploading = false;\r\n        msgResources = \"Cascos cargadas! 🦎\";\r\n        toggle();\r\n        let data = ReadBinaryHelmet(fr.result);\r\n        // console.log(data);\r\n        SaveIndexs(\"indexsHelmet\", data); //$indexsHelmet = data;\r\n        return;\r\n      }\r\n\r\n      let fr = new FileReader();\r\n      fr.onload = receivedBinary;\r\n      fr.readAsBinaryString(document.getElementById('fileHelmet').files[0]);\r\n    }\r\n\r\n    if (document.getElementById('fileBodies').files.length > 0) {\r\n      if (document.getElementById('fileBodies').files[0].size > 5000000) {\r\n        msgError = \"El archivo seleccionado es muy grande\";\r\n        return;\r\n      }\r\n      msgError = \"\";\r\n      uploading = true;\r\n\r\n      function receivedBinary() {\r\n        uploading = false;\r\n        msgResources = \"Cuerpos cargados! 🦎\";\r\n        toggle();\r\n        let data = ReadBinaryBodies(fr.result);\r\n        // console.log(data);\r\n        SaveIndexs(\"indexsBodies\", data);// $indexsBodies = data;\r\n        return;\r\n      }\r\n\r\n      let fr = new FileReader();\r\n      fr.onload = receivedBinary;\r\n      fr.readAsBinaryString(document.getElementById('fileBodies').files[0]);\r\n    }\r\n\r\n\r\n\r\n    if (document.getElementById('fileHead').files.length > 0) {\r\n      if (document.getElementById('fileHead').files[0].size > 5000000) {\r\n        msgError = \"El archivo seleccionado es muy grande\";\r\n        return;\r\n      }\r\n      msgError = \"\";\r\n      uploading = true;\r\n\r\n      function receivedBinary() {\r\n        uploading = false;\r\n        msgResources = \"Cabezas cargadas! 🦎\";\r\n        toggle();\r\n        let data = ReadBinaryHead(fr.result);\r\n        // console.log(data);\r\n        SaveIndexs(\"indexsHead\", data); // $indexsHead = data;\r\n        return;\r\n      }\r\n\r\n      let fr = new FileReader();\r\n      fr.onload = receivedBinary;\r\n      fr.readAsBinaryString(document.getElementById('fileHead').files[0]);\r\n    }\r\n\r\n    if (document.getElementById('fileFx').files.length > 0) {\r\n      if (document.getElementById('fileFx').files[0].size > 5000000) {\r\n        msgError = \"El archivo seleccionado es muy grande\";\r\n        return;\r\n      }\r\n      msgError = \"\";\r\n      uploading = true;\r\n\r\n      function receivedBinary() {\r\n        uploading = false;\r\n        msgResources = \"FX's cargado! 🦎\";\r\n        toggle();\r\n        let data = ReadBinaryFx(fr.result);\r\n        // console.log(data);\r\n        SaveIndexs(\"indexsFx\", data); // $indexsFx = data;\r\n        return;\r\n      }\r\n\r\n      let fr = new FileReader();\r\n      fr.onload = receivedBinary;\r\n      fr.readAsBinaryString(document.getElementById('fileFx').files[0]);\r\n    }\r\n\r\n    if (msgError.length == 0) {\r\n      // $flagIndexLoaded = true;\r\n    };\r\n  }\r\n\r\n</script>\r\n  \r\n<div>\r\n  {#if (mode=='button')}\r\n    <Button color=\"primary\" on:click={toggle} title=\"Subir un nuevo indice o recursos graficos\">Cargar recursos</Button>\r\n  {:else}\r\n    <NavLink color=\"warning\" on:click={toggle} title=\"Subir un nuevo indice o recursos graficos\">Cargar recursos</NavLink>\r\n  {/if}\r\n  <Modal isOpen={open} {toggle} modalClassName=\"modal-dark\">\r\n    <ModalHeader {toggle}>Cargar recursos</ModalHeader>\r\n    <ModalBody>\r\n      <h6>Selecciona la carpeta en donde estan tus graficos BMP o PNG.</h6>\r\n      <Row>\r\n        <Col>\r\n          <InputGroup class=\"input-dark\">\r\n            <Input type=\"file\" name=\"fileResources\" id=\"fileResources\" directory webkitdirectory mozdirectory multiple />\r\n            <!-- webkitdirectory directory  -->\r\n            <InputGroupText>\r\n              Recursos\r\n            </InputGroupText>\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <br/>\r\n      <h6>Selecciona los indices con los que vas a trabajar.</h6>\r\n      <Row>\r\n        <Col>\r\n          <InputGroup class=\"input-dark\">\r\n            \r\n            <Input type=\"file\" name=\"fileIndexs\" id=\"fileIndexs\" />\r\n            <InputGroupText>\r\n              Indices de Graficos (🟢 ini/ind)\r\n            </InputGroupText>\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroup class=\"input-dark\">\r\n            <Input type=\"file\" name=\"fileHead\" id=\"fileHead\" />\r\n            <InputGroupText>\r\n              Indices de Cabezas (🟢 ind)\r\n            </InputGroupText>\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroup class=\"input-dark\">\r\n            <Input type=\"file\" name=\"fileHelmet\" id=\"fileHelmet\" />\r\n            <InputGroupText>\r\n              Indices de Cascos (🟢 ind)\r\n            </InputGroupText>\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroup class=\"input-dark\">\r\n            <Input type=\"file\" name=\"fileBodies\" id=\"fileBodies\" />\r\n            <InputGroupText>\r\n              Indices de Cuerpos (🟢 dat)\r\n            </InputGroupText>\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <InputGroup class=\"input-dark\">\r\n            <Input type=\"file\" name=\"fileFx\" id=\"fileFx\" />\r\n            <InputGroupText>\r\n              Indices de FX's (🟢 ind)\r\n            </InputGroupText>\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>      \r\n    </ModalBody>\r\n    <ModalFooter>\r\n      {#if (msgResources)}\r\n        <Row><Alert color=\"success\">{msgResources}</Alert></Row>\r\n      {/if}\r\n      {#if (msgError)}\r\n        <Row><Alert color=\"danger\">{msgError}</Alert></Row>\r\n      {/if}\r\n      {#if !uploading} \r\n        <Row>\r\n          <Col><Button color=\"primary\" on:click={upload}>Cargar</Button></Col>\r\n          <Col><Button color=\"secondary\" on:click={toggle}>Cancelar</Button></Col>\r\n        </Row>\r\n      {:else}\r\n        <Spinner primary  />\r\n      {/if}\r\n    </ModalFooter>\r\n  </Modal>\r\n</div>","<script>\r\n  import { indexSelected, flagIndexLoaded,  flagResourcesLoaded } from '../stores.js';\r\n  import { CleanGraphics, CleanIndexs } from '../indexdb.js';\r\n\r\n  import ModalLoadResources from './modalLoadResources.svelte';\r\n\r\n  import {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    Button,\r\n    NavLink,\r\n    Dropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem\r\n  } from 'sveltestrap';\r\n\r\n  let isOpen = false;\r\n\r\n  function handleUpdate(event) {\r\n    isOpen = event.detail.isOpen;\r\n  }\r\n\r\n  function newIndexs() {\r\n    indexSelected.set(undefined);\r\n    indexsComplete.set({\"max_grh\": 1, \"version\": 1, \"indexs\": [\r\n      {\"index\":1,frames:[0], x: 0, y: 0, w: 0, h: 0, speed: 0},\r\n    ]});\r\n    flagIndexLoaded.set(true);\r\n  }\r\n\r\n  function cleanAll() {\r\n    flagIndexLoaded.set(false);\r\n    flagResourcesLoaded.set(false);\r\n    // indexSelected.set(undefined);\r\n    // indexsComplete.set(undefined);\r\n    // indexsHead.set(undefined);\r\n    // indexsHelmet.set(undefined);\r\n    // indexsBodies.set(undefined);\r\n    // indexsFx.set(undefined);\r\n    CleanGraphics();\r\n    CleanIndexs();\r\n  }\r\n\r\n</script>\r\n  \r\n\r\n  <Navbar color=\"dark\" dark expand=\"md\" pills>\r\n    <NavbarBrand href=\"#\" style=\"color: gold;\">IndeXAO</NavbarBrand>\r\n    <NavbarToggler on:click={() => (isOpen = !isOpen)} />\r\n    <Collapse {isOpen} navbar expand=\"md\" on:update={handleUpdate}>\r\n      <Nav class=\"ms-auto\" navbar>\r\n        {#if ($flagResourcesLoaded && $flagIndexLoaded)}\r\n        <NavItem>\r\n          <NavLink style=\"\" title=\"Ver listado de indices\">Indices</NavLink>\r\n        </NavItem>\r\n        {/if}\r\n        <NavItem>\r\n            <ModalLoadResources />\r\n        </NavItem>\r\n        {#if ($flagResourcesLoaded || $flagIndexLoaded)}\r\n        <NavItem>\r\n          <NavLink on:click={() => newIndexs()} color=\"success\" title=\"Crear nuevo indice\">Nuevo</NavLink>\r\n        </NavItem>\r\n        {/if}\r\n        {#if ($flagResourcesLoaded || $flagIndexLoaded)}\r\n        <NavItem>\r\n          <NavLink on:click={() => cleanAll()} color=\"danger\" title=\"Borrar todos los recursos e indices cargados\" alt=\"Limpiar y vaciar el cache del sitio\">Borrar</NavLink>\r\n        </NavItem>\r\n        {/if}\r\n        <!-- <Dropdown nav inNavbar>\r\n          <DropdownToggle nav caret>Options</DropdownToggle>\r\n          <DropdownMenu end>\r\n            <DropdownItem>Option 1</DropdownItem>\r\n            <DropdownItem>Option 2</DropdownItem>\r\n            <DropdownItem divider />\r\n            <DropdownItem>Reset</DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown> -->\r\n      </Nav>\r\n    </Collapse>\r\n  </Navbar>\r\n\r\n\r\n<style>\r\n\r\n</style>","\r\n<script lang=\"ts\">\r\n\timport { createEventDispatcher } from 'svelte';\r\n\timport { Col, Card } from 'sveltestrap';\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tconst onBackToTop = () => {\r\n\t\tdispatch('scrollToTop', {});\r\n\t}\r\n</script>\r\n\r\n\r\n<Col sm={{ size: '50%' }}>\r\n\t<Card body color=\"dark\" inverse style=\"height: 150px;\">\r\n\t\t<h4>IndeXAO</h4>\r\n\t\t<span>Herramienta de indexación online para Argentum Online.</span>\r\n\t\t<span>Programada por ^[GS]^ / <a href=\"https://www.gs-zone.org/\" style=\"color: white;\" target=\"_blank\">GS-Zone</a>.</span>\r\n\t</Card>\r\n</Col>\r\n\r\n<Col sm={{ size: '50%' }}>\r\n\t<Card body color=\"dark\" inverse style=\"height: 150px;\">\r\n\t\t<h5>Version</h5>\r\n\t\t<span>1.10.31 - 09/07/2024</span>\r\n\t</Card>\r\n\t<button on:click={() => onBackToTop()}> 🔝 </button>\r\n</Col>\r\n\r\n<style>\r\n\tbutton {\r\n\t\tmargin-top: 1rem;\r\n\t\tmin-width: 120px;\r\n\t\tborder-radius: 2rem;\r\n\t\tbackground-color: #030303;\r\n\t\tcolor: white;\r\n\t\tborder: 2px solid #030303;\r\n\t\tposition: absolute;\r\n    \tright: 1em;\r\n\t}\r\n\tbutton:hover {\r\n\t\tborder: 2px solid greenyellow;\r\n\t}\r\n</style>","<script>\n    import { Container, Image, Row, Col,\n\t\tCardBody, Alert, Card, CardText, CardHeader, CardTitle} from 'sveltestrap';\n</script>\n\n<Col >\n\t<Card color=\"dark\" inverse >\n\t\t<CardBody>\n\t\t\t<CardText>\n\t\t\t<div>\n\t\t\t\t¡Bienvenido a nuestra herramienta online para la creación y edición de índices de gráficos tipo sprite para el juego Argentum Online! Con nuestro sistema, podrás subir tus propias imágenes directamente a la memoria de tu navegador y crear un índice completamente personalizado. Además, también podrás cargar índices existentes para realizar ediciones o modificaciones. Todo esto sin necesidad de enviar nada a un servidor backend.<br/>\n\t\t\t\t<br/>\n\t\t\t\tNuestro objetivo es brindarte una herramienta fácil de usar y totalmente accesible desde el frontend, para que puedas crear y editar tus índices de manera rápida y sencilla. Con nuestra herramienta, podrás darle vida a tus personajes y hacerlos únicos.<br/>\n\t\t\t\t<br/>\n\t\t\t\tExporta tu índice y úsalo en tu juego de inmediato. ¡Sé el creador de tus propios personajes y dale un toque único a tu experiencia de juego en Argentum Online!<br/>\n\t\t\t</div>\n\t\t\t<br/>\n\t\t\t<div class=\"title\">Caracteristicas</div>\n\t\t\t<ul>\n\t\t\t\t<li>Toda la edición se realiza en el navegador, sin necesidad de enviar nada a un servidor.</li>\n\t\t\t\t<li>Compatibilidad con indices 0.9.9z y 0.13.0.</li>\n\t\t\t\t<li>Funciona directamente con indices compilados.</li>\n\t\t\t\t<li>Permite cargar todos los graficos en BMP o PNG.</li>\n\t\t\t\t<li>Actualmente el indice soporta ser exportado en formato 0.13.0 compatible y formato Ini.</li>\n\t\t\t</ul>\n\t\t\t</CardText>\n\t\t</CardBody>\n\t</Card>\n</Col>\n<Col>\n\t<Image src=\"images/logo.png\" fluid alt=\"IndeXAO\" />\n</Col>\n\n<style>\n\t.title {\n\t\tmargin-top: -0.25rem;\n\t\tmargin-bottom: 0;\n\t\tfont-size: 1.4rem;\n\t}\n</style>","<script>\r\n\timport { onMount, onDestroy } from \"svelte\";\r\n\timport { Col, Badge, Alert, Image, ListGroup, ListGroupItem, \r\n\t\tSpinner, InputGroup, Input, InputGroupText, Pagination,\r\n\t\tPaginationItem, PaginationLink } from 'sveltestrap';\r\n\r\n\timport { indexSelected, flagResourcesLoaded } from '../../stores.js';\r\n\timport { LoadGraphics, GetResourceBinary } from '../../indexdb.js';\r\n\r\n\tlet resources = [];\r\n\tconst maxResourcesPerPage = 100;\r\n\r\n\tlet resourcesList = [];\r\n\tlet page = 1;\r\n\tlet maxPages = 1;\r\n\tlet loaded = false;\r\n\tlet editingPage = false;\r\n\tlet pageValue = 1;\r\n\r\n\tlet filterResource = '';\r\n\t\r\n\r\n\tfunction editPage() {\r\n\t\tif (editingPage==true) {\r\n\t\t\tif (pageValue>0 && pageValue<=maxPages) {\r\n\t\t\t\tchangePage(pageValue);\r\n\t\t\t}\r\n\t\t\tpageValue = page;\r\n\t\t}\r\n\t\teditingPage = !editingPage;\r\n\t}\r\n\r\n\tfunction movePage(_move) {\r\n\t\tif (_move == 0 || page + _move < 1 || page + _move > maxPages || loaded == false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tchangePage(page + _move);\r\n\t}\r\n\r\n\tfunction changePage(_page) {\r\n\t\tif (_page <= 0 || _page > maxPages || _page == page || loaded == false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tshowPage(_page);\r\n\t}\r\n\r\n\tfunction showPage(_page) {\r\n\t\tpage = _page;\r\n\t\tpageValue = page;\r\n\r\n\t\tif (resources.length == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tresourcesList = [];\r\n\t\tlet count = 0;\r\n\t\tlet start = (page - 1) * maxResourcesPerPage;\r\n\r\n\t\tresources.forEach(res => {\r\n\t\t\t// console.log(res);\r\n\t\t\tcount++;\r\n\t\t\tif (count>start) {\r\n\t\t\t\tif (resourcesList.length>=maxResourcesPerPage) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet add = true;\r\n\t\t\t\tif (filterResource!=null && String(filterResource).length>0) {\r\n\t\t\t\t\tif (String(res).indexOf(filterResource)==-1) {\r\n\t\t\t\t\t\tadd = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (add) {\r\n\t\t\t\t\tresourcesList.push(res);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction selectResource(resource) {\r\n\t\tif ($indexSelected.frames.length == 1 && $indexSelected.speed == 0) {\r\n\t\t\t$indexSelected.frames[0] = resource;\r\n\t\t}\r\n\t}\r\n\r\n\tasync function loadResources() {\r\n\t\tloaded = false;\r\n\r\n\t\tresourcesList = [];\r\n\t\tresources = await LoadGraphics();\r\n\r\n\t\tif (resources == []) {\r\n\t\t\tconsole.log(\"No resources loaded\");\r\n\t\t\tloaded = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log(\"Resources loaded: \" + resources.length);\r\n\r\n\t\tmaxPages = Math.ceil(resources.length / maxResourcesPerPage);\r\n\t\tshowPage(1);\r\n\t\tloaded = true;\r\n\t}\r\n\r\n\tlet unsubscribeResources = flagResourcesLoaded.subscribe(_ => {\r\n\t\tloadResources();\r\n\t});\r\n\r\n\tfunction findFilter() {\r\n\t\tpage = 1;\r\n\t\tloadResources();\r\n\t}\r\n\r\n\tonMount(async () => {\r\n\t\tloadResources();\r\n\t});\r\n\r\n\tonDestroy(async () => {\r\n\t\tunsubscribeResources();\r\n    });\r\n\r\n</script>\r\n\r\n<Col class=\"input-dark\">\r\n\t<InputGroup>\r\n\t\t<Input bind:value={filterResource} on:keyup={findFilter} type=\"number\" placeholder=\"Número de Imagen\" />\r\n\t</InputGroup>\r\n\t<InputGroup>\r\n\t\t<Pagination style=\"position: relative; flex: 1 1 auto;\">\r\n\t\t\t<PaginationItem>\r\n\t\t\t\t<PaginationLink first href=\"#\" on:click=\"{() => changePage(1)}\" />\r\n\t\t\t</PaginationItem>\r\n\t\t\t<PaginationItem>\r\n\t\t\t\t<PaginationLink previous href=\"#\" on:click=\"{() => movePage(-1)}\" />\r\n\t\t\t</PaginationItem>\r\n\t\t\t<PaginationItem style=\"position: relative; flex: 1 1 auto;\">\r\n\t\t\t\t{#if !editingPage }\r\n\t\t\t\t<PaginationLink href=\"#\" style=\"position: relative; flex: 1 1 auto; text-align: center;\"\r\n\t\t\t\t\ton:click=\"{() => editPage()}\">{page}</PaginationLink>\r\n\t\t\t\t{:else}\r\n\t\t\t\t\t<Input bind:value={pageValue} type=\"number\" placeholder=\"Página\" \r\n\t\t\t\t\t\ton:change=\"{() => editPage()}\" on:blur=\"{() => editPage()}\" />\r\n\t\t\t\t{/if}\r\n\t\t\t</PaginationItem>\r\n\t\t\t<PaginationItem>\r\n\t\t\t\t<PaginationLink next href=\"#\" on:click=\"{() => movePage(1)}\" />\r\n\t\t\t</PaginationItem>\r\n\t\t\t<PaginationItem>\r\n\t\t\t\t<PaginationLink last href=\"#\" on:click=\"{() => changePage(maxPages)}\" />\r\n\t\t\t</PaginationItem>\r\n\t\t</Pagination>\r\n\t</InputGroup>\r\n\t{#if (loaded == false)}\r\n\t\t<Spinner primary />\r\n\t{:else}\r\n\t\t<ListGroup style=\"overflow: auto; height: 1050px;\">\r\n\t\t{#if resourcesList != undefined && resourcesList != []}\r\n\t\t\t{#each resourcesList as grhnum}\r\n\t\t\t\t<ListGroupItem tag=\"button\" action on:click=\"{selectResource(grhnum)}\" >\r\n\t\t\t\t\t{#await GetResourceBinary(grhnum) then source}\r\n\t\t\t\t\t\t<Image thumbnail style=\"min-width:50px;max-width:50px;padding: 0;\" src=\"{source}\" alt=\"Imagen {grhnum}\"/>\r\n\t\t\t\t\t{/await}\r\n\t\t\t\t\t{grhnum}\r\n\t\t\t\t</ListGroupItem>\r\n\t\t\t{/each}\r\n\t\t{/if}\r\n\t\t</ListGroup>\r\n\t{/if}\r\n</Col>","<script>\r\n  import { flagIndexLoaded } from '../../stores.js';\r\n  import { AddGraphic, LoadGraphics, LoadIndexs } from '../../indexdb.js';\r\n\r\n  import { CompileBinaryIndex, CompileIniIndex } from '../logic/indexCompiler.js';\r\n  \r\n  import {\r\n    Button, Modal, ModalBody, ModalFooter, ModalHeader, Row, Col,\r\n    InputGroup, InputGroupText, FormGroup, Label, Input, Spinner, Alert,\r\n  } from 'sveltestrap';\r\n\r\n  let indexs = [];\r\n  let open = false;\r\n  let uploading = false;\r\n  let msgError = \"\";\r\n  let selectFormat = \"0130\";\r\n\r\n  const toggle = () => {\r\n    if (uploading) {\r\n      return;\r\n    }\r\n    msgError = \"\";\r\n    open = !open;\r\n  }\r\n\r\n  let loadIndex = async () => {\r\n\t\tif ($flagIndexLoaded) {\r\n\t\t\tindexs = await LoadIndexs(\"indexsGraphics\");\r\n\t\t} else {\r\n\t\t\tindexs = [];\r\n\t\t}\r\n\t}\r\n\r\n  async function exportIndex() {\r\n    loadIndex();\r\n    if (indexs.length == 0) {\r\n      msgError = \"No hay indices para exportar.\";\r\n      return;\r\n    }\r\n\r\n    if (selectFormat == \"0130\") {\r\n      const blobobject = CompileBinaryIndex(indexs);\r\n\r\n\t\t\tconst filename = \"graficos_\" + Date.now() + \".ind\";\r\n\t\t\tif(window.navigator.msSaveOrOpenBlob) {\r\n\t\t\t\twindow.navigator.msSaveBlob(blobobject, filename);\r\n\t\t\t} else {\r\n\t\t\t\tconst blob = window.URL.createObjectURL(new Blob(blobobject, { type: 'application/octet-stream' }), { oneTimeOnly: true })\r\n\t\t\t\tconst anchor = document.createElement('a');\r\n\t\t\t\tanchor.style.display = 'none';\r\n\t\t\t\tanchor.href = blob;\r\n\t\t\t\tanchor.download = filename;\r\n\t\t\t\tdocument.body.appendChild(anchor);\r\n\t\t\t\tanchor.click();\r\n\t\t\t\twindow.URL.revokeObjectURL(blob);\r\n\t\t\t\tdocument.body.removeChild(anchor);\r\n        toggle();\r\n\t\t\t};\r\n    } else if (selectFormat == \"ini\") {\r\n      const textobject = CompileIniIndex(indexs);\r\n      const blobobject = [textobject];\r\n\r\n      const filename = \"graficos_\" + Date.now() + \".ini\";\r\n      if(window.navigator.msSaveOrOpenBlob) {\r\n        window.navigator.msSaveBlob(blobobject, filename);\r\n      } else {\r\n        const blob = window.URL.createObjectURL(new Blob(blobobject, { type: 'application/octet-stream' }), { oneTimeOnly: true })\r\n        const anchor = document.createElement('a');\r\n        anchor.style.display = 'none';\r\n        anchor.href = blob;\r\n        anchor.download = filename;\r\n        document.body.appendChild(anchor);\r\n        anchor.click();\r\n        window.URL.revokeObjectURL(blob);\r\n        document.body.removeChild(anchor);\r\n        toggle();\r\n      };\r\n    };\r\n\r\n\t}\r\n\r\n</script>\r\n  \r\n<div style=\"width: inherit;\">\r\n  <Button color=\"success\" style=\"width: inherit;\" on:click={toggle} >Exportar indice</Button>\r\n  <Modal isOpen={open} {toggle} modalClassName=\"modal-dark\">\r\n    <ModalHeader {toggle}>Exportar indice</ModalHeader>\r\n    <ModalBody>\r\n      Presiona en Exportar para descargar el indice de graficos generado.\r\n      <FormGroup>\r\n        <Label for=\"exampleSelect\">Formato</Label>\r\n        <Input bind:value={selectFormat} type=\"select\" name=\"selectFormat\">\r\n          <option value=\"ini\">Formato INI</option>\r\n          <option value=\"0130\" selected>0.13.x Compatible</option>\r\n        </Input>\r\n      </FormGroup>\r\n    </ModalBody>\r\n    <ModalFooter>\r\n      {#if (msgError)}\r\n        <Row><Alert color=\"danger\">{msgError}</Alert></Row>\r\n      {/if}\r\n      {#if !uploading} \r\n        <Row>\r\n          <Col><Button color=\"primary\" on:click={exportIndex}>Exportar</Button></Col>\r\n          <Col><Button color=\"secondary\" on:click={toggle}>Cancelar</Button></Col>\r\n        </Row>\r\n      {:else}\r\n        <Spinner primary  />\r\n      {/if}\r\n    </ModalFooter>\r\n  </Modal>\r\n</div>","<script>\r\n\timport { onMount, onDestroy } from \"svelte\";\r\n\timport { Row, Col, Badge, Button, Alert, Image, ListGroup, ListGroupItem,\r\n\t\tSpinner, InputGroup, Input, InputGroupText,\r\n\t\tPagination, PaginationItem, PaginationLink, FormGroup } from 'sveltestrap';\r\n\r\n\timport { flagIndexLoaded, indexSelected, sectionActive, events} from '../../stores.js';\r\n\timport { GetResourceBinary, SaveIndexs, LoadIndexs } from '../../indexdb.js';\r\n\r\n\timport ModalLoadResources from '../modalLoadResources.svelte';\r\n\timport ModalExportIndex from './modalExportIndex.svelte';\r\n\r\n\tlet indexsTotal = [];\r\n\tlet maxGrh = 0;\r\n\tlet version = 0;\r\n\r\n\tconst maxIndexPerPage = 100;\r\n\tlet page = 1;\r\n\tlet maxPages = 1;\r\n\tlet loaded = false;\r\n\tlet editingPage = false;\r\n\tlet pageValue = 1;\r\n\r\n\tlet fixedPreview = false;\r\n\tlet isSaveOK = false;\r\n\tlet clicking = false;\r\n\tlet _indexSelected = 0;\r\n\tlet filterIndex = '';\r\n\tlet indexsList = [];\r\n\r\n\tfunction findIndexOnPage(num) {\r\n\t\tif (loaded == false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet count = 0;\r\n\t\tlet pageFound = 0;\r\n\t\tlet indexFound = undefined;\r\n\r\n\t\tfor (let i = 0; i < indexsTotal.indexs.length; i++) {\r\n\t\t\tcount++;\r\n\t\t\tif (count>maxIndexPerPage) {\r\n\t\t\t\tpageFound++;\r\n\t\t\t\tcount = 1;\r\n\t\t\t};\r\n\t\t\tlet item = indexsTotal.indexs[i];\r\n\t\t\tif (item.index >= num) {\r\n\t\t\t\tif (item.index == num) {\r\n\t\t\t\t\tindexFound = item;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (pageFound>=0) {\r\n\t\t\tmovePage(pageFound);\r\n\t\t\tif (indexFound!=undefined) {\r\n\t\t\t\tselectIndex(indexFound);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction newIndex(type) {\r\n\t\tif (loaded == false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet created = false;\r\n\t\tif (type==1) { // al primer slot vacio\r\n\t\t\tconsole.log(\"al primer slot vacio\");\r\n\t\t\tlet lastIndex = 0;\r\n\t\t\tfor (let i = 0; i < indexsTotal.indexs.length; i++) {\r\n\t\t\t\tif (indexsTotal.indexs[i].index != lastIndex+1) {\r\n\t\t\t\t\tlet newNum = lastIndex+1;\r\n\t\t\t\t\tlet newIndex = [];\r\n\r\n\t\t\t\t\tfor (let t = 0; t < indexsTotal.indexs.length; t++) {\r\n\t\t\t\t\t\tif (t == i) {\r\n\t\t\t\t\t\t\tnewIndex.push({index: newNum, frames:[0], x: 0, y: 0, w: 0, h: 0, speed: 0});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnewIndex.push(indexsTotal.indexs[t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcreated = true;\r\n\t\t\t\t\tindexsTotal.indexs = newIndex;\r\n\t\t\t\t\tfindIndexOnPage(newNum);\r\n\t\t\t\t\tconsole.log(\"Index creado en \", newNum);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlastIndex = indexsTotal.indexs[i].index;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (type==0 || !created) { // al final\r\n\t\t\tlet newNum = maxGrh + 1;\r\n\t\t\tindexsList.push({index: newNum, frames:[0], x: 0, y: 0, w: 0, h: 0, speed: 0});\r\n\t\t\tmaxGrh = newNum;\r\n\t\t\tfindIndexOnPage(newNum);\r\n\t\t\tconsole.log(\"Index creado al final\", newNum);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction saveIndex() {\r\n\t\t//window.localStorage.setObject (\"indexsComplete\", body);\r\n\t\tSaveIndexs(\"indexsGraphics\", indexsTotal);\r\n\t\tisSaveOK = true;\r\n\t\tsetTimeout(() => {\r\n\t\t\tisSaveOK = false;\r\n\t\t}, 2000);\r\n\t}\r\n\r\n\tfunction editPage() {\r\n\t\tif (editingPage==true) {\r\n\t\t\tif (pageValue>0 && pageValue<=maxPages) {\r\n\t\t\t\tchangePage(pageValue);\r\n\t\t\t}\r\n\t\t\tpageValue = page;\r\n\t\t}\r\n\t\teditingPage = !editingPage;\r\n\t}\r\n\r\n\tfunction movePage(_move) {\r\n\t\tif (_move == 0 || page + _move < 1 || page + _move > maxPages || loaded == false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tchangePage(page + _move);\r\n\t}\r\n\r\n\tfunction changePage(_page) {\r\n\t\tif (_page <= 0 || _page > maxPages || _page == page || loaded == false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tshowPage(_page);\r\n\t}\r\n\r\n\tfunction showPage(_page) {\r\n\t\tif (loaded == false || indexsTotal == [] || indexsTotal.indexs == []) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tpage = _page;\r\n\t\tpageValue = page;\r\n\r\n\t\tindexsList = [];\r\n\t\tlet count = 0;\r\n\t\tlet start = (page - 1) * maxIndexPerPage;\r\n\r\n\t\tindexsTotal.indexs.forEach(index => {\r\n\t\t\tcount++;\r\n\t\t\tif (count>start) {\r\n\t\t\t\tif (indexsList.length>=maxIndexPerPage) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet add = true;\r\n\t\t\t\tif (filterIndex!=null && String(filterIndex).length>0) {\r\n\t\t\t\t\tif ((String(index.index).indexOf(filterIndex)==-1)\r\n\t\t\t\t\t\t&& (index.frames.length > 0 && String(index.frames[0]).indexOf(filterIndex)==-1)) {\r\n\t\t\t\t\t\tadd = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (add) {\r\n\t\t\t\t\tindexsList.push(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction getIndexs() {\r\n\t\tloaded = false;\r\n\r\n\t\tif (indexsTotal == undefined || indexsTotal == [] || indexsTotal.indexs == undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tmaxGrh = indexsTotal.maxGrh;\r\n\t\tversion = indexsTotal.version;\r\n\t\tmaxPages = Math.ceil(indexsTotal.indexs.length / maxIndexPerPage);\r\n\r\n\t\tloaded = true;\r\n\t\tshowPage(1);\r\n\t}\r\n\r\n\tfunction changeSection(section) {\r\n\t\t$sectionActive = section;\r\n\t\twindow.localStorage.setObject (\"sectionActive\", $sectionActive);\r\n\t}\r\n\r\n\tfunction findFilter() {\r\n\t\tpage = 1;\r\n\t\tgetIndexs();\r\n\t}\r\n\r\n\tfunction selectIndex(index) {\r\n\t\t_indexSelected = index;\r\n\t\tclicking = true;\r\n\t\tindexSelected.set(index);\r\n\t}\r\n\r\n\tasync function showGrh(numInd, first) {\r\n\t\tconst result = new Promise((resolve, reject) => {\r\n\r\n\t\t\tif (loaded == false || indexsTotal.indexs == undefined || indexsTotal.indexs == []) {\r\n\t\t\t\treject();\r\n\t\t\t}\r\n\r\n\t\t\tif (indexsTotal.indexs.length>0) {\r\n\t\t\t\tlet ret = \"\";\r\n\t\t\t\tindexsTotal.indexs.forEach(e => {\r\n\t\t\t\t\tif (e.index == numInd) {\r\n\t\t\t\t\t\t// console.log(\"showGrh index encontrado\", e);\r\n\t\t\t\t\t\tif (e.frames.length == 1 && e.w > 0 && e.h > 0) {\r\n\t\t\t\t\t\t\tGetResourceBinary(e.frames[0]).then(function(img) {\r\n\t\t\t\t\t\t\t\tlet image = \"background-image: url(\"+ img +\");\";\r\n\t\t\t\t\t\t\t\t// let image = \"background-image: url(\" + apiServer + `graphics/` + grhToHash(e.frames[0]) + \");\";\r\n\t\t\t\t\t\t\t\tlet position = \"background-position: -\" + e.x + \"px -\" + e.y + \"px;\";\r\n\t\t\t\t\t\t\t\tret = `<img style=\"${image}${position}width:${e.w}px;height:${e.h}px;background-color: black;\">`;\r\n\t\t\t\t\t\t\t\tresolve(ret);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else { // Es animación!\r\n\t\t\t\t\t\t\tif(first == false) {\r\n\t\t\t\t\t\t\t\tret = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tindexsTotal.indexs.forEach(y => {\r\n\t\t\t\t\t\t\t\tif (y.index == e.frames[0]) {\r\n\t\t\t\t\t\t\t\t\tGetResourceBinary(y.frames[0]).then(function(img) {\r\n\t\t\t\t\t\t\t\t\t\tlet image = \"background-image: url(\"+ img +\");\";\r\n\t\t\t\t\t\t\t\t\t\tlet position = \"background-position: -\" + y.x + \"px -\" + y.y + \"px;\";\r\n\t\t\t\t\t\t\t\t\t\tret = `<img style=\"${image}${position}width:${y.w}px;height:${y.h}px;background-color: black;\">`;\r\n\t\t\t\t\t\t\t\t\t\tresolve(ret);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn await result;\r\n\t}\r\n\r\n\tasync function loadIndexs() {\r\n\t\tif (loaded == false) {\r\n\t\t\tindexsTotal = await LoadIndexs(\"indexsGraphics\");\r\n\t\t\tloaded = true;\r\n\t\t}\r\n\t\tgetIndexs();\r\n\t}\r\n\r\n\tasync function editSelected() {\r\n\t\tlet edited = false;\r\n\t\tconst ind = $indexSelected.index;\r\n\r\n\t\tfor (let i = 0; i < indexsTotal.indexs.length; i++) {\r\n\t\t\tif (indexsTotal.indexs[i].index == ind) {\r\n\t\t\t\tindexsTotal.indexs[i].frames = _indexSelected.frames\r\n\t\t\t\tedited = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (edited) {\r\n\t\t\tconsole.log(\"Edit Grh \" + ind + \" from selection\");\r\n\t\t\tsaveIndex()\r\n\t\t\tconsole.log(\"Hot reload Grh \" + ind);\r\n\t\t\tfor (let i = 0; i < indexsList.length; i++) {\r\n\t\t\t\tif (indexsList[i].index == ind) {\r\n\t\t\t\t\tindexsList[i].frames = _indexSelected.frames;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlet unsubscribeGraphics = flagIndexLoaded.subscribe(_ => {\r\n\t\tloadIndexs();\r\n\t});\r\n\r\n\tlet unsubscribe = indexSelected.subscribe(_ => {\r\n\t\tif ($indexSelected == undefined ||\r\n\t\t\t$indexSelected == null ||\r\n\t\t\t$indexSelected.index == undefined ||\r\n\t\t\tclicking == true) {\r\n\t\t\tclicking = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\teditSelected();\r\n\r\n        //showPage(page);\r\n    });\r\n\r\n\tlet unsubscribeEvents = events.subscribe(state => {\r\n\t\tif (state == null || state== undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (state.action == \"deleteIndex\") {\r\n\t\t\tfindIndexOnPage(state.index);\r\n\t\t};\r\n\t});\r\n\r\n\tonMount(async () => {\r\n\t\tloadIndexs();\r\n\t});\r\n\r\n\tonDestroy(async () => {\r\n        unsubscribe();\r\n\t\tunsubscribeGraphics();\r\n\t\tunsubscribeEvents();\r\n    });\r\n\r\n</script>\r\n\r\n<Col class=\"input-dark\">\r\n\t<Row cols={{ md: 5, sm: 1 }} noGutters>\r\n\t\t<Col>\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<Button color=\"secondary\" style=\"width: inherit;\" active={$sectionActive == \"\"} on:click={() => changeSection(\"\")} >Indices</Button>\r\n\t\t\t</InputGroup>\r\n\t\t</Col>\r\n\t\t<Col>\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<Button color=\"secondary onlyview\" style=\"width: inherit;\" active={$sectionActive == \"head\"} on:click={() => changeSection(\"head\")}>Cabezas</Button>\r\n\t\t\t</InputGroup>\r\n\t\t</Col>\r\n\t\t<Col>\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<Button color=\"secondary onlyview\" style=\"width: inherit;\" active={$sectionActive == \"helmet\"} on:click={() => changeSection(\"helmet\")}>Cascos</Button>\r\n\t\t\t</InputGroup>\r\n\t\t</Col>\r\n\t\t<Col>\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<Button color=\"secondary onlyview\" style=\"width: inherit;\" active={$sectionActive == \"body\"} on:click={() => changeSection(\"body\")}>Cuerpos</Button>\r\n\t\t\t</InputGroup>\r\n\t\t</Col>\r\n\t\t<Col>\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<Button color=\"secondary onlyview\" style=\"width: inherit;\" active={$sectionActive == \"fx\"} on:click={() => changeSection(\"fx\")}>FX's</Button>\r\n\t\t\t</InputGroup>\r\n\t\t</Col>\r\n\t</Row>\r\n\t<Row cols={{ md: 2, sm: 1 }} noGutters>\r\n\t\t<Col>\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<Button color=\"primary\" style=\"width: inherit;\" on:click=\"{() => saveIndex()}\" disabled={isSaveOK} >Guardar indice en el navegador</Button>\r\n\t\t\t</InputGroup>\r\n\t\t</Col>\r\n\t\t<Col>\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<ModalExportIndex />\r\n\t\t\t</InputGroup>\r\n\t\t</Col>\r\n\t</Row>\r\n\t<InputGroup>\r\n\t\t<Input bind:value={filterIndex} on:keyup={findFilter} type=\"number\" placeholder=\"Número de Index\" />\r\n\t</InputGroup>\r\n\t{#if (loaded == false)}\r\n\t\t<Row>\r\n\t\t\t<Col class=\"text-center\" style=\"padding: 2em; color: white;\">\r\n\t\t\t\t<div style=\"padding-bottom: 1em;\">Se requiere un indice válido. Puedes crear uno nuevo o importar uno existente.\r\n\t\t\t\t\t<ModalLoadResources mode=\"button\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Spinner primary  />\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t{:else}\r\n\t\t<InputGroup>\r\n\t\t\t<InputGroupText>MaxGrh</InputGroupText>\r\n\t\t\t<Input bind:value={maxGrh} type=\"number\" placeholder=\"MaxGrh\" />\r\n\t\t</InputGroup>\r\n\t\t<InputGroup>\r\n\t\t\t<InputGroupText>Version</InputGroupText>\r\n\t\t\t<Input bind:value={version} type=\"number\" placeholder=\"Version\" />\r\n\t\t</InputGroup>\r\n\r\n\t\t<InputGroup>\r\n\t\t\t<Pagination style=\"position: relative; flex: 1 1 auto;\">\r\n\t\t\t\t<PaginationItem>\r\n\t\t\t\t\t<PaginationLink first href=\"#\" on:click=\"{() => changePage(1)}\" />\r\n\t\t\t\t</PaginationItem>\r\n\t\t\t\t<PaginationItem>\r\n\t\t\t\t\t<PaginationLink previous href=\"#\" on:click=\"{() => movePage(-1)}\" />\r\n\t\t\t\t</PaginationItem>\r\n\t\t\t\t<PaginationItem style=\"position: relative; flex: 1 1 auto;\">\r\n\t\t\t\t\t{#if !editingPage }\r\n\t\t\t\t\t<PaginationLink href=\"#\" style=\"position: relative; flex: 1 1 auto; text-align: center;\"\r\n\t\t\t\t\t\ton:click=\"{() => editPage()}\">{page}</PaginationLink>\r\n\t\t\t\t\t{:else}\r\n\t\t\t\t\t\t<Input bind:value={pageValue} type=\"number\" placeholder=\"Página\"\r\n\t\t\t\t\t\t\ton:change=\"{() => editPage()}\" on:blur=\"{() => editPage()}\" />\r\n\t\t\t\t\t{/if}\r\n\t\t\t\t</PaginationItem>\r\n\t\t\t\t<PaginationItem>\r\n\t\t\t\t\t<PaginationLink next href=\"#\" on:click=\"{() => movePage(1)}\" />\r\n\t\t\t\t</PaginationItem>\r\n\t\t\t\t<PaginationItem>\r\n\t\t\t\t\t<PaginationLink last href=\"#\" on:click=\"{() => changePage(maxPages)}\" />\r\n\t\t\t\t</PaginationItem>\r\n\t\t\t</Pagination>\r\n\t\t</InputGroup>\r\n\r\n\t\t<FormGroup>\r\n\t\t\t<Input on:change=\"{() => fixedPreview = !fixedPreview}\" type=\"checkbox\" label=\"Vista previa de tamaño fijo\" />\r\n\t\t</FormGroup>\r\n\r\n\t\t<ListGroup style=\"overflow: auto; height: 820px; min-width:240px;\">\r\n\t\t{#if indexsList != undefined && indexsList != []}\r\n\t\t\t{#each indexsList as index}\r\n\t\t\t\t{#if !index.reload}\r\n\t\t\t\t\t<ListGroupItem style=\"display: inline-flex; vertical-align: top; min-width: 50px;\" class=\"{fixedPreview ? 'fixedBox': ''}\" tag=\"button\" active={_indexSelected == index} action on:click=\"{selectIndex(index)}\">\r\n\t\t\t\t\t\t<div style=\"display: inline-flex; vertical-align: top; min-width: 50px;\">\r\n\t\t\t\t\t\t\t{index.index} {#if index.frames.length > 1}<Badge style=\"position: absolute; right: 1em;\">Anim</Badge>{/if}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{#if fixedPreview}\r\n\t\t\t\t\t\t\t<div style=\"max-height: 50px; max-width: 50px;\">\r\n\t\t\t\t\t\t\t\t{#await showGrh(index.index, true) then grh}\r\n\t\t\t\t\t\t\t\t\t{@html grh}\r\n\t\t\t\t\t\t\t\t{/await}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{:else}\r\n\t\t\t\t\t\t\t{#await showGrh(index.index, true) then grh}\r\n\t\t\t\t\t\t\t\t{@html grh}\r\n\t\t\t\t\t\t\t{/await}\r\n\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t{/if}\r\n\t\t\t{/each}\r\n\t\t{/if}\r\n\t\t</ListGroup>\r\n\r\n\t\t<InputGroup>\r\n\t\t\t<Pagination style=\"position: relative; flex: 1 1 auto;\">\r\n\t\t\t\t<PaginationItem>\r\n\t\t\t\t\t<PaginationLink first href=\"#\" on:click=\"{() => changePage(1)}\" />\r\n\t\t\t\t</PaginationItem>\r\n\t\t\t\t<PaginationItem>\r\n\t\t\t\t\t<PaginationLink previous href=\"#\" on:click=\"{() => movePage(-1)}\" />\r\n\t\t\t\t</PaginationItem>\r\n\t\t\t\t<PaginationItem style=\"position: relative; flex: 1 1 auto;\">\r\n\t\t\t\t\t{#if !editingPage }\r\n\t\t\t\t\t<PaginationLink href=\"#\" style=\"position: relative; flex: 1 1 auto; text-align: center;\"\r\n\t\t\t\t\t\ton:click=\"{() => editPage()}\">{page}</PaginationLink>\r\n\t\t\t\t\t{:else}\r\n\t\t\t\t\t\t<Input bind:value={pageValue} type=\"number\" placeholder=\"Página\"\r\n\t\t\t\t\t\t\ton:change=\"{() => editPage()}\" on:blur=\"{() => editPage()}\" />\r\n\t\t\t\t\t{/if}\r\n\t\t\t\t</PaginationItem>\r\n\t\t\t\t<PaginationItem>\r\n\t\t\t\t\t<PaginationLink next href=\"#\" on:click=\"{() => movePage(1)}\" />\r\n\t\t\t\t</PaginationItem>\r\n\t\t\t\t<PaginationItem>\r\n\t\t\t\t\t<PaginationLink last href=\"#\" on:click=\"{() => changePage(maxPages)}\" />\r\n\t\t\t\t</PaginationItem>\r\n\t\t\t</Pagination>\r\n\t\t</InputGroup>\r\n\r\n\t\t<Row cols={{ md: 2, sm: 1 }} noGutters>\r\n\t\t\t<Col>\r\n\t\t\t\t<InputGroup>\r\n\t\t\t\t\t<Button color=\"success\" style=\"width: inherit;\" on:click=\"{() => newIndex(1)}\" >Nuevo indice en el primer slot disponible</Button>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t</Col>\r\n\t\t\t<Col>\r\n\t\t\t\t<InputGroup>\r\n\t\t\t\t\t<Button color=\"success\" style=\"width: inherit;\" on:click=\"{() => newIndex(0)}\" >Nuevo indice al final</Button>\r\n\t\t\t\t</InputGroup>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t{/if}\r\n</Col>\r\n\r\n<Alert color=\"primary\" isOpen={isSaveOK} style=\"position: absolute;right:2em;bottom:2em;z-index: 10;opacity: 0.9;\">Indice guardado correctamente.</Alert>\r\n","<script>\r\n    import { onMount, onDestroy  } from \"svelte\";\r\n\r\n    import { indexSelected, flagIndexLoaded } from '../../stores.js';\r\n\timport { GetResourceBinary, LoadIndexs } from '../../indexdb.js';\r\n\r\n\texport const grh = 0;\r\n\r\n\tlet indexs = [];\r\n\r\n    let mounted = false;\r\n\tlet selected = 0;\r\n\r\n\tlet animation = undefined;\r\n\tlet runningAnimation = false;\r\n\tlet speedAnimation = 0;\r\n\tconst minSpeedAnimation = 100;\r\n\r\n\tlet imageLoaded = 0;\r\n\tlet imgSource = document.createElement('img');\r\n\tlet imgTransp = document.createElement('img');\r\n\r\n\tfunction RemoveBackground(img) {\r\n\r\n\t\tif (img==undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet buffer = document.createElement('canvas');\r\n\t\tlet bufferctx = buffer.getContext('2d');\r\n\r\n\t\tbuffer.width = img.width;\r\n\t\tbuffer.height = img.height;\r\n\t\tbufferctx.drawImage(img, 0, 0);\r\n\t\tbufferctx.drawImage(img, 0, 0);\r\n\r\n\t\tlet imageData = bufferctx.getImageData(0, 0, buffer.width,  buffer.height);\r\n\t\tlet data = imageData.data;\r\n\t\tlet transparent = [data[data.length-4],data[data.length-3],data[data.length-2]];\r\n\t\tlet similar = 9;\r\n\r\n\t\tfor (let i = 0; i < data.length; i += 4) {\r\n\t\t\tif((data[i]>=transparent[0]-similar && data[i]<=transparent[0]+similar) && // R\r\n\t\t\t(data[i + 1]>=transparent[1]-similar && data[i + 1]<=transparent[1]+similar) && // G\r\n\t\t\t(data[i + 2]>=transparent[2]-similar && data[i + 2]<=transparent[2]+similar)) { // B\r\n\t\t\t\tdata[i + 3] = 0; // alpha\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbufferctx.putImageData(imageData, 0, 0);\r\n\r\n\t\tlet ret = new Image();\r\n\t\tret = buffer.toDataURL();\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tasync function showGrh(index) {\r\n\r\n\t\tif (index == undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (index.speed > 0 && index.frames.length>1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet canvas = document.getElementById(\"main\");\r\n\t\tlet ctx = canvas.getContext('2d');\r\n\r\n\t\tctx.imageSmoothingEnabled = false;\r\n\t\tctx.imageSmoothingQuality = 'high';\r\n\t\tctx.fillStyle = \"green\";\r\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\tif (imageLoaded == index.frames[0]) {\r\n\t\t\tconsole.log(\"Cargado de cache \" + imageLoaded);\r\n\r\n\t\t\tvar ratio = Math.min(canvas.width / index.w, canvas.height / index.h);\r\n\t\t\tctx.drawImage(imgTransp, index.x, index.y,\r\n\t\t\t\tindex.w, index.h,\r\n\t\t\t\t0, 0, index.w*ratio, index.h*ratio);\r\n\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\timageLoaded = 0;\r\n\t\t}\r\n\r\n\t\timgSource.crossOrigin = \"Anonymous\";\r\n\t\timgSource.onload = function() {\r\n\t\t\timgTransp.onload = function () {\r\n\t\t\t\tvar ratio = Math.min(canvas.width / index.w, canvas.height / index.h);\r\n\t\t\t\tctx.drawImage(imgTransp, index.x, index.y,\r\n\t\t\t\t\tindex.w, index.h,\r\n\t\t\t\t\t0, 0, index.w*ratio, index.h*ratio);\r\n\t\t\t}\r\n\t\t\timgTransp.src = RemoveBackground(imgSource);\r\n\t\t}\r\n\r\n\t\tconsole.log(\"Cargando anim \" , index.frames[0]);\r\n\r\n\t\tGetResourceBinary(index.frames[0]).then(function(img) {\r\n\t\t\timgSource.src = img;\r\n\t\t\timageLoaded = index.frames[0];\r\n\t\t});\r\n\t}\r\n\r\n\tfunction showAnimation(index) {\r\n\r\n\t\tif (index == undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (runningAnimation) {\r\n\t\t\tclearInterval(animation);\r\n\t\t\trunningAnimation = false;\r\n\t\t}\r\n\r\n\t\tlet frame = 0;\r\n\r\n\t\tif ($indexSelected.speed > minSpeedAnimation*2) {\r\n\t\t\tspeedAnimation = minSpeedAnimation;\r\n\t\t} else if (speedAnimation < minSpeedAnimation/2) {\r\n\t\t\tspeedAnimation = $indexSelected.speed*100;\r\n\t\t}\r\n\r\n\t\tif (speedAnimation < minSpeedAnimation) {\r\n\t\t\tspeedAnimation = minSpeedAnimation;\r\n\t\t};\r\n\r\n\r\n\t\tanimation = setInterval(()=> {\r\n\t\t\tif ((!runningAnimation) ||\r\n\t\t\t\t(speedAnimation < minSpeedAnimation) ||\r\n\t\t\t\t(indexs == undefined) ||\r\n\t\t\t\t($indexSelected.index == undefined)||\r\n\t\t\t \t(selected != $indexSelected.index)) {\r\n\r\n\t\t\t\trunningAnimation = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (frame == $indexSelected.frames.length) {\r\n\t\t\t\tframe = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (indexs == undefined || indexs.indexs == undefined) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tindexs.indexs.forEach(index => {\r\n\t\t\t\tif (index.index == $indexSelected.frames[frame]) {\r\n\t\t\t\t\tshowGrh(index);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tframe++;\r\n\r\n\t\t}, speedAnimation);\r\n\r\n\t\trunningAnimation = true;\r\n\t}\r\n\r\n\tfunction loadIndex() {\r\n\t\tif ($indexSelected == undefined) {\r\n\t\t\tmounted = false;\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tselected = $indexSelected.index;\r\n\t\tif ($indexSelected.speed > 0 && $indexSelected.frames.length>1) {\r\n\t\t\tshowAnimation($indexSelected);\r\n\t\t} else {\r\n\t\t\tif (runningAnimation) {\r\n\t\t\t\tclearInterval(animation);\r\n\t\t\t\trunningAnimation = false;\r\n\t\t\t}\r\n\t\t\tshowGrh($indexSelected);\r\n\t\t}\r\n\t}\r\n\r\n    let unsubscribe = indexSelected.subscribe(_ => {\r\n        if (mounted) {\r\n            loadIndex();\r\n        };\r\n    });\r\n\r\n\tasync function loadGrh() {\r\n\t\tif (flagIndexLoaded) {\r\n\t\t\tindexs = await LoadIndexs(\"indexsGraphics\");\r\n\t\t} else {\r\n\t\t\tindexs = [];\r\n\t\t}\r\n\t}\r\n\r\n\tlet unsubscribeGraphics = flagIndexLoaded.subscribe(_ => {\r\n\t\tloadGrh()\r\n\t});\r\n\r\n    onMount(async () => {\r\n        mounted = true;\r\n\t\tconsole.log(\"Show animation init Grh \" + grh);\r\n\t\tloadIndex();\r\n\t});\r\n\r\n    onDestroy(async () => {\r\n        mounted = false;\r\n\t\tindexs = undefined;\r\n\t\timageLoaded = 0;\r\n        imgSource = document.createElement('img');\r\n\t\timgTransp = document.createElement('img');\r\n        unsubscribe();\r\n\t\tunsubscribeGraphics();\r\n    });\r\n\r\n</script>\r\n\r\n<canvas id=\"main\" width=\"300px\" height=\"300px\"></canvas>\r\n\r\n<style>\r\n\tcanvas {\r\n        border:1px solid #000000;\r\n        background-color: black;\r\n\t\tborder-color: black;\r\n        display: block;\r\n        margin: 0 auto;\r\n\t}\r\n</style>","<script>\r\n    import { onMount, onDestroy  } from \"svelte\";\r\n    \r\n    import { indexSelected } from '../../stores.js';\r\n    import { GetResourceBinary } from '../../indexdb.js';\r\n\r\n    let mounted = false;\r\n\r\n    let imageLoaded = 0;\r\n\tlet imgSource = document.createElement('img');\r\n\r\n    function drawImage(ctx, canvas) {\r\n        let hRatio = canvas.width / imgSource.width;\r\n        let vRatio = canvas.height / imgSource.height;\r\n        let ratio  = Math.min ( hRatio, vRatio );\r\n        ctx.drawImage(imgSource, 0, 0, imgSource.width, imgSource.height, 0,0,imgSource.width*ratio, imgSource.height*ratio);\r\n        ctx.lineWidth = 2;\r\n        ctx.strokeStyle = \"lime\";\r\n        ctx.setLineDash([2,5]);\r\n        ctx.strokeRect($indexSelected.x*ratio, $indexSelected.y*ratio, $indexSelected.w*ratio, $indexSelected.h*ratio);\r\n        ctx.stroke();\r\n    }\r\n\r\n    async function loadPreview() {\r\n\r\n        if ($indexSelected == undefined) {\r\n            return;\r\n        }\r\n\r\n        if ($indexSelected.frames[0] == undefined) {\r\n            return;\r\n        }\r\n\r\n        let canvas = document.getElementById(\"sourcepreview\");\r\n\t\tlet ctx = canvas.getContext('2d');\r\n\t\tctx.imageSmoothingEnabled = false;\r\n\t\tctx.imageSmoothingQuality = 'high';\r\n\r\n\t\tctx.fillStyle = \"black\";\r\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        ctx.clearRect(0, 0,  canvas.height, canvas.width);\r\n\r\n        if (imageLoaded == $indexSelected.frames[0]) {\r\n            drawImage(ctx, canvas);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n        imgSource.crossOrigin = \"Anonymous\";\r\n\t\timgSource.onload = function() {\r\n            drawImage(ctx, canvas);\r\n\t\t}\r\n\r\n        GetResourceBinary($indexSelected.frames[0]).then(function(img) {\t\r\n\t\t\timgSource.src = img;\r\n\t\t\timageLoaded = $indexSelected.frames[0];\r\n\t\t});\r\n    }\r\n\r\n    let unsubscribe = indexSelected.subscribe(_ => {\r\n        if (mounted) {\r\n            loadPreview();\r\n        };\r\n    });\r\n\r\n    onMount(async () => {\r\n        mounted = true;\r\n\t\tloadPreview();\r\n\t});\r\n\r\n    onDestroy(async () => {\r\n        mounted = false;\r\n        imageLoaded = 0;\r\n        imgSource = document.createElement('img');\r\n        unsubscribe();\r\n    });\r\n\r\n</script>\r\n\r\n<canvas id=\"sourcepreview\" width=\"300px\" height=\"300px\"></canvas>\r\n\r\n<style>\r\n\tcanvas {\r\n        border:1px solid #000000;\r\n        background-color: black;\r\n\t\tborder-color: black;\r\n        display: block;\r\n        margin: 0 auto;\r\n\t}\r\n</style>","<script>\r\n    import { onMount, onDestroy  } from \"svelte\";\r\n    \r\n    import { Row, Col, Badge, Alert, Image, ListGroup, ListGroupItem, \r\n\t\tSpinner, Button, InputGroup, Input, InputGroupText } from 'sveltestrap';\r\n\r\n    import { flagIndexLoaded, indexSelected, events } from '../../stores.js';\r\n\r\n    import IndexPreviewAnimated from './indexPreviewAnimated.svelte';\r\n    import IndexPreviewResource from './indexPreviewResource.svelte';\r\n\r\n    let indexs = [];\r\n\r\n    function deleteFrame(frame) {\r\n        console.log('deleteFrame', frame);\r\n        console.log('frames', $indexSelected.frames);\r\n\r\n        let newFrames = [];\r\n        for (let i = 0; i < $indexSelected.frames.length; i++) {\r\n            if (i !== frame) {\r\n                newFrames.push($indexSelected.frames[i]);\r\n            }\r\n        }\r\n\r\n        console.log('newFrames', newFrames);\r\n        $indexSelected.frames = newFrames;\r\n    }\r\n\r\n    function addFrame() {\r\n        $indexSelected.frames = [...$indexSelected.frames, 0];\r\n    }\r\n\r\n    function convertIndex(type) {\r\n        if (type==0) {\r\n            let res = confirm(\"¿Estás seguro de convertir el index a tipo estatico?\");\r\n            if (res) {\r\n                $indexSelected.type = 0;\r\n                $indexSelected.frames = [0];\r\n            }\r\n        } else {\r\n            let res = confirm(\"¿Estás seguro de convertir el index a tipo animado?\");\r\n            if (res) {\r\n                $indexSelected.type = 1;\r\n                $indexSelected.frames = [0,0];\r\n            }\r\n        }\r\n    }\r\n\r\n    function deleteIndex() {\r\n\t\tlet index = $indexSelected.index;\r\n\r\n        console.log('deleteIndex', index);\r\n        console.log(\"indexs.length = \" + indexs.length);\r\n        \r\n\t\tlet newIndexs = [];\r\n        \r\n\t\tfor (let i = 0; i < indexs.length; i++) {\r\n            let value = indexs[i].index;\r\n            if (value != index) {\r\n                newIndexs.push(indexs[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n        console.log(\"newIndexs.length = \" + newIndexs.length);\r\n        \r\n\t\tindexs = newIndexs;\r\n\t\tindexSelected.set(null);\r\n        events.set({\"action\": \"deleteIndex\", \"index\": index});\r\n\t}\r\n\r\n    async function loadIndexs() {\r\n\t\tif (flagIndexLoaded) {\r\n\t\t\tindexs = await LoadIndexs(\"indexsGraphics\");\r\n\t\t} else {\r\n\t\t\tindexs = [];\r\n\t\t}\r\n\t}\r\n\r\n    let unsubscribeGraphics = flagIndexLoaded.subscribe(_ => {\r\n\t\tloadIndexs();\r\n\t});\r\n\r\n    onMount(async () => {\r\n\t\tloadIndexs();\r\n\t});\r\n\r\n    onDestroy(async () => {\r\n        unsubscribeGraphics();\r\n    });\r\n\r\n</script>\r\n\r\n<Col class=\"input-dark\">\r\n{#if $indexSelected != null && \r\n    $indexSelected != undefined && \r\n    $indexSelected.frames != undefined}\r\n    <IndexPreviewAnimated />\r\n    <InputGroup>\r\n        <InputGroupText>\r\n            {#if $indexSelected.frames.length==1}\r\n                <Badge>Estatico</Badge>\r\n            {:else}\r\n                <Badge>Animación</Badge>\r\n            {/if}\r\n        </InputGroupText>\r\n        <Input disabled type=\"number\" value={$indexSelected.index} class=\"disabled\" />\r\n    </InputGroup>\r\n    {#if $indexSelected.frames.length==1}\r\n        <InputGroup><IndexPreviewResource /></InputGroup>\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>GRH</InputGroupText>\r\n                <Input type=\"number\" bind:value={$indexSelected.frames[0]} />\r\n            </InputGroup>\r\n        </Col>\r\n\r\n        <Row noGutters>\r\n            <Col>\r\n                <InputGroup>\r\n                    <InputGroupText>X</InputGroupText>\r\n                    <Input type=\"number\" bind:value={$indexSelected.x} />\r\n                </InputGroup>\r\n            </Col>\r\n            <Col>\r\n                <InputGroup>\r\n                    <InputGroupText>Y</InputGroupText>\r\n                    <Input type=\"number\" bind:value={$indexSelected.y} />\r\n                </InputGroup>\r\n            </Col>\r\n        </Row>\r\n        <Row noGutters>\r\n            <Col>\r\n                <InputGroup>\r\n                    <InputGroupText title=\"Ancho\">↔️</InputGroupText>\r\n                    <Input type=\"number\" bind:value={$indexSelected.w} />\r\n                </InputGroup>\r\n            </Col>\r\n            <Col>\r\n                <InputGroup>\r\n                    <InputGroupText title=\"Alto\">↕️</InputGroupText>\r\n                    <Input type=\"number\" bind:value={$indexSelected.h} />\r\n                </InputGroup>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Index</InputGroupText>\r\n                <Input value=\"Grh{$indexSelected.index}=1-{$indexSelected.frames[0]}-{$indexSelected.x}-{$indexSelected.y}-{$indexSelected.w}-{$indexSelected.h}\" class=\"disabled\"  disabled/>\r\n            </InputGroup>\r\n        </Col>\r\n\r\n        <hr />\r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <Button style=\"width: inherit;\" color=\"danger\" on:click={() => convertIndex(1)}>⚠️ Convertir en animación ⚠️</Button>\r\n            </InputGroup>\r\n        </Col>\r\n    {:else}\r\n        <Col>\r\n            {#each $indexSelected.frames as _, frame}\r\n                <InputGroup>\r\n                    <Input type=\"number\" bind:value={$indexSelected.frames[frame]} />\r\n                    <Button color=\"danger\" on:click={() => deleteFrame(frame)}>X</Button>\r\n                </InputGroup>\r\n            {/each}\r\n            <InputGroup style=\"text-align: right; display: inline-block;\" >\r\n                <Button color=\"primary\" on:click={() => addFrame()}>Añadir</Button>\r\n            </InputGroup>\r\n        </Col>\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText title=\"Velocidad\">⏱️</InputGroupText>\r\n                <Input type=\"number\" bind:value={$indexSelected.speed} />\r\n            </InputGroup>\r\n        </Col>\r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Index</InputGroupText>\r\n                <Input value=\"Grh{$indexSelected.index}={$indexSelected.frames.length}-{$indexSelected.frames.join('-')}-{$indexSelected.speed}\" class=\"disabled\"  disabled/>\r\n            </InputGroup>\r\n        </Col>\r\n\r\n        <hr />\r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <Button style=\"width: inherit;\" color=\"danger\" on:click={() => convertIndex(0)}>⚠️ Convertir en estatico ⚠️ </Button>\r\n            </InputGroup>\r\n        </Col>\r\n    {/if}\r\n\r\n    <Col>\r\n        <InputGroup>\r\n            <Button style=\"width: inherit;\" color=\"danger\" on:click={() => deleteIndex()}>🔥Borrar indice</Button>\r\n        </InputGroup>\r\n    </Col>\r\n{/if}\r\n</Col>","<script>\r\n    import { onMount, onDestroy } from \"svelte\";\r\n\r\n    import { Row, Col, Badge, Alert, Image, ListGroup, ListGroupItem, \r\n\t\tSpinner, Button, InputGroup, Input, InputGroupText } from 'sveltestrap';\r\n\r\n    import { headSelected, flagIndexLoaded } from '../../stores.js';\r\n    import { GetResourceBinary, LoadIndexs } from '../../indexdb.js';\r\n\r\n    let indexs = [];\r\n    let resourcesHead = [];\r\n    let _headSelected = 0;\r\n\r\n    function selectHead(indexHead) {\r\n      _headSelected = indexHead;\r\n      console.log(indexHead);\r\n      headSelected.set(indexHead);\r\n    }\r\n    \r\n\tasync function showGrh(numInd, first) {\r\n\r\n    const result = new Promise((resolve, reject) => {\r\n\r\n      if (indexs == []) {\r\n        reject();\r\n      }\r\n\r\n      if (indexs.indexs.length>0) {\r\n        let ret = \"\";\r\n        indexs.indexs.forEach(e => {\r\n          if (e.index == numInd) {\r\n            if (e.frames.length == 1 && e.w > 0 && e.h > 0) {\r\n              GetResourceBinary(e.frames[0]).then(function(img) {\t\t\t\t\t\t\r\n                let image = \"background-image: url(\"+ img +\");\";\r\n                let position = \"background-position: -\" + e.x + \"px -\" + e.y + \"px;\";\r\n                ret = `<img style=\"${image}${position}width:${e.w}px;height:${e.h}px;background-color: black;\">`;\r\n                resolve(ret);\r\n              });\r\n            } else { // Es animación!\r\n              if(first == false) {\r\n                ret = \"\";\r\n              }\r\n              indexs.indexs.forEach(y => {\r\n                if (y.index == e.frames[0]) {\r\n                  GetResourceBinary(y.frames[0]).then(function(img) {\t\t\t\t\t\t\r\n                    let image = \"background-image: url(\"+ img +\");\";\r\n                    let position = \"background-position: -\" + y.x + \"px -\" + y.y + \"px;\";\r\n                    ret = `<img style=\"${image}${position}width:${y.w}px;height:${y.h}px;background-color: black;\">`;\r\n                    resolve(ret);\r\n                  });\r\n                };\r\n              });\r\n            }\t\t\t\t\t\r\n          }\r\n        });\r\n      };\r\n    });\r\n\r\n    return await result;\r\n  }\r\n\r\n  async function loadIndexs() {\r\n    if (flagIndexLoaded) {\r\n\t\t\tindexs = await LoadIndexs(\"indexsGraphics\");\r\n      resourcesHead = await LoadIndexs(\"indexsHead\");\r\n\t\t} else {\r\n\t\t\tindexs = [];\r\n      resourcesHead = [];\r\n\t\t}\r\n  }\r\n\r\n  let unsubscribeGraphics = flagIndexLoaded.subscribe(_ => {\r\n\t\tloadIndexs();\r\n\t});\r\n\r\n  onMount(async () => {\r\n    loadIndexs();\r\n  });\r\n\r\n  onDestroy(async () => {\r\n    unsubscribeGraphics();\r\n  });\r\n\r\n</script>\r\n\r\n\r\n<Col class=\"input-dark\">\r\n  <ListGroup style=\"overflow: auto; height: 1050px;\">\r\n    {#if resourcesHead != undefined && resourcesHead != []}\r\n      {#each resourcesHead as indexHead}\r\n          <ListGroupItem tag=\"button\" active={_headSelected == indexHead.index} action on:click=\"{selectHead(indexHead)}\" >\r\n            {indexHead.index}\r\n            {#await showGrh(indexHead.head[0], false) then grh}\r\n              {@html grh}\r\n            {/await}\r\n            {#await showGrh(indexHead.head[1], false) then grh}\r\n              {@html grh}\r\n            {/await}\r\n            {#await showGrh(indexHead.head[2], false) then grh}\r\n              {@html grh}\r\n            {/await}\r\n            {#await showGrh(indexHead.head[3], false) then grh}\r\n              {@html grh}\r\n            {/await}\r\n          </ListGroupItem>\r\n      {/each}\r\n    {/if}\r\n  </ListGroup>\r\n</Col>","<script>\r\n    import { onMount, onDestroy, afterUpdate  } from \"svelte\";\r\n    import { flagIndexLoaded } from '../../stores.js';\r\n\timport { GetResourceBinary, LoadIndexs } from '../../indexdb.js';\r\n\r\n\texport let grhNum;\r\n\r\n\tlet indexs = [];\r\n\tlet indexData = undefined;\r\n\tlet animation = undefined;\r\n\tlet runningAnimation = false;\r\n\tlet speedAnimation = 0;\r\n\tconst minSpeedAnimation = 100;\r\n\r\n\tlet imageLoaded = 0;\r\n\tlet imgSource = document.createElement('img');\r\n\tlet imgTransp = document.createElement('img');\r\n\r\n\tfunction RemoveBackground(img) {\r\n\r\n\t\tif (img==undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet buffer = document.createElement('canvas');\r\n\t\tlet bufferctx = buffer.getContext('2d');\r\n\r\n\t\tbuffer.width = img.width;\r\n\t\tbuffer.height = img.height;\r\n\t\tbufferctx.drawImage(img, 0, 0);\r\n\t\tbufferctx.drawImage(img, 0, 0);\r\n\r\n\t\tlet imageData = bufferctx.getImageData(0, 0, buffer.width,  buffer.height);\t\r\n\t\tlet data = imageData.data;\r\n\t\tlet transparent = [data[data.length-4],data[data.length-3],data[data.length-2]];\r\n\t\tlet similar = 9;\r\n\r\n\t\tfor (let i = 0; i < data.length; i += 4) {\r\n\t\t\tif((data[i]>=transparent[0]-similar && data[i]<=transparent[0]+similar) && // R\r\n\t\t\t(data[i + 1]>=transparent[1]-similar && data[i + 1]<=transparent[1]+similar) && // G\r\n\t\t\t(data[i + 2]>=transparent[2]-similar && data[i + 2]<=transparent[2]+similar)) { // B\r\n\t\t\t\tdata[i + 3] = 0; // alpha\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbufferctx.putImageData(imageData, 0, 0);\r\n\r\n\t\tlet ret = new Image();\r\n\t\tret = buffer.toDataURL();\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tasync function showGrh(index) {\r\n\r\n\t\tif (index == undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (index.speed > 0 && index.frames.length>1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet canvas = document.getElementById(\"main\");\r\n\t\tlet ctx = canvas.getContext('2d');\r\n\r\n\t\tctx.imageSmoothingEnabled = false;\r\n\t\tctx.imageSmoothingQuality = 'high';\r\n\t\tctx.fillStyle = \"green\";\r\n\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\tif (imageLoaded == index.frames[0]) {\r\n\t\t\tconsole.log(\"Cargado de cache \" + imageLoaded);\r\n\r\n\t\t\tvar ratio = Math.min(canvas.width / index.w, canvas.height / index.h);\r\n\t\t\tctx.drawImage(imgTransp, index.x, index.y,\r\n\t\t\t\tindex.w, index.h,\r\n\t\t\t\t0, 0, index.w*ratio, index.h*ratio);\r\n\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\timageLoaded = 0;\r\n\t\t}\r\n\r\n\t\timgSource.crossOrigin = \"Anonymous\";\r\n\t\timgSource.onload = function() {\r\n\t\t\timgTransp.onload = function () {\r\n\t\t\t\tvar ratio = Math.min(canvas.width / index.w, canvas.height / index.h);\r\n\t\t\t\tctx.drawImage(imgTransp, index.x, index.y,\r\n\t\t\t\t\tindex.w, index.h,\r\n\t\t\t\t\t0, 0, index.w*ratio, index.h*ratio);\r\n\t\t\t}\r\n\t\t\timgTransp.src = RemoveBackground(imgSource);\r\n\t\t}\r\n\r\n\t\tconsole.log(\"Cargando \" , index.frames[0]);\r\n\r\n\t\tGetResourceBinary(index.frames[0]).then(function(img) {\t\r\n\t\t\timgSource.src = img;\r\n\t\t\timageLoaded = index.frames[0];\r\n\t\t});\r\n\t}\r\n\r\n\tfunction showAnimation(index) {\r\n\r\n\t\tif (index == undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (runningAnimation) {\r\n\t\t\tclearInterval(animation);\r\n\t\t\trunningAnimation = false;\r\n\t\t}\r\n\r\n\t\tlet frame = 0;\r\n\r\n\t\tif (index.speed > minSpeedAnimation*2) {\r\n\t\t\tspeedAnimation = minSpeedAnimation;\r\n\t\t} else if (speedAnimation < minSpeedAnimation/2) {\r\n\t\t\tspeedAnimation = index.speed*100;\r\n\t\t}\r\n\r\n\t\tif (speedAnimation < minSpeedAnimation) {\r\n\t\t\tspeedAnimation = minSpeedAnimation;\r\n\t\t};\r\n\r\n\t\tanimation = setInterval(()=> {\r\n\t\t\tif ((!runningAnimation) ||\r\n\t\t\t\t(speedAnimation < minSpeedAnimation) ||\r\n\t\t\t\t(indexs == undefined) || \r\n\t\t\t\t(index.index == undefined)) {\r\n\r\n\t\t\t\trunningAnimation = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (frame == index.frames.length) {\r\n\t\t\t\tframe = 0;\r\n\t\t\t}\r\n\r\n\t\t\tindexs.indexs.forEach(i => {\r\n\t\t\t\tif (i.index == index.frames[frame]) {\r\n\t\t\t\t\tshowGrh(i);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tframe++;\r\n\r\n\t\t}, speedAnimation);\r\n\r\n\t\trunningAnimation = true;\r\n\t}\r\n\r\n\tlet unsubscribeGraphics = flagIndexLoaded.subscribe(_ => {\r\n\t\tloadGrh()\r\n\t});\r\n\r\n\tasync function loadGrh() {\r\n\t\tif (flagIndexLoaded) {\r\n\t\t\tindexs = await LoadIndexs(\"indexsGraphics\");\r\n\t\t} else {\r\n\t\t\tindexs = [];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (grhNum == undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tindexData = [];\r\n\t\r\n\t\tindexs.indexs.forEach(i => {\r\n\t\t\tif (i.index == grhNum) {\r\n\t\t\t\tindexData = i;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (indexData == undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (runningAnimation) {\r\n\t\t\trunningAnimation = false;\r\n\t\t\tclearInterval(animation);\r\n\t\t}\r\n\r\n\t\tif (indexData.speed > 0 && indexData.frames.length>1) {\r\n\t\t\tshowAnimation(indexData);\r\n\t\t} else {\r\n\t\t\tif (runningAnimation) {\r\n\t\t\t\tclearInterval(animation);\r\n\t\t\t\trunningAnimation = false;\r\n\t\t\t}\r\n\t\t\tshowGrh(indexData);\r\n\t\t}\r\n\t}\r\n\r\n    onMount(async () => {\r\n\t\tloadGrh(grhNum);\r\n\t});\r\n\r\n\tafterUpdate(() => {\r\n\t\tloadGrh(grhNum);\r\n\t});\r\n\r\n    onDestroy(async () => {\r\n\t\timageLoaded = 0;\r\n        imgSource = document.createElement('img');\r\n\t\timgTransp = document.createElement('img');\r\n        if (runningAnimation) {\r\n\t\t\trunningAnimation = false;\r\n\t\t\tclearInterval(animation);\r\n\t\t}\r\n\t\tunsubscribeGraphics();\r\n    });\r\n\r\n</script>\r\n\r\n<canvas id=\"main\" width=\"300px\" height=\"300px\"></canvas>\r\n\r\n<style>\r\n\tcanvas {\r\n        border:1px solid #000000;\r\n        background-color: black;\r\n\t\tborder-color: black;\r\n        display: block;\r\n        margin: 0 auto;\r\n\t}\r\n</style>","<script>\r\n    import { Row, Col, Badge, Alert, Image, ListGroup, ListGroupItem, \r\n\t\tSpinner, Button, InputGroup, Input, InputGroupText } from 'sveltestrap';\r\n\r\n    import { headSelected, events } from '../../stores.js';\r\n\r\n    import IndexPreviewGrh from './indexPreviewGrh.svelte';\r\n\r\n</script>\r\n\r\n<Col class=\"input-dark\">\r\n    {#if $headSelected != null && \r\n        $headSelected != undefined && \r\n        $headSelected.index != undefined}\r\n\r\n        <InputGroup>\r\n            <InputGroupText>\r\n                <Badge>Cabeza</Badge>\r\n            </InputGroupText>\r\n            <Input disabled type=\"number\" value={$headSelected.index} class=\"disabled\" />\r\n        </InputGroup>\r\n\r\n        <IndexPreviewGrh grhNum={$headSelected.head[2]} />\r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Animación Abajo</InputGroupText>\r\n                <Input type=\"number\" bind:value={$headSelected.head[0]} />\r\n            </InputGroup>\r\n        </Col> \r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Animación Izq.</InputGroupText>\r\n                <Input type=\"number\" bind:value={$headSelected.head[1]} />\r\n            </InputGroup>\r\n        </Col> \r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Animación Der.</InputGroupText>\r\n                <Input type=\"number\" bind:value={$headSelected.head[2]} />\r\n            </InputGroup>\r\n        </Col> \r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Animación Arriba</InputGroupText>\r\n                <Input type=\"number\" bind:value={$headSelected.head[3]} />\r\n            </InputGroup>\r\n        </Col> \r\n\r\n        <!-- <Row noGutters>\r\n            <Col>\r\n                <InputGroup>\r\n                    <InputGroupText>Offset X</InputGroupText>\r\n                    <Input type=\"number\" bind:value={$headSelected.offsetX} />\r\n                </InputGroup>\r\n            </Col>\r\n            <Col>\r\n                <InputGroup>\r\n                    <InputGroupText>Offset Y</InputGroupText>\r\n                    <Input type=\"number\" bind:value={$headSelected.offsetY} />\r\n                </InputGroup>\r\n            </Col>\r\n        </Row> -->\r\n\r\n    {/if}\r\n</Col>","<script>\r\n    import { onMount, onDestroy } from \"svelte\";\r\n\r\n    import { Row, Col, Badge, Alert, Image, ListGroup, ListGroupItem, \r\n\t\tSpinner, Button, InputGroup, Input, InputGroupText } from 'sveltestrap';\r\n\r\n    import { flagIndexLoaded, helmetSelected } from '../../stores.js';\r\n    import { GetResourceBinary, LoadIndexs } from '../../indexdb.js';\r\n\r\n    let indexs = [];\r\n    let resourcesHelmet = [];\r\n    let _helmetSelected = 0;\r\n\r\n    function selectHelmet(indexHelmet) {\r\n      _helmetSelected = indexHelmet;\r\n      console.log(indexHelmet);\r\n      helmetSelected.set(indexHelmet);\r\n    }\r\n    \r\n\tasync function showGrh(numInd, first) {\r\n\r\n    const result = new Promise((resolve, reject) => {\r\n\r\n      if (indexs == []) {\r\n        reject();\r\n      }\r\n\r\n      if (indexs.indexs.length>0) {\r\n        let ret = \"\";\r\n        indexs.indexs.forEach(e => {\r\n          if (e.index == numInd) {\r\n            if (e.frames.length == 1 && e.w > 0 && e.h > 0) {\r\n              GetResourceBinary(e.frames[0]).then(function(img) {\t\t\t\t\t\t\r\n                let image = \"background-image: url(\"+ img +\");\";\r\n                let position = \"background-position: -\" + e.x + \"px -\" + e.y + \"px;\";\r\n                ret = `<img style=\"${image}${position}width:${e.w}px;height:${e.h}px;background-color: black;\">`;\r\n                resolve(ret);\r\n              });\r\n            } else { // Es animación!\r\n              if(first == false) {\r\n                ret = \"\";\r\n              }\r\n              indexs.indexs.forEach(y => {\r\n                if (y.index == e.frames[0]) {\r\n                  GetResourceBinary(y.frames[0]).then(function(img) {\t\t\t\t\t\t\r\n                    let image = \"background-image: url(\"+ img +\");\";\r\n                    let position = \"background-position: -\" + y.x + \"px -\" + y.y + \"px;\";\r\n                    ret = `<img style=\"${image}${position}width:${y.w}px;height:${y.h}px;background-color: black;\">`;\r\n                    resolve(ret);\r\n                  });\r\n                };\r\n              });\r\n            }\t\t\t\t\t\r\n          }\r\n        });\r\n      };\r\n    });\r\n\r\n    return await result;\r\n  }\r\n\r\n  async function loadIndexs() {\r\n    if (flagIndexLoaded) {\r\n\t\t\tindexs = await LoadIndexs(\"indexsGraphics\");\r\n      resourcesHelmet = await LoadIndexs(\"indexsHelmet\");\r\n\t\t} else {\r\n\t\t\tindexs = [];\r\n      resourcesHelmet = [];\r\n\t\t}\r\n  }\r\n\r\n  let unsubscribeGraphics = flagIndexLoaded.subscribe(_ => {\r\n\t\tloadIndexs();\r\n\t});\r\n\r\n  onMount(async () => {\r\n    loadIndexs();\r\n  });\r\n\r\n  onDestroy(async () => {\r\n    unsubscribeGraphics();\r\n  });\r\n\r\n</script>\r\n\r\n\r\n<Col class=\"input-dark\">\r\n  <ListGroup style=\"overflow: auto; height: 1050px;\">\r\n    {#if resourcesHelmet != undefined && resourcesHelmet != []}\r\n      {#each resourcesHelmet as indexHelmet}\r\n          <ListGroupItem tag=\"button\" active={_helmetSelected == indexHelmet.index} action on:click=\"{selectHelmet(indexHelmet)}\" >\r\n            {indexHelmet.index}\r\n            {#await showGrh(indexHelmet.helmet[0], true) then grh}\r\n              {@html grh}\r\n            {/await}\r\n          </ListGroupItem>\r\n      {/each}\r\n    {/if}\r\n  </ListGroup>\r\n</Col>","<script>\r\n    import { Row, Col, Badge, Alert, Image, ListGroup, ListGroupItem, \r\n\t\tSpinner, Button, InputGroup, Input, InputGroupText } from 'sveltestrap';\r\n\r\n    import { helmetSelected, events } from '../../stores.js';\r\n\r\n    import IndexPreviewGrh from './indexPreviewGrh.svelte';\r\n\r\n</script>\r\n\r\n<Col class=\"input-dark\">\r\n    {#if $helmetSelected != null && \r\n        $helmetSelected != undefined && \r\n        $helmetSelected.index != undefined}\r\n\r\n        <InputGroup>\r\n            <InputGroupText>\r\n                <Badge>Casco</Badge>\r\n            </InputGroupText>\r\n            <Input disabled type=\"number\" value={$helmetSelected.index} class=\"disabled\" />\r\n        </InputGroup>\r\n\r\n        <IndexPreviewGrh grhNum={$helmetSelected.helmet[0]} />\r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Animación Abajo</InputGroupText>\r\n                <Input type=\"number\" bind:value={$helmetSelected.helmet[0]} />\r\n            </InputGroup>\r\n        </Col> \r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Animación Izq.</InputGroupText>\r\n                <Input type=\"number\" bind:value={$helmetSelected.helmet[1]} />\r\n            </InputGroup>\r\n        </Col> \r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Animación Der.</InputGroupText>\r\n                <Input type=\"number\" bind:value={$helmetSelected.helmet[2]} />\r\n            </InputGroup>\r\n        </Col> \r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Animación Arriba</InputGroupText>\r\n                <Input type=\"number\" bind:value={$helmetSelected.helmet[3]} />\r\n            </InputGroup>\r\n        </Col> \r\n\r\n        <!-- <Row noGutters>\r\n            <Col>\r\n                <InputGroup>\r\n                    <InputGroupText>Offset X</InputGroupText>\r\n                    <Input type=\"number\" bind:value={$helmetSelected.offsetX} />\r\n                </InputGroup>\r\n            </Col>\r\n            <Col>\r\n                <InputGroup>\r\n                    <InputGroupText>Offset Y</InputGroupText>\r\n                    <Input type=\"number\" bind:value={$helmetSelected.offsetY} />\r\n                </InputGroup>\r\n            </Col>\r\n        </Row> -->\r\n\r\n    {/if}\r\n</Col>","<script>\r\n    import { onMount, onDestroy } from \"svelte\";\r\n\r\n    import { Row, Col, Badge, Alert, Image, ListGroup, ListGroupItem, \r\n\t\tSpinner, Button, InputGroup, Input, InputGroupText } from 'sveltestrap';\r\n\r\n    import { flagIndexLoaded, bodiesSelected } from '../../stores.js';\r\n    import { GetResourceBinary, LoadIndexs } from '../../indexdb.js';\r\n\r\n    let indexs = [];\r\n    let resourcesBodies = [];\r\n    let _bodiesSelected = 0;\r\n\r\n    function selectBodies(indexBodies) {\r\n      _bodiesSelected = indexBodies;\r\n      console.log(indexBodies);\r\n      bodiesSelected.set(indexBodies);\r\n    }\r\n\r\n    \r\n\tasync function showGrh(numInd, first) {\r\n\r\n    const result = new Promise((resolve, reject) => {\r\n\r\n      if (indexs == []) {\r\n        reject();\r\n      }\r\n\r\n      if (indexs.indexs.length>0) {\r\n        let ret = \"\";\r\n        indexs.indexs.forEach(e => {\r\n          if (e.index == numInd) {\r\n            if (e.frames.length == 1 && e.w > 0 && e.h > 0) {\r\n              GetResourceBinary(e.frames[0]).then(function(img) {\t\t\t\t\t\t\r\n                let image = \"background-image: url(\"+ img +\");\";\r\n                let position = \"background-position: -\" + e.x + \"px -\" + e.y + \"px;\";\r\n                ret = `<img style=\"${image}${position}width:${e.w}px;height:${e.h}px;background-color: black;\">`;\r\n                resolve(ret);\r\n              });\r\n            } else { // Es animación!\r\n              if(first == false) {\r\n                ret = \"\";\r\n              }\r\n              indexs.indexs.forEach(y => {\r\n                if (y.index == e.frames[0]) {\r\n                  GetResourceBinary(y.frames[0]).then(function(img) {\t\t\t\t\t\t\r\n                    let image = \"background-image: url(\"+ img +\");\";\r\n                    let position = \"background-position: -\" + y.x + \"px -\" + y.y + \"px;\";\r\n                    ret = `<img style=\"${image}${position}width:${y.w}px;height:${y.h}px;background-color: black;\">`;\r\n                    resolve(ret);\r\n                  });\r\n                };\r\n              });\r\n            }\t\t\t\t\t\r\n          }\r\n        });\r\n      };\r\n    });\r\n\r\n    return await result;\r\n  }\r\n\r\n  async function loadIndexs() {\r\n    if (flagIndexLoaded) {\r\n\t\t\tindexs = await LoadIndexs(\"indexsGraphics\");\r\n      resourcesBodies = await LoadIndexs(\"indexsBodies\");\r\n\t\t} else {\r\n\t\t\tindexs = [];\r\n      resourcesBodies = [];\r\n\t\t}\r\n  }\r\n\r\n  let unsubscribeGraphics = flagIndexLoaded.subscribe(_ => {\r\n\t\tloadIndexs();\r\n\t});\r\n\r\n  onMount(async () => {\r\n    loadIndexs();\r\n  });\r\n\r\n  onDestroy(async () => {\r\n    unsubscribeGraphics();\r\n  });\r\n\r\n</script>\r\n\r\n\r\n<Col class=\"input-dark\">\r\n  <ListGroup style=\"overflow: auto; height: 1050px;\">\r\n    {#if resourcesBodies != undefined && resourcesBodies != []}\r\n      {#each resourcesBodies as indexBodies}\r\n          <ListGroupItem tag=\"button\" active={_bodiesSelected == indexBodies.index} action on:click=\"{selectBodies(indexBodies)}\" >\r\n            {indexBodies.index}\r\n            {#await showGrh(indexBodies.body[0], true) then grh}\r\n              {@html grh}\r\n            {/await}\r\n          </ListGroupItem>\r\n      {/each}\r\n    {/if}\r\n  </ListGroup>\r\n</Col>","<script>\r\n    import { Row, Col, Badge, Alert, Image, ListGroup, ListGroupItem, \r\n\t\tSpinner, Button, InputGroup, Input, InputGroupText } from 'sveltestrap';\r\n\r\n    import { bodiesSelected, events } from '../../stores.js';\r\n\r\n    import IndexPreviewGrh from './indexPreviewGrh.svelte';\r\n\r\n</script>\r\n\r\n<Col class=\"input-dark\">\r\n    {#if $bodiesSelected != null && \r\n        $bodiesSelected != undefined && \r\n        $bodiesSelected.index != undefined}\r\n\r\n        <InputGroup>\r\n            <InputGroupText>\r\n                <Badge>Cuerpo</Badge>\r\n            </InputGroupText>\r\n            <Input disabled type=\"number\" value={$bodiesSelected.index} class=\"disabled\" />\r\n        </InputGroup>\r\n\r\n        <IndexPreviewGrh grhNum={$bodiesSelected.body[0]} />\r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Animación Abajo</InputGroupText>\r\n                <Input type=\"number\" bind:value={$bodiesSelected.body[0]} />\r\n            </InputGroup>\r\n        </Col> \r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Animación Izq.</InputGroupText>\r\n                <Input type=\"number\" bind:value={$bodiesSelected.body[1]} />\r\n            </InputGroup>\r\n        </Col> \r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Animación Der.</InputGroupText>\r\n                <Input type=\"number\" bind:value={$bodiesSelected.body[2]} />\r\n            </InputGroup>\r\n        </Col> \r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Animación Arriba</InputGroupText>\r\n                <Input type=\"number\" bind:value={$bodiesSelected.body[3]} />\r\n            </InputGroup>\r\n        </Col> \r\n\r\n        <Row noGutters>\r\n            <Col>\r\n                <InputGroup>\r\n                    <InputGroupText>Cabeza Offset X</InputGroupText>\r\n                    <Input type=\"number\" bind:value={$bodiesSelected.headOffsetX} />\r\n                </InputGroup>\r\n            </Col>\r\n            <Col>\r\n                <InputGroup>\r\n                    <InputGroupText>Cabeza Offset Y</InputGroupText>\r\n                    <Input type=\"number\" bind:value={$bodiesSelected.headOffsetY} />\r\n                </InputGroup>\r\n            </Col>\r\n        </Row>\r\n\r\n    {/if}\r\n</Col>","<script>\r\n    import { onMount, onDestroy } from \"svelte\";\r\n    import { Row, Col, Badge, Alert, Image, ListGroup, ListGroupItem, \r\n\t\tSpinner, Button, InputGroup, Input, InputGroupText } from 'sveltestrap';\r\n\r\n    import { flagIndexLoaded, fxSelected } from '../../stores.js';\r\n    import { GetResourceBinary, LoadIndexs } from '../../indexdb.js';\r\n\r\n    let indexs = [];\r\n    let resourcesFx = [];\r\n    let _fxSelected = 0;\r\n\r\n    function selectFx(indexFx) {\r\n      _fxSelected = indexFx.index;\r\n      console.log(indexFx);\r\n      fxSelected.set(indexFx);\r\n    }\r\n\r\n    \r\n\tasync function showGrh(numInd, first) {\r\n\r\n    const result = new Promise((resolve, reject) => {\r\n\r\n      if (indexs == []) {\r\n        reject();\r\n      }\r\n\r\n      if (indexs.indexs.length>0) {\r\n        let ret = \"\";\r\n        indexs.indexs.forEach(e => {\r\n          if (e.index == numInd) {\r\n            if (e.frames.length == 1 && e.w > 0 && e.h > 0) {\r\n              GetResourceBinary(e.frames[0]).then(function(img) {\t\t\t\t\t\t\r\n                let image = \"background-image: url(\"+ img +\");\";\r\n                let position = \"background-position: -\" + e.x + \"px -\" + e.y + \"px;\";\r\n                ret = `<img style=\"${image}${position}width:${e.w}px;height:${e.h}px;background-color: black;\">`;\r\n                resolve(ret);\r\n              });\r\n            } else { // Es animación!\r\n              if(first == false) {\r\n                ret = \"\";\r\n              }\r\n              indexs.indexs.forEach(y => {\r\n                if (y.index == e.frames[0]) {\r\n                  GetResourceBinary(y.frames[0]).then(function(img) {\t\t\t\t\t\t\r\n                    let image = \"background-image: url(\"+ img +\");\";\r\n                    let position = \"background-position: -\" + y.x + \"px -\" + y.y + \"px;\";\r\n                    ret = `<img style=\"${image}${position}width:${y.w}px;height:${y.h}px;background-color: black;\">`;\r\n                    resolve(ret);\r\n                  });\r\n                };\r\n              });\r\n            }\t\t\t\t\t\r\n          }\r\n        });\r\n      };\r\n    });\r\n\r\n    return await result;\r\n  }\r\n\r\n  async function loadIndexs() {\r\n    if (flagIndexLoaded) {\r\n\t\t\tindexs = await LoadIndexs(\"indexsGraphics\");\r\n      resourcesFx = await LoadIndexs(\"indexsFx\");\r\n\t\t} else {\r\n\t\t\tindexs = [];\r\n      resourcesFx = [];\r\n\t\t}\r\n  }\r\n\r\n  let unsubscribeGraphics = flagIndexLoaded.subscribe(_ => {\r\n\t\tloadIndexs();\r\n\t});\r\n\r\n  onMount(async () => {\r\n    loadIndexs();\r\n  });\r\n\r\n  onDestroy(async () => {\r\n    unsubscribeGraphics();\r\n  });\r\n\r\n</script>\r\n\r\n\r\n<Col class=\"input-dark\">\r\n  <ListGroup style=\"overflow: auto; height: 1050px;\">\r\n    {#if resourcesFx != undefined && resourcesFx != []}\r\n      {#each resourcesFx as indexFx}\r\n          <ListGroupItem tag=\"button\" active={_fxSelected == indexFx.index} action on:click=\"{selectFx(indexFx)}\" >\r\n            {indexFx.index}\r\n            {#await showGrh(indexFx.anim, true) then grh}\r\n              {@html grh}\r\n            {/await}\r\n          </ListGroupItem>\r\n      {/each}\r\n    {/if}\r\n  </ListGroup>\r\n</Col>","<script>\r\n    import { Row, Col, Badge, Alert, Image, ListGroup, ListGroupItem, \r\n\t\tSpinner, Button, InputGroup, Input, InputGroupText } from 'sveltestrap';\r\n\r\n    import { fxSelected, events } from '../../stores.js';\r\n\r\n    import IndexPreviewGrh from './indexPreviewGrh.svelte';\r\n\r\n</script>\r\n\r\n<Col class=\"input-dark\">\r\n    {#if $fxSelected != null && \r\n        $fxSelected != undefined && \r\n        $fxSelected.index != undefined}\r\n\r\n        <InputGroup>\r\n            <InputGroupText>\r\n                <Badge>Efecto</Badge>\r\n            </InputGroupText>\r\n            <Input disabled type=\"number\" value={$fxSelected.index} class=\"disabled\" />\r\n        </InputGroup>\r\n\r\n        <IndexPreviewGrh grhNum={$fxSelected.anim} />\r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Grh Animación</InputGroupText>\r\n                <Input type=\"number\" bind:value={$fxSelected.anim} />\r\n            </InputGroup>\r\n        </Col>\r\n\r\n        <Row noGutters>\r\n            <Col>\r\n                <InputGroup>\r\n                    <InputGroupText>Offset X</InputGroupText>\r\n                    <Input type=\"number\" bind:value={$fxSelected.offsetX} />\r\n                </InputGroup>\r\n            </Col>\r\n            <Col>\r\n                <InputGroup>\r\n                    <InputGroupText>Offset Y</InputGroupText>\r\n                    <Input type=\"number\" bind:value={$fxSelected.offsetY} />\r\n                </InputGroup>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Col>\r\n            <InputGroup>\r\n                <InputGroupText>Usar PNG</InputGroupText>\r\n                <Input type=\"number\" bind:value={$fxSelected.isPNG} />\r\n            </InputGroup>\r\n        </Col>\r\n\r\n    {/if}\r\n</Col>","<script>\r\n\timport { onDestroy, onMount } from \"svelte\";\r\n\timport { Row, Col, Badge, Alert, Image, ListGroup, ListGroupItem, \r\n\t\tSpinner, InputGroup, Input, InputGroupText, Nav, Navbar, NavbarBrand, \r\n\t\tNavItem, NavLink, Button } from 'sveltestrap';\r\n\r\n\timport { resourcesGraphics, indexsGraphics, flagIndexLoaded, flagResourcesLoaded, \r\n\t\t\tindexSelected, sectionActive } from '../stores.js';\r\n\timport { LoadGraphics, LoadIndexs } from '../indexdb.js';\r\n\r\n\timport Landing from \"./landing.svelte\";\r\n\r\n\timport ModalLoadResources from '../components/modalLoadResources.svelte';\r\n\timport IndexListRight from '../components/studio/indexListRight.svelte';\r\n\timport IndexListLeft from '../components/studio/indexListLeft.svelte';\r\n\timport IndexEdit from '../components/studio/indexEdit.svelte';\r\n\r\n\timport IndexHeadListRight from '../components/studio/indexHeadListRight.svelte';\r\n\timport IndexHeadEdit from '../components/studio/indexHeadEdit.svelte';\r\n\r\n\timport IndexHelmetListRight from '../components/studio/indexHelmetListRight.svelte';\r\n\timport IndexHelmetEdit from '../components/studio/indexHelmetEdit.svelte';\r\n\r\n\timport IndexBodiesListRight from '../components/studio/indexBodiesListRight.svelte';\r\n\timport IndexBodiesEdit from '../components/studio/indexBodiesEdit.svelte';\r\n\r\n\timport IndexFxListRight from '../components/studio/indexFxListRight.svelte';\r\n\timport IndexFxEdit from '../components/studio/indexFxEdit.svelte';\r\n\r\n\tlet indexs = [];\r\n\tlet heads = [];\r\n\tlet helmets = [];\r\n\tlet bodies = [];\r\n\tlet fxs = [];\r\n\r\n\tlet messageError = \"\";\r\n\tlet showDebug = false;\r\n\r\n\tlet loadResources = async () => {\r\n\t\tif ($flagResourcesLoaded) {\r\n\t\t\tLoadGraphics();\r\n\t\t}\r\n\t}\r\n\r\n\tlet loadIndex = async () => {\r\n\t\tif ($flagIndexLoaded) {\r\n\t\t\tindexs = await LoadIndexs(\"indexsGraphics\");\r\n\t\t\theads = await LoadIndexs(\"indexsHead\");\r\n\t\t\thelmets = await LoadIndexs(\"indexsHelmet\");\r\n\t\t\tbodies = await LoadIndexs(\"indexsBodies\");\r\n\t\t\tfxs = await LoadIndexs(\"indexsFx\");\r\n\t\t} else {\r\n\t\t\tindexs = [];\r\n\t\t}\r\n\t\tconsole.log(indexs);\r\n\t}\r\n\r\n\tlet unsubscribeResources = flagResourcesLoaded.subscribe(_ => {\r\n\t\tloadResources();\r\n\t});\r\n\r\n\tlet unsubscribeGraphics = flagIndexLoaded.subscribe(_ => {\r\n\t\tloadIndex();\r\n\t});\r\n\r\n\tonMount(async () => {\r\n\t\tmessageError = \"\";\r\n\t\tindexSelected.set(null);\r\n\t\tloadResources();\r\n\t\tloadIndex();\r\n\t});\r\n\r\n\tonDestroy(async () => {\r\n\t\tunsubscribeResources();\r\n\t\tunsubscribeGraphics();\r\n\t});\r\n\r\n</script>\r\n\r\n{#if (messageError != \"\")}\r\n\t<Row>\r\n\t\t<Col class=\"input-dark\">\r\n\t\t\t<Alert color=\"danger\">\r\n\t\t\t\t{messageError}\r\n\t\t\t</Alert>\r\n\t\t</Col>\r\n\t</Row>\r\n{/if}\r\n\r\n{#if (!$flagResourcesLoaded && !$flagIndexLoaded)}\r\n\t<Row>\r\n\t\t<Col class=\"text-center\" style=\"padding: 2em; color: white;\">\r\n\t\t\t<div style=\"padding-bottom: 1em;\">\r\n\t\t\t\tPara comenzar, carga los recursos necesarios.\r\n\t\t\t\t<ModalLoadResources mode=\"button\" />\r\n\t\t\t</div>\r\n\t\t</Col>\r\n\t</Row>\r\n\r\n\t<Landing />\r\n{/if}\r\n\r\n{#if ($flagResourcesLoaded || $flagIndexLoaded)}\r\n\t<Row cols={{ md: 3, sm: 1 }}>\r\n\t\t<IndexListLeft/>\r\n\t\t{#if ($sectionActive == '')}\r\n\t\t\t<div class=\"relative\">\r\n\t\t\t\t<IndexEdit />\r\n\t\t\t</div>\r\n\t\t\t<IndexListRight />\r\n\t\t{:else if $sectionActive == 'head'}\r\n\t\t\t<div class=\"relative\">\r\n\t\t\t\t<IndexHeadEdit />\r\n\t\t\t</div>\r\n\t\t\t<IndexHeadListRight />\r\n\t\t{:else if $sectionActive == 'helmet'}\r\n\t\t\t<div class=\"relative\">\r\n\t\t\t\t<IndexHelmetEdit />\r\n\t\t\t</div>\r\n\t\t\t<IndexHelmetListRight />\r\n\t\t{:else if $sectionActive == 'body'}\r\n\t\t\t<div class=\"relative\">\r\n\t\t\t\t<IndexBodiesEdit />\r\n\t\t\t</div>\r\n\t\t\t<IndexBodiesListRight />\r\n\t\t{:else if $sectionActive == 'fx'}\r\n\t\t\t<div class=\"relative\">\r\n\t\t\t\t<IndexFxEdit />\r\n\t\t\t</div>\r\n\t\t\t<IndexFxListRight />\r\n\t\t{/if}\r\n\t</Row>\r\n{/if}\r\n\r\n<Row class=\"debugPanel\">\r\n\t<Col>\r\n\t\t<span on:click={() => showDebug = !showDebug} class=\"cursor\">Click to show Debug</span>\r\n\t\t{#if showDebug}<br/><br/>\r\n\t\tResourcesLoaded: {$flagResourcesLoaded} (total: {($resourcesGraphics != undefined && $resourcesGraphics != null) ? $resourcesGraphics.length : 0})<br/>\r\n\t\tIndexsLoaded: {$flagIndexLoaded == true}  (total: {(indexs == undefined || indexs == [] || indexs.indexs != undefined) ? indexs.indexs.length : 0})<br/>\r\n\t\tIndexsHead: {(heads != undefined && heads != null) ? heads.length : 0}<br/>\r\n\t\tIndexsHelmet: {(helmets != undefined && helmets != null) ? helmets.length : 0}<br/>\r\n\t\tIndexsBodies: {(bodies != undefined && bodies != null) ? bodies.length : 0}<br/>\r\n\t\tIndexsFx: {(fxs != undefined && fxs != null) ? fxs.length : 0}<br/>\r\n\t\t{/if}\r\n\t</Col>\r\n</Row>\r\n\r\n<style>\r\n\t.relative {\r\n\t\tposition: relative;\r\n\t}\r\n</style>","<script>\r\n    import { Col, Container, Row } from 'sveltestrap';\r\n    import { Router, Route, Link } from \"svelte-navigator\";\r\n    \r\n    import Header from './components/header.svelte';\r\n    import Footer from './components/footer.svelte';\r\n    import Studio from \"./sections/studio.svelte\";\r\n\r\n    const scrollToTop = () => {\r\n\t\tscrollTo({top: 0});\r\n\t}\r\n\r\n</script>\r\n\r\n<!-- <Router basepath=\"/indexao-online/\"> -->\r\n<Router basepath=\"/\">\r\n    <Container fluid=\"true\">\r\n        <Row><Header /></Row>\r\n        <Row style=\"padding-top:1em;\">\r\n            <!-- <Route path=\"landing\" component={Landing} /> -->\r\n            <Route path=\"\" component={Studio} />\r\n        </Row>\r\n        <Row cols={{ md: 2, sm: 1 }} style=\"padding-top:1em;\">\r\n            <Footer on:scrollToTop={() => scrollToTop()} />\r\n        </Row>\r\n    </Container>\r\n</Router>\r\n","import App from './app.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","compute_slots","slots","key","set_store_value","ret","set","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","abort","append","target","node","appendChild","get_root_for_style","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","sheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","name","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","cssText","to_number","set_data","wholeText","set_input_value","input","set_style","important","removeProperty","setProperty","select_option","select","option","__value","selected","selectedIndex","select_options","indexOf","toggle_class","toggle","classList","custom_event","type","detail","bubbles","e","createEvent","initCustomEvent","HtmlTag","constructor","this","n","html","h","m","nodeName","t","innerHTML","Array","from","childNodes","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","deleted","join","deleteRule","clear","set_current_component","get_current_component","Error","onMount","on_mount","afterUpdate","after_update","onDestroy","createEventDispatcher","call","setContext","context","getContext","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","add_flush_callback","seen_callbacks","flushidx","saved_component","update","pop","fragment","before_update","wait","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_in_transition","params","animation_name","config","running","cleanup","go","easing","tick","css","start_time","end_time","started","start","invalidate","end","create_out_transition","group","reset","create_bidirectional_transition","intro","running_program","pending_program","clear_animation","init","program","abs","handle_promise","token","index","resolved","child_ctx","current","needs_flush","blocks","mount","error","catch","hasCatch","pending","update_await_block_branch","get_spread_update","levels","updates","to_null_out","accounted_for","get_spread_object","spread_props","bind","bound","create_component","mount_component","customElement","new_on_destroy","map","destroy_component","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","skip_bound","ready","fill","make_dirty","hydrate","nodes","children","l","SvelteComponent","$destroy","$on","splice","$set","$$props","obj","$$set","setScrollbarWidth","padding","body","paddingRight","isObject","conditionallyUpdateScrollbar","scrollbarWidth","scrollDiv","position","top","width","height","overflow","offsetWidth","clientWidth","getScrollbarWidth","fixedContent","querySelectorAll","bodyPadding","parseInt","innerWidth","getColumnSizeClass","isXs","colWidth","colSize","toClassName","isArray","Boolean","classnames","args","getTransitionDuration","transitionDuration","transitionDelay","getComputedStyle","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","uuid","replace","random","toString","subscriber_queue","writable","stop","subscribers","new_value","run_queue","subscriber","derived","stores","initial_value","single","stores_array","auto","inited","values","sync","unsubscribers","backdropIn","display","backdropOut","remove","collapseOut","getBoundingClientRect","collapseIn","scrollHeight","modalIn","modalOut","defaultToggleEvents","isOpen","className","navbar","onEntering","onEntered","onExiting","onExited","expand","toggler","togglerFn","unbindEvents","selection","preventDefault","windowWidth","_wasMaximized","minWidth","notify","classes","fade","linear","opacity","heading","color","closeClassName","closeAriaLabel","dismissible","transition","showClose","handleToggle","closeClassNames","href","pill","close","disabled","inner","outline","white","ariaLabel","defaultAriaLabel","inverse","xs","sm","md","lg","xl","xxl","colClasses","lookup","columnProp","colSizeInterfix","colClass","pull","offset","order","fluid","container","checked","id","inline","invalid","label","valid","inputClasses","idFor","tooltip","validMode","check","floating","row","tag","alt","figure","thumbnail","bsSize","feedback","files","multiple","placeholder","plaintext","readonly","isNotaNumber","RegExp","isBtn","formControlClass","test","console","warn","selected_option","querySelector","hidden","fore","colWidths","widths","numbered","action","loaded","ref","portal","openCount","dialogBaseClass","_triggeringElement","_originalBodyPadding","_dialog","_mouseDownElement","_removeEscListener","staticModal","autoFocus","centered","fullscreen","header","scrollable","labelledBy","backdrop","wrapClassName","modalClassName","contentClassName","unmountOnClose","returnFocusAfterClose","hasOpened","_isMounted","_lastIsOpen","_lastHasOpened","setFocus","focus","activeElement","err","getPropertyValue","getOriginalBodyPadding","manageFocusAfterClose","destroy","outer","InlineContainer","Portal","stopPropagation","backdropElem","browserEvent","tabs","pills","vertical","horizontal","justified","card","getVerticalClass","inNavbar","dark","fixed","light","sticky","getExpandClass","stopImmediatePropagation","listClassName","listClasses","defaultCaret","first","last","realLabel","noGutters","form","cols","colsValue","isNaN","getCols","isUndefined","isNumber","createCounter","isSSR","addListener","createKey","ctxName","LOCATION","ROUTER","ROUTE","ROUTE_PARAMS","FOCUS_ELEM","paramRegex","startsWith","string","search","substr","isSplat","segment","stripSlashes","segmentize","uri","filterFalsy","segments","addQuery","pathname","query","normalizePath","path","pathFragments","joinedSegments","labels","createLabel","labelId","createMessage","message","originId","origin","to","basepath","createIdentifier","originMsg","createMessageHandler","fail","rankRoute","route","score","default","fullPath","reduce","acc","nextScore","isRootSegment","isDynamic","SEGMENT_POINTS","pick","routes","bestMatch","defaultMatch","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","createMatch","routeSegments","routeSegment","uriSegment","splatName","decodeURIComponent","dynamicMatch","exec","match","normalizeLocation","location","state","baseSegments","pathSegments","shift","normalizeUrlFragment","frag","createLocation","url","searchIndex","hashIndex","hasSearchIndex","hasHashIndex","pathnameAndSearch","resolveLink","routeBase","appBase","base","toPathname","toQuery","basePathname","toSegments","concat","allSegments","extractBaseUri","routePath","routeMatch","POP","getLocation","source","encodeURI","decodeURI","history","_key","createStackFrame","canUseDOM","isEmbeddedPage","globalHistory","listeners","notifyListeners","listenerFns","listener","unlisten","navigate","keyedState","substring","createHistory","initialPathname","stack","entries","pushState","title","replaceState","newIndex","createMemorySource","focusCandidate","initialNavigation","pushFocusCandidate","item","level","routerIdA","routerIdB","routerMarkers","currentId","dataset","svnavRouter","isAbove","routerId","elem","TABINDEX","hasAttribute","blurListener","isEndMarker","svnavRouteEnd","selector","parent","handleFocus","focusElement","nextElementSibling","tagName","queryHeading","documentElement","createTriggerFocus","a11yConfig","announcementText","manageFocus","announceNavigation","announcements","meta","announcementMessage","createAnnouncement","createId","defaultBasepath","primary","a11y","initialBasepath","normalizedBasepath","locationContext","routerContext","isTopLevelRouter","activeRoute","hasActiveRoute","prevLocation","$location","triggerFocus","createRouteFilter","routeId","routeList","routeItem","changedHistory","normalizedLocation","registerRoute","matchingRoute","prevRoutes","nextRoutes","unregisterRoute","$routes","hasHash","shouldManageFocus","$prevLocation","$activeRoute","usePreflightCheck","componentId","ctxKey","ctxProviderId","useLocation","toReadonly","useRouteBase","_route","useNavigate","useResolve","useHistory","parentBase","ssrMatch","isDefault","rawBase","$parentBase","updatedRoute","isActive","activeParams","Storage","prototype","setObject","setItem","JSON","stringify","getObject","getItem","parse","resourcesGraphics","sectionActive","localStorage","indexSelected","fxSelected","headSelected","helmetSelected","bodiesSelected","flagIndexLoaded","flagResourcesLoaded","events","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","shimIndexedDB","GraphicsStore","IndexsStore","IndexTags","db","initializeDB","reject","request","open","onupgradeneeded","objectStoreNames","contains","createObjectStore","createIndex","onsuccess","log","onerror","async","SaveIndexs","putRequest","transaction","objectStore","put","LoadIndexs","returned","getAll","AddGraphic","grhnum","LoadGraphics","list","GetResourceBinary","writeLong","buffer","ArrayBuffer","DataView","setInt32","Uint8Array","writeInteger","setInt16","readLong","array","view","setUint8","getInt32","readInteger","getInt16","readDouble","getFloat32","stringToUTF8Bytes","utf8","charcode","readHeader","arrayBuffer","crc","magic","mode","uploading","msgError","msgResources","getElementById","alert","navigator","storage","estimate","quota","count","loading","file","grhNum","webkitRelativePath","pathString","lastIndexOf","Blob","reader","FileReader","onload","evt","base64body","btoa","readAsBinaryString","receivedBinary","includes","indexFile","version","maxGrh","indexs","temp","tempInit","String","fromCharCode","trim","toUpperCase","tempIndex","frames","y","w","speed","tempData","ReadStringIndex","fr","binaryFile","j","ReadBinaryIndex","$flagIndexLoaded","totalHelmets","Helmets","tempHelmet","helmet","ReadBinaryHelmet","totalBodies","Bodies","tempBody","headOffsetX","headOffsetY","ReadBinaryBodies","totalHeads","Heads","tempHead","ReadBinaryHead","totalFx","Fxs","tempOffset","tempFx","offsetX","offsetY","isPNG","ReadBinaryFx","newIndexs","indexsComplete","max_grh","cleanAll","tx","oncomplete","CleanGraphics","CleanIndexs","onBackToTop","resources","resourcesList","page","maxPages","editingPage","pageValue","filterResource","editPage","changePage","movePage","_move","_page","showPage","res","loadResources","ceil","unsubscribeResources","resource","$indexSelected","selectFormat","loadIndex","blobobject","setFloat32","CompileBinaryIndex","filename","msSaveOrOpenBlob","msSaveBlob","blob","URL","createObjectURL","oneTimeOnly","download","click","revokeObjectURL","iniFile","CompileIniIndex","reload","maxIndexPerPage","indexsTotal","fixedPreview","isSaveOK","clicking","_indexSelected","filterIndex","indexsList","findIndexOnPage","num","indexFound","pageFound","selectIndex","created","lastIndex","newNum","saveIndex","setTimeout","getIndexs","changeSection","section","$sectionActive","loadIndexs","unsubscribeGraphics","edited","ind","editSelected","unsubscribeEvents","numInd","img","image","minSpeedAnimation","mounted","runningAnimation","speedAnimation","imageLoaded","imgSource","imgTransp","showGrh","canvas","imageSmoothingEnabled","imageSmoothingQuality","fillStyle","fillRect","crossOrigin","ratio","min","drawImage","bufferctx","imageData","getImageData","transparent","putImageData","Image","toDataURL","RemoveBackground","clearInterval","frame","setInterval","showAnimation","loadGrh","hRatio","vRatio","lineWidth","strokeStyle","setLineDash","strokeRect","stroke","loadPreview","clearRect","deleteFrame","newFrames","addFrame","convertIndex","confirm","deleteIndex","resourcesHead","_headSelected","indexHead","indexData","$headSelected","resourcesHelmet","_helmetSelected","indexHelmet","$helmetSelected","resourcesBodies","_bodiesSelected","indexBodies","$bodiesSelected","resourcesFx","_fxSelected","indexFx","$fxSelected","heads","helmets","bodies","fxs","messageError","showDebug","$flagResourcesLoaded","Studio","scrollToTop","scrollTo"],"mappings":"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"}